cybsecorigout=c()
cybsecorigall=c()
for(i in cybindexes){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico==neigh[n]))
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigin=append(cybsecorigin,1-sum(probas^2))}
}
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
## second order originality ?
cybsecorigin=c()
cybsecorigout=c()
cybsecorigall=c()
for(i in 1:length(cybnodes)){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico==neigh[n]))
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigin=append(cybsecorigin,1-sum(probas^2))}
}
cybsecorigin=c()
cybsecorigout=c()
cybsecorigall=c()
for(i in 1:length(cybnodes)){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
show(neigh)
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico==neigh[n]))
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigin=append(cybsecorigin,1-sum(probas^2))}
}
cybsecorigin=c()
cybsecorigout=c()
cybsecorigall=c()
for(i in 1:length(cybnodes)){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
show(neigh)
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico)==neigh[n])
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigin=append(cybsecorigin,1-sum(probas^2))}
}
cybsecorigout=c()
#cybsecorigall=c()
for(i in 1:length(cybnodes)){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="out")$name
show(neigh)
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico)==neigh[n])
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigout=append(cybsecorigout,1-sum(probas^2))}
}
dat = data.frame(orig=c(cybsecorigin,cybsecorigout),type=c(rep("in",length(cybsecorigin),rep("out",length(cybsecorigout)))
)
)
c(cybsecorigin,cybsecorigout)
dat = data.frame(orig=c(cybsecorigin,cybsecorigout),type=c(rep("in",length(cybsecorigin)),rep("out",length(cybsecorigout)))
)
dat
g=ggplot(dat, aes(x=orig, fill=type)) + geom_density(alpha=.3)
ggplot(dat, aes(x=orig, fill=type)) + geom_density(alpha=.3)
sdat=as.tbl(dat)%>%group_by(type)%>%summarise(mean=mean(orig))
ggplot(dat, aes(x=orig, fill=type)) + geom_density(alpha=.3)+geom_vline(data=sdat, aes(xintercept=mean,  colour=cyb),linetype="dashed", size=1)
ggplot(dat, aes(x=orig, fill=type)) + geom_density(alpha=.3)+geom_vline(data=sdat, aes(xintercept=mean,  colour=type),linetype="dashed", size=1)
is.numeric("12")
as.numeric("12")
as.numeric("12mph")
is.numeric(as.numeric("12mph"))
gsub(x = "30 mph"," ","")
s=gsub(x = "30 mph"," ","")
s=gsub(x = s," ","")
s
sr=gsub(x = s," ","")
normalizedSpeed <- function(s){
if(!is.na(as.numeric(s))){return(as.numeric(s))}
sr=gsub(x = s," ","")
if(grepl("mph",sr)){return(as.numeric(gsub(x = sr,"mph",""))*1.609)}
else{return(NA)}
}
normalizedSpeed("30 mph")
normalizedSpeed("30mph")
normalizedSpeed("30")
normalizedSpeed(30)
raw <- raster(paste0(Sys.getenv("CN_HOME"),"/Data/PopulationDensity/raw/density_wgs84.tif"))
library(raster)
raw <- raster(paste0(Sys.getenv("CN_HOME"),"/Data/PopulationDensity/raw/density_wgs84.tif"))
raw
xyFromCell()
xyFromCell
xyFromCell(raw,1230)
library(RPostgreSQL)
library(rgeos)
con = dbConnect(dbDriver("PostgreSQL"), dbname="osm_simpl",user="Juste",host="localhost" )
query = dbSendQuery(con,"SELECT ST_AsText(geography) AS geom FROM links;")
data = fetch(query,n=-1)
geoms = data$geom
roads=list()
for(i in 1:length(geoms)){
r=readWKT(geoms[i])@lines[[1]];r@ID=as.character(i)
roads[[i]]=r
}
splines = SpatialLines(LinesList = roads)
plot(splines)
library(igraph)
help("difference")
real_raw = read.csv(
paste0(Sys.getenv("CN_HOME"),'/Results/Morphology/Density/Numeric/20150806_europe50km_10kmoffset_100x100grid.csv'),
sep=";"
)
real =real_raw[!is.na(real_raw[,3])&!is.na(real_raw[,4])&!is.na(real_raw[,5])&!is.na(real_raw[,6])&!is.na(real_raw[,7])&!is.na(real_raw[,8])&!is.na(real_raw[,9]),]
for(j in 1:ncol(real)){real[,j]=(real[,j]-min(real[,j]))/(max(real[,j])-min(real[,j]))}
library(RColorBrewer)
library(ggplot2)
library(MASS)
source(paste0(Sys.getenv('CN_HOME'),'/Models/Utils/R/plots.R'))
real_raw = read.csv(
paste0(Sys.getenv("CN_HOME"),'/Results/Morphology/Density/Numeric/20150806_europe50km_10kmoffset_100x100grid.csv'),
sep=";"
)
real =real_raw[!is.na(real_raw[,3])&!is.na(real_raw[,4])&!is.na(real_raw[,5])&!is.na(real_raw[,6])&!is.na(real_raw[,7])&!is.na(real_raw[,8])&!is.na(real_raw[,9]),]
real_ind = real[5*(0:(nrow(real)/5))+1,]
names(real)
indic="moran"
p = ggplot(data.frame(x=real$y,y=1-real$x,density_max=real[[indic]]),aes(x=x,y=y,colour=density_max))
p+geom_point()+xlab("")+ylab("")+labs(title=indic)+scale_colour_gradientn(colours=rev(rainbow(5)))+scale_y_continuous(breaks=NULL)+scale_x_continuous(breaks=NULL)
indic="distance"
p = ggplot(data.frame(x=real$y,y=1-real$x,density_max=real[[indic]]),aes(x=x,y=y,colour=density_max))
p+geom_point()+xlab("")+ylab("")+labs(title=indic)+scale_colour_gradientn(colours=rev(rainbow(5)))+scale_y_continuous(breaks=NULL)+scale_x_continuous(breaks=NULL)
map<-function(indic){
d=data.frame(x=real$y,y=1-real$x);d[[indic]]=real[[indic]]
p=ggplot(d,aes_string(x="x",y="y",colour=indic))
p+geom_point(shape=".",size=2)+xlab("")+ylab("")+labs(title=indic)+scale_colour_gradientn(colours=rev(rainbow(5)))+scale_y_continuous(breaks=NULL)+scale_x_continuous(breaks=NULL)
}
# multiplots
indics=c("moran","distance","entropy","slope")
plots=list();k=1
for(indic in indics){
plots[[k]]=map(indic)
k=k+1
}
multiplot(plotlist=plots,cols=2)
map<-function(indic){
d=data.frame(x=real$y,y=1-real$x);d[[indic]]=real[[indic]]
p=ggplot(d,aes_string(x="x",y="y",colour=indic))
p+geom_point(shape=".",size=1)+xlab("")+ylab("")+labs(title=indic)+scale_colour_gradientn(colours=rev(rainbow(5)))+scale_y_continuous(breaks=NULL)+scale_x_continuous(breaks=NULL)
}
# multiplots
indics=c("moran","distance","entropy","slope")
plots=list();k=1
for(indic in indics){
plots[[k]]=map(indic)
k=k+1
}
multiplot(plotlist=plots,cols=2)
names(real)
vars = c(3,4,5,6)
ccoef=c()
for(k in 2:15){
show(k)
clust = kmeans(real[,vars],k,iter.max=30)
#ccoef=append(ccoef,sum(clust$withinss/clust$size)/k)# mean cluster size
ccoef=append(ccoef,clust$tot.withinss/clust$betweenss)# clust coef
plot(real$y,1-real$x,col=clust$cluster,pch='.',cex=3,main=paste0('k=',k),xlab="",ylab="",xaxt='n',yaxt='n')
}
ccoef
vars = c(3,4,5,6)
ccoef=c()
for(k in 2:15){
show(k)
clust = kmeans(real[,vars],k,iter.max=30)
#ccoef=append(ccoef,sum(clust$withinss/clust$size)/k)# mean cluster size
ccoef=append(ccoef,clust$tot.withinss/(clust$betweenss+clust$tot.withinss))# clust coef
plot(real$y,1-real$x,col=clust$cluster,pch='.',cex=3,main=paste0('k=',k),xlab="",ylab="",xaxt='n',yaxt='n')
}
ccoef
vars = c(3,4,5,6)
ccoef=c()
par(mfrow=c(3,3))
for(k in 2:11){
show(k)
clust = kmeans(real[,vars],k,iter.max=30)
#ccoef=append(ccoef,sum(clust$withinss/clust$size)/k)# mean cluster size
withinProp=clust$tot.withinss/(clust$betweenss+clust$tot.withinss)
ccoef=append(ccoef,withinProp)# clust coef
plot(real$y,1-real$x,col=clust$cluster,pch='.',cex=3,main=paste0('k=',k,' ; withinProp=',withinProp),xlab="",ylab="",xaxt='n',yaxt='n')
}
vars = c(3,4,5,6)
ccoef=c()
par(mfrow=c(3,3))
for(k in 3:11){
show(k)
clust = kmeans(real[,vars],k,iter.max=30)
#ccoef=append(ccoef,sum(clust$withinss/clust$size)/k)# mean cluster size
withinProp=clust$tot.withinss/(clust$betweenss+clust$tot.withinss)
ccoef=append(ccoef,withinProp)# clust coef
plot(real$y,1-real$x,col=clust$cluster,pch='.',cex=3,main=paste0('k=',k,' ; withinProp=',withinProp),xlab="",ylab="",xaxt='n',yaxt='n')
}
shiny::runApp('~/Documents/ComplexSystems/CyberGeo/cybergeo20/Cybergeo20')
help("forceNetwork")
load('res/graph.RData')
setwd(paste0(Sys.getenv('CS_HOME'),'/TransportationEquilibrium/Models/Visu'))
load('res/graph.RData')
as.tbl(betweennessesdf)
source('functions.R')
source('prepareData.R')
source('functions.R')
db = dbConnect(SQLite(),"../../Data/Sytadin/data/sytadin_20160430.sqlite3")
data = dbGetQuery(db,'SELECT * FROM data;')
dim(data)
head(data)
data = data[,2:ncol(data)]
save(data,'shiny/data/all.RData')
save(data,file='shiny/data/all.RData')
data = dbGetQuery(db,'SELECT * FROM data;')
data[nrow(data),5]
save(data,file='shiny/data/all.RData')
setwd(paste0(Sys.getenv('CS_HOME'),'/TransportationEquilibrium/Models/Visu/shiny'))
load('data/february.RData')
head(data)
load('res/graph.RData')
setwd(paste0(Sys.getenv('CS_HOME'),'/TransportationEquilibrium/Models/Visu'))
load('res/graph.RData')
i=1440
time=times[i]
source('prepareData.R')
load('res/graph.RData')
time=times[i]
gg=constructGraph(data,roads,times,time)
i=1445
ds=fulldistances[[i]]$spaceDistances-fulldistances[[i-5]]$spaceDistances
show(max(abs(ds)));show(which(ds==max(ds)))
ds==max(ds)
colSums(ds==max(ds))
d=which(colSums(ds==max(ds)))
d=which(colSums(ds==max(ds))==1)
d
o=which(rowSums(ds==max(ds))==1);d=which(colSums(ds==max(ds))==1)
o
d
V(gg)[o]
for(i in seq(from = 1445,to=11520,by=5)){
ds=fulldistances[[i]]$spaceDistances-fulldistances[[i-5]]$spaceDistances
show(max(abs(ds)));
o=which(rowSums(ds==max(ds))==1);d=which(colSums(ds==max(ds))==1)
show(V(gg)[o]);show(V(gg)$[d])
}
for(i in seq(from = 1445,to=11520,by=5)){
ds=fulldistances[[i]]$spaceDistances-fulldistances[[i-5]]$spaceDistances
show(max(abs(ds)));
o=which(rowSums(ds==max(ds))==1);d=which(colSums(ds==max(ds))==1)
show(V(gg)[o]);show(V(gg)[d])
}
indexes=seq(from = 1445,to=11520,by=5)
maxdet=c();maxtime=c();od=list()
indexes=seq(from = 1445,to=11520,by=5)
for(ii in 1:length(indexes)){
i=indexes[ii]
ds=fulldistances[[i]]$spaceDistances-fulldistances[[i-5]]$spaceDistances
#show(max(abs(ds)));
o=which(rowSums(ds==max(ds))==1);d=which(colSums(ds==max(ds))==1)
#show(V(gg)[o]);show(V(gg)[d])
maxdet=append(maxdet,max(abs(ds)));maxtime=append(maxtime,abs(fulldistances[[i]]$timeDistances[o,d]-fulldistances[[i-5]]$timeDistances[o,d]))
od[[i]]=c(o,d)
}
maxdet
max(maxdet)
which(maxdet==max(maxdet))
imax = which(maxdet==max(maxdet))[1]
maxtime[imax]
indexes[imax]
gg=constructGraph(data,roads,times,times[indexes[imax]])
od[[imax]
]
head(od)
maxdet=c();maxtime=c();od=list()
indexes=seq(from = 1445,to=11520,by=5)
for(ii in 1:length(indexes)){
i=indexes[ii]
ds=fulldistances[[i]]$spaceDistances-fulldistances[[i-5]]$spaceDistances
#show(max(abs(ds)));
o=which(rowSums(ds==max(ds))==1);d=which(colSums(ds==max(ds))==1)
#show(V(gg)[o]);show(V(gg)[d])
maxdet=append(maxdet,max(abs(ds)));maxtime=append(maxtime,abs(fulldistances[[i]]$timeDistances[o,d]-fulldistances[[i-5]]$timeDistances[o,d]))
od[[ii]]=c(o,d)
}
od[imax]
V(gg)[3]
V(gg)[7]
maxdet[imax]
ggprev=constructGraph(data,roads,times,times[indexes[imax]-5])
shortest_paths(gg,from=V(gg)[3],to=V(gg)[7])
shortest_paths(gg,from=V(gg)[3],to=V(gg)[7],output="both")
shortest_paths(gg,from=V(gg)[3],to=V(gg)[7],output="both",weights = E(gg)$traveltime)
shortest_paths(ggprev,from=V(ggprev)[3],to=V(ggprev)[7],output="both",weights = E(ggprev)$traveltime)
maxdet=c();maxtime=c();od=list()
indexes=seq(from = 1445,to=11520,by=5)
for(ii in 1:length(indexes)){
i=indexes[ii]
ds=fulldistances[[i]]$spaceDistances-fulldistances[[i-5]]$spaceDistances
#show(max(abs(ds)));
o=which(rowSums(ds==max(ds))==1);d=which(colSums(ds==max(ds))==1)
#show(V(gg)[o]);show(V(gg)[d])
maxdet=append(maxdet,max(abs(ds)));maxtime=append(maxtime,abs(fulldistances[[i]]$timeDistances[o,d]-fulldistances[[i-5]]$timeDistances[o,d]))
od[[ii]]=c(o,d)
}
imax = which(maxdet==max(maxdet))[1]
imax
maxtime[imax]
indexes[imax]
od[[imax]]
maxdet[imax]
max(maxtime)
maxdet=c();maxtime=c();od=list();maxalltimes=c()
indexes=seq(from = 1445,to=11520,by=5)
for(ii in 1:length(indexes)){
i=indexes[ii]
ds=fulldistances[[i]]$spaceDistances-fulldistances[[i-5]]$spaceDistances
#show(max(abs(ds)));
o=which(rowSums(ds==max(ds))==1);d=which(colSums(ds==max(ds))==1)
#show(V(gg)[o]);show(V(gg)[d])
maxdet=append(maxdet,max(abs(ds)));maxtime=append(maxtime,abs(fulldistances[[i]]$timeDistances[o,d]-fulldistances[[i-5]]$timeDistances[o,d]))
maxalltimes=append(maxalltimes,max(abs(fulldistances[[i]]$timeDistances-fulldistances[[i-5]]$timeDistances)))
od[[ii]]=c(o,d)
}
maxalltimes
max(maxalltimes)
imax = which(maxalltimes==max(maxalltimes))[1]
imax
gg=constructGraph(data,roads,times,times[indexes[imax]])
ggprev=constructGraph(data,roads,times,times[indexes[imax]-5])
maxdet=c();maxtime=c();odspace=list();odtime=list();maxalltimes=c()
indexes=seq(from = 1445,to=11520,by=5)
for(ii in 1:length(indexes)){
i=indexes[ii]
ds=abs(fulldistances[[i]]$spaceDistances-fulldistances[[i-5]]$spaceDistances)
#show(max(abs(ds)));
o=which(rowSums(ds==max(ds))==1);d=which(colSums(ds==max(ds))==1)
#show(V(gg)[o]);show(V(gg)[d])
maxdet=append(maxdet,max(abs(ds)));maxtime=append(maxtime,abs(fulldistances[[i]]$timeDistances[o,d]-fulldistances[[i-5]]$timeDistances[o,d]))
maxalltimes=append(maxalltimes,max(abs(fulldistances[[i]]$timeDistances-fulldistances[[i-5]]$timeDistances)))
odspace[[ii]]=c(o,d)
#odtime[[ii]]=c(o,d)
}
imax = which(maxdet==max(maxdet))[1]
imax
odspace[[imax]]
V(gg)
V(ggprev)
maxdet=c();maxtime=c();odspace=list();odtime=list();maxalltimes=c()
indexes=seq(from = 1445,to=11520,by=5)
for(ii in 1:length(indexes)){
i=indexes[ii]
ds=abs(fulldistances[[i]]$spaceDistances-fulldistances[[i-5]]$spaceDistances)
dt=abs(fulldistances[[i]]$timeDistances-fulldistances[[i-5]]$timeDistances)
#show(max(abs(ds)));
o=which(rowSums(ds==max(ds))==1);d=which(colSums(ds==max(ds))==1)
#show(V(gg)[o]);show(V(gg)[d])
maxdet=append(maxdet,max(abs(ds)));maxtime=append(maxtime,abs(fulldistances[[i]]$timeDistances[o,d]-fulldistances[[i-5]]$timeDistances[o,d]))
maxalltimes=append(maxalltimes,max(dt))
odspace[[ii]]=c(o,d)
odtime[[ii]]=c(which(rowSums(dt==max(dt))==1),which(colSums(dt==max(dt))==1))
}
imax = which(maxalltimes==max(maxalltimes))[1]
odtime[[imax]]
gg=constructGraph(data,roads,times,times[indexes[imax]])
ggprev=constructGraph(data,roads,times,times[indexes[imax]-5])
shortest_paths(gg,from=V(gg)[20],to=V(gg)[25],output="both",weights = E(gg)$traveltime)
shortest_paths(ggprev,from=V(ggprev)[20],to=V(ggprev)[25],output="both",weights = E(ggprev)$traveltime)
fulldistances[[indexes[imax]]]$timeDistances[20,25]
fulldistances[[indexes[imax]]]$timeDistances
fulldistances[[indexes[imax]]]$timeDistances[20,25]
distances(gg,weight=E(gg)$traveltime))[20,25]
distances(gg,weight=E(gg)$traveltime)[20,25]
distances(ggprev,weight=E(ggprev)$traveltime)[20,25]
indexes[imax]-5
indexes[imax]
times[indexes[imax-1]]
times[indexes[imax]]
plot(maxalltimes,type='l')
plot(maxdet,type='l')
plot(times[indexes]/3600,maxalltimes,type='l')
times[indexes]
plot((times[indexes]-times[indexes[1]])/3600,maxalltimes,type='l',xlab="time(h)",ylab="max temporal var")
plot((times[indexes]-times[indexes[1]])/3600,maxalltimes,type='l',xlab="time(h)",ylab="max temporal var",ylim=c(0,40))
plot((times[indexes]-times[indexes[1]])/3600,maxalltimes,type='l',xlab="time(h)",ylab="max temporal var (min)",ylim=c(0,30))
g=ggplot(data.frame(dates=dates[indexes],maxalltimes))
library(ggplot2)
g=ggplot(data.frame(dates=dates[indexes],maxalltimes))
g+geom_line(aes(dates,maxalltimes,color="mean"))+geom_line(aes(dates,bmed,color="med"))+xlab("time(h)")+ylab("max temporal var (min)")+ylim(c(0,30)) + theme(axis.text.x = element_text(angle = 90))
g=ggplot(data.frame(dates=dates[indexes],maxalltimes))
g+geom_line(aes(dates,maxalltimes),colour="lightskyblue3")+stat_smooth(method="loess", span=0.025,n=400,se = FALSE) +xlab("time(h)")+ylab("max temporal var (min)")+ylim(c(0,30)) + theme(axis.text.x = element_text(angle = 90))
g+geom_line(aes(dates,maxalltimes),colour="lightskyblue3")+stat_smooth(method="loess", span=0.1,n=400,se = FALSE) +xlab("time(h)")+ylab("max temporal var (min)")+ylim(c(0,30)) + theme(axis.text.x = element_text(angle = 90))
g+geom_line(aes(dates,maxalltimes),colour="lightskyblue3")+stat_smooth(method="loess", span=1,n=400,se = FALSE) +xlab("time")+ylab("max temporal var (min)")+ylim(c(0,30)) + theme(axis.text.x = element_text(angle = 90))
g+geom_line(aes(dates,maxalltimes),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE) +xlab("time")+ylab("max temporal var (min)")+ylim(c(0,30)) + theme(axis.text.x = element_text(angle = 90))
g+geom_line(aes(dates,maxalltimes),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE,colour="blue") +xlab("time")+ylab("max temporal var (min)")+ylim(c(0,30)) + theme(axis.text.x = element_text(angle = 90))
g+geom_line(aes(dates,maxalltimes),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE,colour="blue") +xlab("time")+ylab("max temporal var (min)")+ylim(c(0,25)) + theme(axis.text.x = element_text(angle = 90))
g=ggplot(data.frame(dates=dates[indexes],maxdet))
g+geom_line(aes(dates,maxalltimes),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE,colour="blue") +xlab("time")+ylab("max spatial detour (km)") + theme(axis.text.x = element_text(angle = 90))
g+geom_line(aes(dates,maxdet),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE,colour="blue") +xlab("time")+ylab("max spatial detour (km)") + theme(axis.text.x = element_text(angle = 90))
betweennessesdf
as.tbl(betweennessesdf)
as.tbl(betweennessesdf)%>% group_by(btimes)
as.tbl(betweennessesdf)%>% group_by(btimes)%>%summarise(bmean=mean(betweennesses))
bdf  =as.tbl(betweennessesdf)%>% group_by(btimes)%>%summarise(bmean=mean(betweennesses))
diff(bdf[,2])
bdf[,2]
bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2]
(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2]
g=ggplot(data.frame(dates=dates[indexes],relvar=(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2]),aes(dates,relvar))
g+geom_line(colour="lightskyblue3")+stat_smooth(method="loess", span=0.025,n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("∆b / b")
g=ggplot(data.frame(dates=dates[indexes],relvar=(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2]))
g+geom_line(aes(dates,relvar),colour="lightskyblue3")+stat_smooth(method="loess", span=0.025,n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("∆b / b")
g+geom_line(aes_string("dates","relvar"),colour="lightskyblue3")+stat_smooth(method="loess", span=0.025,n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("∆b / b")
bdf=data.frame(dates=dates[indexes],relvar=(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2])
g=ggplot(bdf)
g+geom_line(aes_string("dates","relvar"),colour="lightskyblue3")+stat_smooth(method="loess", span=0.025,n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("∆b / b")
head(bdf)
g+geom_line(aes_string("dates","bmean"),colour="lightskyblue3")+stat_smooth(method="loess", span=0.025,n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("∆b / b")
bdf  =as.tbl(betweennessesdf)%>% group_by(btimes)%>%summarise(bmax=mean(betweennesses))
bdf=data.frame(dates=dates[indexes],relvar=(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2])
g=ggplot(bdf)
g+geom_line(aes_string("dates","bmean"),colour="lightskyblue3")+stat_smooth(method="loess", span=0.025,n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("∆b / b")
g+geom_line(aes_string("dates","bmax"),colour="lightskyblue3")+stat_smooth(method="loess", span=0.025,n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("∆b / b")
g+geom_line(aes_string("dates","bmax"),colour="lightskyblue3")+stat_smooth(method="loess",n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("∆b / b")
bdf  =as.tbl(betweennessesdf)%>% group_by(btimes)%>%summarise(bmax=max(abs(betweennesses)))
(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2]
bdf=data.frame(dates=dates[indexes],relvar=(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2])
g=ggplot(bdf)
g+geom_line(aes_string("dates","bmax"),colour="lightskyblue3")+stat_smooth(method="loess",n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("∆b / b")
bdf  =as.tbl(betweennessesdf)%>% group_by(btimes)%>%summarise(bmax=max(abs(betweennesses)))
(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2]
bdf=data.frame(dates=dates[indexes],relvar=abs(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2])
g=ggplot(bdf)
g+geom_line(aes_string("dates","bmax"),colour="lightskyblue3")+stat_smooth(method="loess",n=400,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("")+ylab("|∆b| / b")
g+geom_line(aes_string("dates","bmax"),colour="lightskyblue3")+stat_smooth(method="loess",n=1000,se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("time")+ylab("|∆b| / b")
g+geom_line(aes_string("dates","bmax"),colour="lightskyblue3")+stat_smooth(se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("time")+ylab("|∆b| / b")
bdf=data.frame(dates=(times[indexes]-times[indexes[1]])/3600,relvar=abs(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2])
(times[indexes]-times[indexes[1]])
bdf=data.frame(dates=(times[indexes]-times[indexes[1]])/3600,relvar=abs(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2])
bdf  =as.tbl(betweennessesdf)%>% group_by(btimes)%>%summarise(bmax=max(abs(betweennesses)))
nrow(bdf)
nrow(times[indexes]-times[indexes[1]])
length(times[indexes]-times[indexes[1]])
bdf=data.frame(dates=(times[indexes[2:length(indexes)]]-times[indexes[1]])/3600,relvar=abs(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2])
length(indexes[2:length(indexes)])
bdf=data.frame(dates=(times[indexes[1:length(indexes)]]-times[indexes[1]])/3600,relvar=abs(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2])
g=ggplot(bdf)
g+geom_line(aes_string("dates","bmax"),colour="lightskyblue3")+stat_smooth(se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("time")+ylab("|∆b| / b")
bdf  =as.tbl(betweennessesdf)%>% group_by(btimes)%>%summarise(bmax=max(abs(betweennesses)))
(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2]
bdf=data.frame(dates=dates[indexes],relvar=abs(bdf[2:nrow(bdf),2]-bdf[1:(nrow(bdf)-1),2])/bdf[1:(nrow(bdf)-1),2])
g=ggplot(bdf)
g+geom_line(aes_string("dates","bmax"),colour="lightskyblue3")+stat_smooth(se = FALSE) + theme(axis.text.x = element_text(angle = 90))+
xlab("time")+ylab("|∆b| / b")
g=ggplot(data.frame(dates=dates[indexes],maxdet))
warnings()
ggThemeAssist:::ggThemeAssistAddin()
ggThemeAssist:::ggThemeAssistAddin()
g+geom_line(aes(dates,maxdet),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE,colour="blue") +xlab("time")+ylab("max spatial detour (km)") + theme(axis.text.x = element_text(angle = 90))
+ theme(axis.text.x = element_text(size = 17),
axis.text.y = element_text(size = 23))
ggThemeAssist:::ggThemeAssistAddin()
ggThemeAssist:::ggThemeAssistAddin()
ggThemeAssist:::ggThemeAssistAddin()
ggThemeAssist:::ggThemeAssistAddin()
g+geom_line(aes(dates,maxdet),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE,colour="blue") +xlab("time")+ylab("max spatial detour (km)") +
theme(axis.text.x = element_text(size=20,angle = 90), axis.text.y = element_text(size = 20))
g+geom_line(aes(dates,maxdet),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE,colour="blue") +xlab("")+ylab("max spatial detour (km)") +
theme(axis.text.x = element_text(size=20,angle = 90), axis.text.y = element_text(size = 20))
g=ggplot(data.frame(dates=dates[indexes],maxalltimes))
g+geom_line(aes(dates,maxalltimes),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE,colour="blue") +xlab("")+ylab("max travel time var (km)") +
theme(axis.text.x = element_text(size=20,angle = 90), axis.text.y = element_text(size = 20))
g+geom_line(aes(dates,maxalltimes),colour="lightskyblue3")+stat_smooth(method="loess", span=10,n=400,se = FALSE,colour="blue")+ylim(c(0,25)) +xlab("")+ylab("max travel time var (km)") +
theme(axis.text.x = element_text(size=20,angle = 90), axis.text.y = element_text(size = 20))
g=ggplot(bdf)
g+geom_line(aes_string("dates","bmax"),colour="lightskyblue3")+stat_smooth(se = FALSE) + theme(axis.text.x = element_text(angle = 90,size=20),axis.text.y=element_text(size=20))+
xlab("time")+ylab("|∆b| / b")
