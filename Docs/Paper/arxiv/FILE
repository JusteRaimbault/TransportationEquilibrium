%!PS-Adobe-3.0
/dvidict 326 dict def
currentfile eexec
BBCE9312DEBF5491BA1AB22F4F717DE9651FA1328A20A631DFB8E18A6488F712B4C8AAC5D4AB86
9C188FEB8F496666CF0D1E81D2F9F224F14092ABF57DBAA8D244B5C42FF2BD5CFE88105650E1E8
B529B046AEB1FD7D0931FE6D5A9309DC5C6F0D39874A84EF5D0221230ACDC1CE1A091FD6B91B88
0C22F3124C14B8E1B9EEA6BBAF9EB585780B6D4BCFBFF7FEFB763518871A24EC1389E570FDF957
5D445950B1BF9AE07BED64FC2CFC495DFACABABDF65E27C9D1653B17ECFA7BD827F59EDD60BB94
9F3EFC57E45194954CFBF862A49E5EACDB039BBCBA4A0603EC5189AA2B03323306C68E3B9046BE
B1736495DD139DE6449E42D24DA3F916AA6062850CEA15A04A1CE9AE667C518B2E2695D195545F
C94028EC87E9FA536B4817A2AD1FFB577690D07B84A59B2318445E5DBBF75CF20CE0D73D6AB0D7
F62E32EC367A4F6AF6D9CD25DA33A84952854BE318CB7DB7BC76B1A8B8FAFAE43FF2A3A217AC0C
24FB2772B27054A2FD952000262C4AF50F16058D98B1B956C50EE8FAE6ABF8AEA371FF42678C82
6C76E772DF75273E5DC29EF6552CC8890C7E759C30ED2E98092AB81CED24766DCFE5E5863B5887
BE08EB8E2F9545CB402014C60B230D9DE838DE02E439EE3BF0E34DB2148BB9F38262DF7A25D911
B2A269B0E6D5DA439F281E9A73864AE8EE3F9FDF28CB3E12D1F23C5591C5BBC5470520F8ECA561
CD9D2AC758ADE09DCDBB55CF26AE450A069DFF0420B98AF6251709D9008382E93C5DE576BD1D98
AAEDEA9E53A83CF6251BEA77FC13D2BC5EC438A82422F0F2BBA86B5ADD890DB92BE81ACDE16366
1F01450A5FD55C29B02D7C7C6B8215D6BCCB5360F46915E1C0DC6CA2CA33871EA6F05BABB8D8CF
05463D01CEE727833D25A2B3647233E0B4E7E25B01475F70B18A01CE5E200D08092F3FF6BE4264
346CB676BE3CFA915B32D34554FF97540A6B9AFE4622085C7AA4FD94631CF8DC370AB2183A3E7D
8913C3689DA84AD74D5D4FD3DAE4DC57F53545E9C131E002F69B5A6A8DA22CACE472EB864401B8
E8AD98118EA0A5773A1D7B0A449F5F9AC2A7EE8E1357B3CAF077A53D0141C860CFFE7F225278CB
B7882621A5BF2CA6BC5E4790661801586CB76BBC08B3F5425F7184E1C00B4A7959A5974E631B08
0D0D060EB7BDE5E746668948FA92FFCE3D4537D5A5C0AF6D29A2BDB3CA60EB73684159F64BC14F
DC9BC099B2EA665530E84134C4E3DEB83AF344A9A2F82EA386A52A6EC6D3E73222EF9E49A0C79D
E106BF5F65E9E3E8345899FB8341AFBABBDE0CA993D02512F1A942F08A5C560D3E127F8220262E
C33ED6FBC968FA02E689F0951D851FF2C50FB1553CDCE8FE9BD0D44B9AA600C45DD30C081BA566
D682A87AE2091C655F87B41B60D5F4D3419E7DAD73D7F0CA34E19661A4A1885C521463B8937D70
770296C054A128A02E7E5CCBEF56B71C68A1E896708CE465FEC07C3DEDA73AB072E7C2038C40CB
BBDA090CA8B3B4A83FD495F6AA0A2EC14C86B8DE22766E208F070E45BF1D54D73EEA493EE2347F
294F7A559EFD22282DA2658C1CE19103D88308EA9500E243E1F2D09B62A7DC3BD745FFDAB33B8C
5386F62338DF1FBF0179C0B9427F25F65C80466080B3D96280B5DCB6949CB24491C29222C53F63
93FF71726F680ED10F509F59E2440C745A0A02FE54D03D4395B4DC8D6DA65B28C8AE409FCD866D
4C4FAA387E31DF51E6CBF857733CA15476F9465D1D0BBC1F40C2A5C76C8040D849658837C4C26D
10630724819744E1AD3A2CC13F037CD4CB12929F54352B5436A80A29A175F0DD3CB52086947E15
4F5AAC2D47C9D423EAD27A8544618C67B01B3F20B10B73854B1D6D5C181FE08083CC099607AA14
E64A096E01475EAB45D6FFE544458313BC0EDAE8DAEA2A010567CC9E0C5BA05435D2CF34948CC2
D1A3AF78AFFE95BDE02C00C43758F8A4DCBD941622121FB0BB04ED9160A0FC9DC6958A7E1089A6
3CE75BB32FB50CF4FB6B5F08D7FBCD882E39007DEFD12383CE41672F3E321D6A888F56D946B539
E1DCDEF7899A883349BEF80358FEC58851B182A5DC291F5A137A62D72BF97406D6C743D90D983D
333615C3E90C648BB38C9670CE451F1CCDCC028EBAC5F59D3552C766AE3667E066EBC7BA21D334
9E8B9FBA23595843BBFC2456C0A60C7A2B1C51C093F7416C67F480C7F30EC13B0CE432D31F17CA
0C9E53FA6AA2F46DD6D0001451A4E0645CF41F21EEE20AFB05E333517F3078012E6214EE9C2B71
7CCBE093FA1E065F055BE1F88FB7D671ED55B522BF5847DA2858F24D85ADA018F2935E5FC2660C
19D547A17921ABAFF2B304D8CCCD5C8328795B5D96416C2BF50984F95842D944F151C45029456A
092728276A0FB6B3630364226B0FEB90EFE1D73C00950AB88A91C519755A7C02BD304B156DB6CD
5DC011D7CB56D616A9E1B62DD5C1B92923BDECF9E4DC29C4EBB6357AE6E4100885E0170DF8E532
069DFCF584775A5A9F67459A56C23C599149B9DDA195EDF8AB8F48E6830A921A8FE3FB21297653
39B4A5253BFC13755A970EFA00F95ACE255E711838F8FD47BACCC13C89EFF089EAB07A680C95F7
6B7660C436ACFBB6E1892B0047756B7569CCE3E9D67F908174FC251D411D54E3B2EF969E77926B
E30EDCAB35243C372701752ABBF8BECF2189FF7101342B932AA28FFB61F43A2560B9ED336A4B3D
D0C4ADBE920CD0212B82DD5331CF28BA864A0523CC9B2F22F186AFD7B74F1EC740385F38DE3197
F57EF6208A5B110D18E38DA9C4B5CB29AD2A5DFE3EA666CFBD331A46CEE27CFBF0CAB700CEB8D8
07BAB6F1A1A6549552F975441B938ADC0AEFE132F83A686A1026F5F69CA9B3007AC23E2C487EAD
225EBC967BB1D681FA4BDB3942B724244EB4F14F8C882E44F382F727D4E0D324DFB5F2544509A8
AB52F053924E18EA76C31A9B98F532FA02947E953D0B5755F953E420B2EC90F10B49711A2A00CE
8D8BD52F466EF78F08370E699845C647A10D1023A8B431825C388501F29C3E0EBC3402A96FF090
D021F1C98ABAF0F1CCE96C3851A1B95927DDD29AEFED8CBD3EFD62ED86C4E2C21128B5FE606BE7
F5503451AA9B4FBBA5965D788C8689B79FDFF04EC124976AF0A4ECF375BFA83B7A67DB2A293C3E
DCB1A4F4B41CFFED2D01FF0A795E0AB92B68E81C050EB7B1D80BF05C51E1EB286A8F851C5ED647
7CFA15E64D60B82D708F4D7DF7B310B74157E8251191189485B2CAE73CAFD0531EBDEF5B38BD28
5D7E43DFA7E55A3D5BF96D03724F040D2B41D668726098C5EE7154BF1242FAE0136A1363D680F9
AB72DBA006B7F3EEDEE112A99016172E16A7A71A366F1E40F8EAA86B8F7EF1B5C151298C1BBDD0
C0FA834DD3175E3BB6B08BB4F8C393E6FF3A9356AB48763F8475FEE50A3A43612CC8DF55652067
1C54921666CC3C8BD8C3804B0375D8DC94DCF229D2FD18F3029F1856543AE7A49A40EA2CEFA4D4
A89C4F886FB38E970CBDC6538E614EA774377F74680EE3A24493F17A05A254202DF67B7BD5B9FA
E2E4F29F1288294231AB96C36CDEEAE4CAA9F4C911FC087C88ED6BAEC166C57C5398CFE44A6901
3B52C8128F1F0DF821F89DA3EAD9187C3032F3823E7A24F78ED1C4CA090E3ADB6DD02FE4B45E7F
64D57AF37CDD40FB2460826D3FAE67177E660E396344501481BC2647EC7868A016B8401A5F3E4A
FBBB8674372011359AD65A346A6056BA8B79C9A66791A27C8D45E23DF3A6640B1B7D8C4CBC9D44
286E865721AFED088BB08BBECA7B5C4BF5737437D81400B698899A1A1116753466CEA00590C258
A5F0326A2AE61ABE0752072F0E1E1EE3B2554405BB5B72EE008E387BAAEC7CA97633FA4A3A631D
7A531987F813A24AFC8E8193765D6221E168F940911387E8A8D51F69BBA051BA0A8BA0720F7968
F669A76E1A16C5EF00C89C60196EDB623BC8B7488AB5D2CC4E6E7AD495181DDBE924331CF4F798
F7D7CB227A802C71BEBCB70BE6A8D581629D563926395E26C5519F411174C7A606ECB7636C1783
6783D05073A4FD9A44E207F3C551FA6082B3499B5BF70194F4101CC323127523440979D4A10DBC
E5E66BF2300133DCEA351EA5822E1257FBA34A20313F5147504C7FB20129CBCCB29EC577E5572C
5693519AA6C9B5141CFF17B3FA6D7A4D18AF8D0C44E01D3BEFE22724F2804C6D3EF92C747311BD
CD5E704EADC1F82BA0905BA2CC33355BB8DDD24F3289F83A2447CF5D1A97D5E6C2D0EB2C76489F
BA8CB339FC82DAA7C589FBD1F29FE2302F39611457B2ECA36722CC10439A97CACB5DA80ED7FBD9
BB62C08A5F80D80C1BD73C94EC64C6E1CE9D66C0B4A270DCC2D845C7F238BBCA97E644EB43B6B8
E714D4E28D212D397D195A393DE7D53B6FA98172C168E75A93D49778CB2D00121F98FC3013057E
6AFAD6EC23FDB128649A266795924D5D65788F6078DFF5DAB503C5434337659D3A6CE7C5B953F0
289FC06CE2AC317CE7034D9FEF30B37D0D04E8253866D482065308E20B38CBB1DAD8A2A3386728
81AC0F39289942994EABA87597F85CA8C14577E08F5AB490329F3541793543D278F4D6840889CE
B436A9FFFFD909C3FE31EB114EAF7A03B8AA89DB17470E2E0B8EE66A82C5A44B4F80AAF8CDDC6A
E7F63AAC2EE011D96482DD77F94B1A4FE523CB4F0470FC3D31E19A448C05810329136074DB7A70
A6822C31A97FF79B0ACE1B7B7B82D338120BB4768406DEE43EE607CD43D77F2EB179E6452FC458
9FE708AA94F305E55C987AB7BBBC929E635CED9732C63A17300281B6BAA166AB89E24FC0D7508E
2ECAA4D928BB275A253CC1A93732A5F4EE3EBA79E1A5F955609335014F1142142C4106B2A0DEE6
644D675FE11F65A2A7A3E453E5E004B1AE5887B1C7488E589DE6F4935E1B9E848A1BEAA9223B1A
1407C19A06769B05B9F2DE6DEC9D6E5E8DB7AB9889E7ECB22C2527DA01FC03C2069B7F889A0282
7173A12C2ADFD5809C1C05745A0EAE4BE082331D49346A552EAD00A03B7F5B3AA1227A0425785A
C06360CA9ECAA2075AA8E7D1727571606FA5BEDD0F6D9816956B7B857A603C150916AFF01726CC
9967833C097827EB9625BBAD2BEC3DE199D555480AD8E2293014F579C033812BF6C3B8485352A2
087B873B4F58B50FBE5C09C75A6FC152F0240BF525BA181FED883BBD4194A4F8B5FC3EDDAADE99
433DBCD216F0AA14BBEAE43765B397ACEE118F5C5262F2F1047F648E87287A50D3053E4A640FBF
4B16CDA1FA07E1A2A5587AF98BB940A302FB7C50CBC557391FDB8C726DCEDD4C9E6F09E6DF7B40
52A5CA69F92E08C37014878C1EC17C6861BFBB5F8CF7057518FCC64138B940046A6A3D91A28A0C
CDAEE966CFE1BAB2702AB753CF1FBCBE7C26C14AC12D77EF89E6237C9171ECB690867616132291
1DE26973F06BEE1C449DED7BAD23E7DE70C4B70E13495DE2A78172C334C404B0652F323D28D9FF
30B55A0FD6CB631F0E9165EFDBBF817C3991BFD0B6DE742A65BFA6B46748E19616DF3B6F4D02F8
F38338C2D41AE87E7C3FA3AE5BC19BB1E2FE1F0DBC3BC13127063137BA3FA6CF48FE7EA1706C45
7B56F82E8A71860595F1D3EE13B4CE62CCEC5B1A4FBFBB4B0B8145DE533FCF4ECB76ED8220DE48
571C2F222FC287225F4CF9CD0956B3C7FF7EB3D5E9D224479F2155232ED78331DB9CE3D74A1BBF
6CFB4D252E9D9D0FDB3287A6ACF7277EE2902CB43DD7096E780629B7D1C7964682E1226FEDF2C2
A9D0C6A8F319C3472197A8D3CD4D9A4565BEFD11475A9DD1A1247FA54EAF49DCF42E1F5AC9DFD6
78FC0A61F2474623BD2F5B099FAFF4685959134AAF46F692B1D253FE1DFD4E1D79782CC6219348
7F9D95D0E530A76BCA4156D408172B211BC75AFE817708C4BA13C8E91B210B7672055EDD56883E
697806DBEE742A5925C84D48B7335330A8B88AFFF356A836AF226FB1E959AFCCCBD18E08C684E9
F3177257903FBF6E8ACA9072F84EDFC9B6F34C58C6350BFCEA3A8DC5EBF9D946AC029915979BBC
5E2507B31C8302811888B6E53BB4B6FF027F37AF8268FF33580F84331E42AC2E655BC483B53369
D2ABDA661499C5DEA602190F02C8D36DF142CD97AFA20B3B429B6ED2347CCC1498C8B6A199DBB8
A361CF3B0717A6EFEA25689C34EA9737F692A6E80E2C17778A28F63D7A5C8BD95AFBE039280CD2
CD637EA2CA6331F44955285B1BA10E99FBE51A218BF25154F772D3431C4CC6CAB64034E781D3EF
AE5B92C19718EB676D94B6B19FEFF30BDFE930B8261EBCF622E8947D0FCB79094D877BFA0BE73E
C74E886712D2F613ABD6CB1D4EE986E6097175FB35F3A52F7D387BACD9F14A6CCB66263A10AFE2
6747E4550B6E188756DC5868E9FC1854E7AC2D63F39E8D6AB073E79EFF2027BEE2CB38013F746E
3B1DB1091F89FDB7CD94368B4C5D0349142641993882E8C067D77F268FA3A00CE58A0AE30B3328
AF4D8372430050F6CEB7417A1BC24DB38CB1C3687DDE77C2C15490FB7EAB4D8BA535D40721B0D4
F7E12A0F3EBA71E8BA237124DA6BF596E352E48B823281BB1E4FFEBD40F340199BEF94C6FE4A11
750E2C6E3F6302C3B4C5DDF43EB6C6B6BE487E59C643720373619449C83E7F6EE914B5486F24E6
B9662C89ADB75D50D5B454CE8F6F9EEC03EBB4A58FC54B01CC15BED824F54029077492FF17763D
D00A53C484A71195B4B7C7B90461DB62F58CD7C9768EDA394B925319FAA2D7B95DBF387C2B0894
EFB328EDAFD4C36631AAC651E5D03753B377FA463E38B3C9EC716A0ABFC7E09DF0CBBD7FF51EF3
F21BAE5C21FC15D013F8980473DBB1915C566856DD84F7C9F2C0E9C36549B9AF8E3841A054C7A0
4B1EC6451CB011E052B27C6CCFFAB6B471FFB02723FC69EA582F6F7FD63B0706DAC78D2F5E4EC3
634ED0C7F885FC94236A7AB42275E550228F76DCA010F271AE139EED0709B6EA2FD42B1AEE250E
F448D30FB3FA56F316BF6403812FB7A885F78DA3BD1B2F24931F137657E41DC9A5CC8CCA4DBE57
CCC420850E21B277FF21D63DDC2594192696BF2A6CE76223AF3DB32157E1830B821B05BEE73DE9
FFB6CD01C4C64F170DF4EB52AB9ABF96DC848CAE66FBBF32C9FE8FDF43BC3D305CADF64C96D00C
417F6831B2F855AB583F6B78EA8D0F37C7DD7E20B088A65058EAB59F2A31F3475034A8FA5B2892
9B81551D65AA6C4CA8B37FE6C122FE491F8EEC4D2F0F4663CD3E183BE2E0486371CEB036C8FB1A
69BBB8A2B2D3F503B1947F06D88D0469DF8195B4FBED4F1B56F1C390CB021797A1BA5A7AFEE86E
E81E12DE3E8E726257361BE97DE33770560883E1E192DA936EB0D8D68B65530E635425EB71997D
69E2785AEFEE90E9F8685FDC76ACB13A071799975B86EFC46E6AFF170367459C3EADCAC537B163
332C5EEC77A472FAA81698F322EBBAE1FCFC8F2F3F3FD109EC202215F13D7E9F1EF63D5BE51C5F
83D507DB7FDCC6095D17F11834F6B8E70F29B9500F0CC49B525CE58D988A6F764F919FB0AD3778
D34031EF6CF679FFACD4C4D824DDC85F075BA0CE27EC797C1B31EF73AB813BC9F6AA5BBADDBFA1
AEDC73E86B6D6C33B25430F3C68742A5A6FC97F17260A42FF9AF674D24F2D8B27D0B04A2B81A81
EC5AF5A6EBB38194F08D786C2B8B02A6758F3E753D38876735C7BC629075875C58AB1C103D66E5
A34D5DE5DD9681F383E99F60792A0E0529723427BBB138491587A9C4D3E76CC77D973281D5BA81
0DB1DCD57C26F63069C700464CEB9DA4CB453F65AE4A146E7210A886BD51D81540C3076711E493
0B4FBC2E19C883FC639A4B66321D3ADFEF61793629C34FFB5A7FC2BA07746333660BB946577AFE
EF06B7B5BEFEDCB9C35F53EEACD4196083E474F1D7F6CF3BB26073ACA9615324CED2C454026325
BFF6CDE2294610D29C43D05270A445B24E86BEDBC9656399A0AB755EB67365C97B86627E1A18E1
94A53D5ABC96578876571762C6C1AF2ECF3331F703D7576BD460E3276F2DD187FCA77050AFE6C0
694757854CEA45A59F67D3603E1E13003044EA0A9B0A7E0033184D4CF5B448FF2305C14547CE1E
40A8B991A836A527D4AAC370A04E0A3D83F21AF21F28AFF774C3BEF529088EC0C30A226ACE134F
A822585CA233888F88210C4680F2A82C6302E5EE7280E23964EEFDD5FB377C44F26C7636597AB4
300102688B1576C44000E084F8C7B82A0EFAC40606ADC03E519725A606708ED2BC2072EB8E9B58
CA1E7E73566630FFBECFB25D6D124955BF3D123BFBEA79091CBE9479C8EB473B8252A03EADCE6F
2273612CABEE8ABF660266FCB6FDFBA3441A915ADE6775540E7A296D7C70190875FE0621E900F1
0B1C69620899A520B25EDC76604D183612C11502215F8C9D441B98085596D5E0B21FA6CBC7556B
CC4CEEFD677F5EF16D3A7B19A30CEAB2FBB522C1708AEB276E94BCB38A52CF2DE548FAFF25D4DA
619E23B212814E8C5700B4D2923325392DE0C0BB27786BDAA798588168BBBECAC61A36CE1010DC
CEF3E76251A03CE3376647C0CD5785201DD3FD17CCC08E23838028CD59833C5C56641193B1C5C7
281E27420EC91474016E458683CDAA46B02E124B08E2F16245C54A47820888E94090BDEAE86273
0D3D73D0BD110BFE03EC7D8CE01FD5338DB8CDBEED64022AC29D293EFFD8B18A0270C76E8AB34D
D85588182AFEA2DDA30E56EC1755D68B2DA7644520FBA90382CFC8BB58199B1EEAA014AE0CDA53
FFE0F6DB2DD8D2CC965E3950A2FD251BEFE9258DD20774A896E4CB4BAA9A94D085EDD4D782CFB8
1F25B6E2F575584235E7FC717BBFEE3FEF6A47C1EE9A2EA932099DD4DAE40F005F82E2EFA7B4D1
A6DE931DA2508C9AE16E391BE50C3A5EDA7AD399084D7B6510AAF65BBA59EB5F1CAD494DC50723
E8B42C7D988210992B660C64EBCE6814EC2B63967C97F819E31C14FB96BF3A2B93A184AE791EEE
5490593BDD100328571259DA21E539F449C41DEEBDF0462CAB87CBEB7FABA9D77E9AA08E4BF386
4920C67428A64FD5EE3FC9C1F66E6B9F40C2B3A913586F54916E7ABD2997CC56F5C25BD8C4DDE1
F6E8153DDDC5F552775288942253B86395D5EDCD182F089A83BAE1BF2157C4594FF0480B81E27D
69AB7FC158B5BE5AB97591092731BA899301EC4F242C6CB0F6B2508EE104076A07B469D42971BB
C3B4ED6A71ED71AD5D54B381F5448F4595941BAACFD8E6BB640283CE744984906CF791F09FA455
FB1173A5598DF88B2CE6DFD3318442BC1572597CDCAFE4DB2386CA07C1A52CB9FE7DCB67FD40D7
C7F704DB7E1C573C543BC04568A7E8D9010988AFC0EA2E5BB9D7ADA3BB5D7015A065B54EB3E267
443917CA69AE08E9482C5ED4EBF5911FE34B59FCD49D2711BDDFC45DFC7AD0B38927DE78519B79
41FDE450787554C85563935DBC49CA21B3BDF6F0E94BE65EC2A0E06B1ECBDA3121346BAED90E98
A503960E11B1F5F3E75F5520228953EA60A9A0F1F90E46FC41C43F63D36B18FEA9FACEC7E8B775
E6D7A55B59A07EBCE54C1EDA753CCAA73097A3EE933F7757702C6BAC43DC2DEDF910A6BF167399
012C167785EB8A12D972105496A471E23454FFB67EFE6CBABDF544C3DD72388639F26EE5BA8AAB
EF5D7616BE498F6A0D80125D3312DD60A30169CE7870D4F5214D2E06CB516785FC716F6D93F3E5
4C6F21279183AFD66449261A85431AE75DC02A60670F12BCE44D62EBA336A680A79589208F516E
6C4C2977A51C91519E6BF061FFA182065A66AB9053B2355562997149ED486B71ED8283554FC5FE
50AA8CCDD68EA768E9A19DB6DF6E4B6B4399FE828A4F168052CB255FDFB00CA687F3204FADC64E
B72F6BB5AA8EBCF0FB3DD27FD7D6B5F5E397CBD21E998CC66C63AEF0BF9F9315EB6D9B34D37AE6
2B62FB63C3CA62BBF9909DB91948423381BB9FD66833FE4A51C04C827071BBAF89379CFCFBDF12
146099A8280D11101592F1A9EBE8035CF9B9B08858A56E4756FFF1B51028177F34A8CA2919D22A
E059AF50D54929E2FB53695D56CFE9DD5664CF37FED1F16B216C84627F6CBDE6CF2B7F2065E2F4
2E1F9A18A332F4B173085B2F3199CD4DF2749017807ACEEC8014FCE36C39F1B4619BBFD82A60C7
FAE36CEC88C815BC8DC93D6DEE9F94474635039D7EA5DD74AF4874C0C38EE1C1F7495CBC87FB25
008DA79DFFF23167982DEFD198C628EABB12A033AAC7B954D106849939D2F6E17E713DCEEA1270
D6E3590A0ABD4024931BF4F0D885CE3D1BBEA491084126652B74D102CEE33970F90C569D0049B7
B413F54EA7E68332B420894B13FD029239808EEFEB84B6096EA0D3E406FB591A6AE3933C7078DA
B37966EE174B73F61DA73CDDEF40873BE1AB1892F02809118CA396CF2570833F6386FB47AECCB5
95D93145945844FCA51601C8F929437D7458E29E41FDAD443948A70D6A2EABA2222983770B5731
B62DD7FD050E0FFC96A0F6A20A74CE7E05F82A958FEDDD40E18E350AB067A188CCA05C5C7EB442
511BE4AE92CFF660858EB0525C075A7DAF44F58CBE26D14C1BE01F751CD71A32345AA7EB7C1616
ABAD83D9B539108CB45DE3A6552A3706CCD83A3CEEA1F360C3F033D26AF91FCB2BB77BA9F755AB
FE6BA80517F65DC358C1E8FF8AEF00EAC1974E1140BA0E38E78DD1FFB55799A0967015A6190578
B2E398871BB70C7FB6551A3DAF033DE085B8EA9F600C9090E740449FC6A14595F5FC57053CC3FE
DCB5D3E12BF989A092F8660CE1AFD62B88B79F7ABBC279DC1AE80A96D616EE8A88FC0D9B55075D
C45E38054AEAED420770DA5445082B44BB7FE0E47FBCA0663B96F4B87D8B19ECEF730BA5AA1B07
1581342F7309A97CC563468B14DDC43BFC44C45B5853531068E61D0D1A351D274DF778B6A86C80
F25318A303A8CA86712EE4709BCD11EABCD14780D2B9C3C94F0EE3511E31B53BAEEAC216643F9C
B62D50240C7C10693ACCE3A0BCC1D1D4505D074461CBF7DDFE78D8EC4BE2DDE5C9CD7F55629F7F
D24B1EB79AB0F6FE46AECFC338C746DDD531616A4C3A9AE1234B9D49AA45E7B3FA6CE91763588C
1FCD3A91CEBF19145D40D419A3F87AACDB46178E19CD8F5A0A6FB46E5DBABD5AB5682C6F2B444A
18FBD61D0E572459B39B4CA640C73532E459533351F2F02F7E3E738C7A29818CFE0E7BDC9B5554
34E094B1ACEB6FE6F5D2A4F9EC799D2051E8C645D0DDB91927107076FD7574185EBCEC1927B77E
24ED1C23E2CE71A0DEF1FDFB0CD2C4622B25E0E3BE28BC383930AAD33A58D64F73EF087327D6F2
66D974A7D2DADF8E9A5DECAE0FD907B944672432CEBCF17D2785BCC1F2EDFC4C2129CC2254D602
E31F30ABB7D386D8AF89BF40004AFA65E14620076DAE2CCD0443AC9EA1692A0C52C1C3D054D06A
0165EB1DFDF1B88356286449A5049CBF049C8BD5D270D5122840FC96D3116D8A9DA5BB61E4D5F4
F4E96187629947E26CE4B47697051BF3A1ACAF072DC134694893F3E6B7C47AA8F3EC11A3564485
3023D00B00BF132C0A4CD6EBBDFA3CD740C1883995D0ABD294456222D07BF99EA92695003A3D6F
A28A8D3E5D34963829DBA81516E2128621CCC5E5E14D56CE5CF1A2F0EE869AFE7E8D89D6F89B0F
225CA33F340E6795288E139EBE9BCBE1A8837BE63C73FE5A1E4EB3240DB0E206C1EED224CC534E
2E5ED5C5F50C23707094ED55CE58B87E849143B7AE7F701A3FE68092DF82D0BB8707FE573E2C1D
9A35CB4A2EF1EEEC576B403F8703F4F2951E07B7001CE7215DBC2D6807364EE5C516FA2304B893
EE09C22B4BD9787E4DA05A58A25C48077C61111B5D05C94C8F44AAD7BA1A3B6BD103ECC0CF425F
DF1B540A2CABB8D1D96931E36580C9FFF2BDA6E4F8F51C857E4B9EBCC732A4831E25353A30BD19
B5B26177AA883A74A814F1BE560B5BD959EC64E0F91609114549DE68553C2EE7CFDA9440D46D85
8B53DD0E2CF11ECE303652C8BBFF66D66FB4C424DC8A0AC6FD5F620501472B30186774C9125102
A30D18A7045BC17902C097047934CF8718B1BB5EB5A9354030643C7660B28092E73F0EEF15B644
AD6C3D242817174DEC78FA8B5F85386DD3B812CD3D67420C1D77704903BFE9B8E30B7093E6751B
5DEB95BE5315C7131299B86A706236289DD3EA3C89F024E82B92FEDAB224CFAAEA903B3EE35460
20E6952424B56D47FC0CE13C0044789B2CF338383038B12EFBFE8C16DEEB9D2003518599F8E6AF
91D8CA4D25F9D64045B1C1DE64A5F9576C255BCA138013C9D074FE6F95F4B6551754AB613021DC
1290BF4A359B058EF2D5F8B4D86F90176CC66DEFED1661BC1F2F303D5372A1A374F8A25C3EBAF6
07E9F2B7E431226B48110F56872DC021D4BE78AD2B48044BC363003FF9D63E621F901F66EA3648
44438361374D86A6BEAE33F6B82AF9835E80499DD7967962C7DE9E2A9F7A6109C09B96646274D3
7ECDC0A64D259E60399573FE995D9CBE43238F65A7CFAA99D8F305412A13491CBBA795F7A07CF4
91F0DDE10250FC149F4DDB06E5AC324F7CF03D14089CDC65008598270E0A932120D7AB1A35D2B2
BE96967BF70221710BAD60DDC3084DB8CDD0345ED8D54E7E62BFA49DCE2FB7E274ADFD5952C322
B423443C5BF8D02727A69A580E1773C10E3CE4DCC1AADC93719799DA9B5D2E561DDF462FC2D3BC
30F5EA70BB73E32D5A80C6A73023203714C50F1EB92E06D4560DC7DAF44655F41611C889B1EF17
9EC7C97623FF048594BF521DA5E70DFC340CE989B15E555B3CEC40F4E39C0CAB7E2A21A974D810
9A041AC8E8D5E97B0857FA8B0CFA6CA05A8B6B0AD1682B65770AFD85985E7BFC0CF9D3C86A12F1
AFA0C32938DFADA28E4FBF49D51FE64E2B48A90A1D296DF04E687C5E25ACB3F4B8E6681EF6B977
AA7B8F9C8D53DA7EDA385B0C8F5FA8BCE0958C2772E04E1018AF11534F87D2C1754C3BFE8DED7A
ABECD8CDDAFD02A414FA1FCEC2FA42123E97C4A8FAB907BA8BADD85FD79839F1EF5A2F0CC1BC98
93D46544D4E17500D354C9EC18688B53AED9B45FBB66DE5BA9AC6FE9F550FA9FBF4A88C23B6F38
0A162DFB08BE6CCBBEE87562DA2D9E5AF8EBD29D401EF876E305DB217649574035302FEBB4B70D
B7C3904F245E8387B5FF1E905F848D0818B0FA08B97108C72E9727FF2CDB91B7B85035594C591D
166C499727AE6520F7186A0ADB231D65169D5F0D6993E4E90D6BC6825B97AE307A03E6CE9F56BD
85D3FCA3BD2A2F04035D1D7B8C936859347F3EF319C36A67C8F08C634E9650200EABB6D4E112D9
B95F05833892D08416E08F1153055ACE89C14B5B2B924EEB196D8312F43DE2BDF4BDCF7A209DDE
35A40F104B2E21341DD3C30AB04011047B8B7DD690BD3C812C6916B8E92B752BD21C188AC02F6A
A9DB55689192D94024C6DF7DF6F91152C11910A18712CC56404CEDA5E663D2EE73CA6B3B3E4680
02EE36
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
dvidict begin
/textext[/Gamma/Delta/Theta/Lambda/Xi/Pi/Sigma/Upsilon
/Phi/Psi/Omega/ff/fi/fl/ffi/ffl
/dotlessi/dotlessj/grave/acute/caron/breve/macron/ring
/cedilla/germandbls/ae/oe/oslash/AE/OE/Oslash
/suppress/exclam/quotedblright/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/exclamdown/equal/questiondown/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/quotedblleft/bracketright/circumflex/dotaccent
/quoteleft/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/endash/emdash/hungarumlaut/tilde/dieresis
 128 notdef]def
end
dvidict begin
/texnansi[ n n n n/fraction/dotaccent/hungarumlaut/ogonek
/fl/fraction n/ff/fi/fl/ffi/ffl
/dotlessi/dotlessj/grave/acute/caron/breve/macron/ring
/cedilla/germandbls/ae/oe/oslash/AE/OE/Oslash
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/circumflex/underscore
/quoteleft/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/tilde/dieresis
/Lslash/quotesingle/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
/circumflex/perthousand/Scaron/guilsinglleft/OE/Zcaron/asciicircum/minus
/lslash/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
/tilde/trademark/scaron/guilsinglright/oe/zcaron/asciitilde/Ydieresis
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
end
dvidict begin
20 dict begin
/FontInfo 17 dict dup begin
/version (3.0) readonly def
/FullName (txsy) readonly def
/FamilyName (txsy) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 3.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
/BaseFontName (txsy) def
end readonly def
/FontName /txsy def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
dup 13 /circlecopyrt put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/UniqueID 4595112 def
/FontBBox{-22 -944 1227 866}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A07B684C079A47D2
71426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81DE96489F740045C5E342F02DA1C9
F9F3C167651E646F1A67CF379789E311EF91511D0F605B045B279357D6FC8537C233E7AEE6A4FD
BE73E75A39EB206D20A6F61021961B748D419EBEEB028B592124E174CA595C108E12725B987554
4955CFFD02843723FD4914EA94CF5C86363F39B548A806C44FEA1B6940CE940D9715AC10A3E7AB
0FA0A6414E9568953B7FC56D7431153CDCC1DA51CB651758F01C2BE266586E297B3119AEE2A2D6
43C4C75FFC401D0B85884FDF6B65F382C4274641C9111BFA560173294C16E51F7607EDD8C402A8
ACE5B8A757F2ABA6F4ED61F15798F0710DA8F3DEA618CF1E90303ADD6DF296225CAAA74E80F135
E221CC1E0CACD21199537E50D75DC58C3DFBB212E785396B0A36C81DB4AEEB785DEB75ADF0F081
8FC0FB1D416B07244E77B355ADE61403965BF62486A2F6897C1B44E77EC37A51880FE0639ECE50
EC308B192067C33CF1FC03C00F8630FD348DE9C17F718B341DFE884BBB3257BB82CC9D3C526514
90F47275A7DF2497B77BFA57DE4264E2D20C095D2C4A821CEBE923732DBC1B5114A8715CACEF9C
42615531C4B11F89A33FAA0EBE4C54020FE47AA0FFA34E9BBB415E4E385507F73A98630D674AC5
510E1AA3EFFFFCF44AF38BEE8E5AA5EA926F76843D91DA002292A604FFB0A55C5365D06BE9AC80
2817F889315EE92C675CC97AE241375DBC823D70FD429B4B19F3D15F6C7292C6CA1D865434CE4C
5B86EF7AE3D011B24C7F82297BA7530C442B3004B95BB6A1F91915E9BE11CB03C9FDCFDE376EF6
D06F8E219B55B2D71AFFC574588DEC1E18833EFF2996FCC23B052BA6ED7645C1DD74121E414CB9
DECD58EBA53127888A50B685925DD3F56823BF823E17811FFA923157FB455E120D19EDA5235497
4EF677284C0CB95E2AA83512F797E33698A8A37BF1F9C5C0F5352B4DE8ECC580C81233D20878DB
2174928D48DD8AAC50B4489EA39B194533EEDB7CA05ED463B7C86D689C2758A7D3F27C4A3FF0D1
4A86816309EE3A5B80113CEDDBC6FBDE23AB11142EAC891A13A81C3D4705A7249A9BED575511FD
BE6AFF729F4B1A4D7A6449D7518801F4781EA6A43D89ACD8EDEAAB20E71F41A126980C789079D7
1CABB650200096D9A2140718425A5188C497E21F9F2A4378B09DA1F2583DF2CF69A14050AD2994
85BFA34F074DB2220EF8B7CD04052CE4CBF607989EE0C6F887B09DF89C12D696BA94B53FBFA3F3
9D0BB4FB2C446B473181C8FE7AAF280827D052988834FB079F2160C45F03111842DA630406587C
A939A3E595484BC75B5AFBCFA86835397BB917B0B5013623A112DFE0E36F00AFA54119EB979BE0
08F7A69B55A29DB1C8D90F4BACBA45343285D2FAB38BB4AB9E183179B1DBD4D54EB1E9ECE0BF17
5F54B2322F6CF0928840769A834F9395469234E3FFB276054D665E2AFEB11206E7968EACE15D79
09CFC4D4357BEC65DC31E636357E91D0C7B1C8F81D30B19F120A45FDE2CCCD226886E371051FD6
B35A428785C4B21D215C6754747845310D3B865239158A7D1FF199AB33E0AC46D877ED5D972A1A
C358949124AC34871BE30ABF9D0A65C50905E7836B3BE0C7CC4033CB967DB242FC6483EF912402
E874AFD5B0D92A35D6BBF2BE0D6D774AE2E99B178A57F990872D61A0ACFF8D76A281E581B4399D
AF85C53583C5BBC7CBDC7BAB8A8D27321C8579355E93381D113CE875A5BD02863F790FEC8F3E35
4A0239F90768AE42924C34A1707437A17CEAB1049B43B482A3D6F1E0BDD643166B65FA64EFD5C7
5393215AF54ACE3724E23007B8B0A18D15C0

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
end
dvidict begin
/num 25400000 def /den 473628672 def /mag 1000 def
/xoffset 0 def /yoffset 0 def
/xmagnif 1 def /ymagnif 1 def /rotation 0 def
/PageHeight 742.677 def /PageWidth 544.252 def
/checkfonts false def
end
statusdict /jobname
(DVIPSONE 2.2.2 SN 1267 Trpro-template-generic.dvi 2014 Feb 20 15-36-06)
put
[{
544 743 0 1 setpagesize
} stopped cleartomark
dvidict begin
fstart
/fn16 /txr 655360 mf /f14{fn16 sf}def
/fn17 /txr 589824 mf /f10{fn17 sf}def
/fn18 /txb 589824 mf /f9{fn18 sf}def
/fn19 /txsy 589824 mf /f11{fn19 sf}def
/fn20 /txr 524288 mf /f1{fn20 sf}def
/fn21 /txi 589824 mf /f12{fn21 sf}def
/fn22 /txr 786432 mf /f2{fn22 sf}def
/fn23 /txr 1114112 mf /f3{fn23 sf}def
/fn24 /txr 851968 mf /f4{fn24 sf}def
/fn25 /txr 596375 mf /f5{fn25 sf}def
/fn31 /txsy 596375 mf /f6{fn31 sf}def
/fn74 /txi 524288 mf /f8{fn74 sf}def
/fn80 /txsy 524288 mf /f17{fn80 sf}def
/fn81 /txsy 393216 mf /f16{fn81 sf}def
/fn86 /txi 393216 mf /f7{fn86 sf}def
/fn103 /txb 655360 mf /f13{fn103 sf}def
/fn111 /txi 655360 mf /f15{fn111 sf}def
/fn123 /txss 560331 mf /f0{fn123 sf}def
fend
end
dvidict begin 
1 1 bop 

298349 d
39955398 d u
-41313892 d u
3490893 d U U U u
-2318757 r
-196608 d
dvispsav undsclx dvispbeg 
54 54 0 sub div 60 60 0 sub div scale
0 neg 0 neg translate

%!PS-Adobe-3.1 EPSF-3.0
%AI9_PrintingDataBegin
%ADOBeginClientInjection: DocumentHeader "AI10"
%ADOEndClientInjection: DocumentHeader "AI10"
%ADOBeginClientInjection: DocumentProlog Start "AI10"
%ADOEndClientInjection: DocumentProlog Start "AI10"
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 60 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
	
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup /Cyan eq{
						pop (_Cyan_)
					}{
						dup /Magenta eq{
							pop (_Magenta_)
						}{
							dup /Yellow eq{
								pop (_Yellow_)
							}{
								dup /Black eq{
									pop (_Black_)
								}{
									dup () cvn eq{
										pop (Process)
									}if
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	
	AGMUTIL_GSTATE_flt setflat
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/rdline
{
	currentfile AGMUTIL_str256 readline pop
} bdf
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/AGMUTIL_imagefile nd
/AGMUTIL_imbuf nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMUTIL_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMUTIL_imagefile exch writestring
		}for
		true
	}ifelse
	end
}def
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 205 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
		
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 8 def
											
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						currentpagedevice/OverrideSeparations known
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				true exch
					{
					convert_spot_to_process and
					}
				forall
				}{
				false exch
					{
					convert_spot_to_process or
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/clip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&clip /clip load put
			/clip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&clip
			}def
		}if
		/eoclip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put
			/eoclip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&eoclip
			}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
		
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
									
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 exch put
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 exch put
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				AGMCORE_&&&setcolorspace
			}def
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave 
		dup begin
		1 setgray
		0 0 ImageMatrix itransform 
		Width Height ImageMatrix idtransform rectfill 
		end
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/get_csd_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		/AGMCORE_CSD_Name xdf
		AGMCORE_CSD_cache
		{
			dup /Name get AGMCORE_CSD_Name eq
			{
				exch pop exit
			}{
				pop
			}ifelse
			pop
		}forall
		end
	}if
}def
/cachepattern_level2
{
	4 dict begin
	/comparebuffer exch def
	/holdbuffer exch def
	/readbuffer 1024 string def
	/LZWFilter holdbuffer /LZWEncode filter def
	{
		currentfile readbuffer readline not
			{pop exit}
		if
		dup LZWFilter exch writestring
		LZWFilter (\n) writestring
		comparebuffer eq
			{exit}
		if
	}loop
	LZWFilter closefile
	end
}def
/cachepattern_level3
{
	3 dict begin
	/comparebuffer exch def
	/readbuffer 1024 string def
	/DoEOL false def
	{ 
		DoEOL
			{
			(\n)
			/DoEOL false def
			}
			{
			currentfile readbuffer readline not
				{pop ()}
				{
				dup length 0 eq
					{ pop(\n)}
					{
					dup comparebuffer eq
						{pop ()}
						{/DoEOL true def}
					ifelse
					}
				ifelse
				}
			ifelse
			}
		ifelse
	} /ReusableStreamDecode filter
	end
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
	makepattern
}def
/exec_file
	statusdict /currentfilenameextend known{
		{
			0 () /SubFileDecode filter cvx exec
		}
	}{
		
		{cvx exec}
	}ifelse
def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		
		dup /customcolor_tint exch AGMCORE_gput
		
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		fill grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		currentdict /lw_initializepage known not
			{
			/lw_initializepage /initializepage load def
			/initializepage
				{
				lw_initializepage
				/initializepage {} def
				}def
			}if
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
}def
/driver_check_media_override
{
	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
	{
		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
	}if
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dict
def}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Data
begin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup
/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{
dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/args
exch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}if
dup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exch
getinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end
/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub
@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel
@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{
Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def
@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop
}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel
@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get end
countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def
/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub
def/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvx
exch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname get
errordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{
@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}
ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel
@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def
/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp
/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashow
load def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin
/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32
dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def
/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}
bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{
systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{
undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck
{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin
/globaldict where{/globaldict get begin}if dup where pop exch get/globaldict
where{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop
}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{
dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{pop
pop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict end
exch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal dup
length array copy exch setglobal}bind def/newencodedfont{currentglobal{
SharedFontDirectory 3 index known{SharedFontDirectory 3 index get
/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory
3 index get/FontReferenced known}{SharedFontDirectory 3 index known{
SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}
ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}
if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1
roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1
index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exch
dup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if def
currentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{
$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategies
known{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlength
add dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init get
exec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}bind
def/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}
ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21
add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch
(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}
if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def
/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{
/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{
/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}
bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4
index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin
$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1
index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2
index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSub
true def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfont
exch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup
/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def
/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 3
1}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?
true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch
?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def
?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1
index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont
?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getinterval
cvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exch
definefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup length
exch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index
?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add
getinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup
/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data
/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def
/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont
/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloaded
known{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict
/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2
copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparams
where dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{
get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 get
begin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128
string def/$slen 0 def/$sname null def/$match false def/$fontname null def
/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname null
def/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin
/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFont
exch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exch
definefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def
/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1
255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin
/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1
string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfont
cc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont
/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}bind
def currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin
/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontname
exch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{
/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch put
dup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def
/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}
ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0
setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exch
moveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsave
Level2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall pop
grestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobal
exch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontName
known{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName
$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}bind def end def
/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$Oblique
SetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup
/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slen
getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exch
putinterval/$match false def $SubstituteFont/$dstack countdictstack array
dictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}
$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont
/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forall
pop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dict
dup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2
index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copied
exch definefont 3 copy put pop pop}for def currentdict end}{$Strategies
/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index
(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gt
and{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{
$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap
findresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup
(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop
$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index sub
exch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getinterval
exch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1
roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{
def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{
pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse
}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0
def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt
$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelse
end}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfont
load put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontName
known{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{
/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFound
true def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{
pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq
{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup
/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print
( substitution revised, using )print dup/FontName known{dup/FontName get}{
(unspecified font)}ifelse $str cvs print(.
)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end
Adobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1
index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if
/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1
sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategy
known{$Strategy/$BuildFont get exec}if}if end}bind put}if end end
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 65 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				AGMIMG_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
  	 						currentoverprint not{
  			 					1 AGMCORE_&setgray
  	 							knockout_image_samples
  			 					currentdict imageormask_sys
  			 				}{
  			 					currentdict ignoreimagedata
  			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										currentdict consumeimagedata
									}{
										invert_image_samples
						 				1 AGMCORE_&setgray
										currentdict imageormask_sys
									}ifelse
								}{
										currentdict ignoreimagedata
								}ifelse
							}{
									
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
							currentdict consumeimagedata 
 							currentoverprint not Name (All) eq or{
								gsave 
								knockout_unitsq
								grestore
		 					}if
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/imageormask_l2_overprint
{
	
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
		
						mark exch
						dup	dup dup
		
						
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
		
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				currentdict consumeimagedata
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			AGMIMG_&image
		}ifelse
			
	end end
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			/Decode [0 1 def]
			currentdict
		end
	}if
	dup begin
		/NComponents 1 cdndf
		/MultipleDataSources false cdndf
		/SkipImageProc {false} cdndf
		/HostSepColorImage false cdndf
		/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
		] cdndf
		/Operator /image cdndf
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/InksUsed [] def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
						
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
					
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%ADOBeginClientInjection: DocumentProlog End "AI10"
%ADOEndClientInjection: DocumentProlog End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: DocumentSetup Start "AI10"
%ADOEndClientInjection: DocumentSetup Start "AI10"
Adobe_AGM_Utils begin
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
%ADOBeginClientInjection: DocumentSetup End "AI10"
%ADOEndClientInjection: DocumentSetup End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageSetup Start "AI10"
%ADOEndClientInjection: PageSetup Start "AI10"
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%ADOBeginClientInjection: PageSetup End "AI10"
%ADOEndClientInjection: PageSetup End "AI10"
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -59.5166 translate
[1 0 0 1 0 0 ]  concat
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 59.5166 li
53.8926 59.5166 li
53.8926 0 li
clp
[1 0 0 1 0 0 ] concat
%ADOBeginClientInjection: BeginPageContent "AI10"
%ADOEndClientInjection: BeginPageContent "AI10"
25.4278 23.5606 mo
25.4278 23.9522 li
25.3331 24.2481 li
25.4278 24.4444 li
25.5235 24.5411 li
25.712 24.5411 li
25.9024 24.3458 li
25.712 24.3458 li
25.6172 24.4444 li
25.5235 24.4444 li
25.6172 24.2481 li
25.6172 24.0508 li
25.712 23.8555 li
25.712 23.6583 li
25.5235 23.4629 li
25.3331 23.3643 li
25.0489 23.3643 li
25.2383 23.4629 li
false sop
0 0 0 1 cmyk
ef
37.668 4.22168 mo
37.1934 3.92676 li
37.003 3.24122 li
36.6241 2.65235 li
36.7188 3.24122 li
37.2881 4.22168 li
37.5733 4.41895 li
37.8575 4.51661 li
37.9522 4.41895 li
37.8575 4.41895 li
0 0 0 1 cmyk
ef
6.2627 10.3086 mo
6.07227 10.1114 li
6.07227 9.03223 li
6.2627 9.62208 li
6.2627 10.3086 li
cp
5.02833 9.03223 mo
4.64942 8.73731 li
4.36426 8.2461 li
4.17481 7.8545 li
4.45899 7.8545 li
4.74415 8.14942 li
5.12403 8.63868 li
5.31348 8.9336 li
5.40821 9.32715 li
5.02833 9.03223 li
cp
6.35645 9.62208 mo
6.35645 9.22852 li
6.2627 8.9336 li
5.97754 8.63868 li
5.69239 8.44239 li
5.69239 8.54102 li
5.78809 8.9336 li
5.69239 9.32715 li
5.50294 8.73731 li
5.12403 8.2461 li
4.83887 7.95118 li
4.45899 7.65723 li
3.7002 7.36329 li
4.07911 7.95118 li
4.36426 8.63868 li
4.55372 9.03223 li
4.93458 9.32715 li
5.31348 9.52247 li
5.69239 9.62208 li
5.69239 10.0137 li
5.88282 10.3086 li
6.07227 10.7002 li
6.35645 10.9942 li
0 0 0 1 cmyk
ef
34.252 24.5411 mo
34.1563 24.8379 li
34.3458 25.0333 li
34.5362 24.9346 li
34.3458 24.9346 li
34.3458 24.5411 li
0 0 0 1 cmyk
f
26.7559 43.9776 mo
26.5674 43.9776 li
26.6602 43.6836 li
26.7559 43.7823 li
26.8497 43.9776 li
26.7559 43.9776 li
cp
25.4278 40.6397 mo
25.6172 40.6397 li
25.6172 40.837 li
25.5235 40.837 li
25.4278 40.7393 li
25.4278 40.6397 li
cp
25.2383 40.1495 mo
25.3331 39.7579 li
25.5235 39.5616 li
25.712 40.0518 li
25.712 40.2481 li
25.6172 40.4444 li
25.4278 40.4444 li
25.2383 40.1495 li
cp
25.1426 40.837 mo
24.669 41.3272 li
24.4795 41.3272 li
24.669 41.1309 li
24.7637 40.837 li
25.1426 40.6397 li
25.2383 40.837 li
25.1426 40.837 li
cp
26.377 41.8184 mo
26.377 42.1133 li
26.2813 41.8184 li
26.2813 41.4258 li
26.377 41.8184 li
cp
26.0918 34.1612 mo
25.9961 34.0645 li
25.9961 33.6719 li
25.8077 33.5733 li
25.8077 33.7686 li
25.6172 33.9659 li
25.5235 34.1612 li
25.4278 34.4561 li
25.1426 34.751 li
24.669 34.751 li
24.7637 34.5547 li
24.7637 34.3584 li
24.669 34.2598 li
24.8594 33.9659 li
25.0479 33.5733 li
24.8594 33.4747 li
24.8594 33.376 li
24.9532 33.1788 li
24.9532 32.9834 li
25.1426 32.7881 li
25.4278 32.5918 li
25.712 32.6895 li
25.9024 32.8858 li
26.0918 33.1788 li
26.377 33.376 li
26.377 33.7686 li
26.2813 34.1612 li
26.0918 34.1612 li
cp
25.3331 30.2354 mo
25.2383 30.0391 li
25.2383 29.7442 li
25.5235 29.7442 li
25.3331 30.2354 li
cp
25.1426 31.2159 mo
24.9532 31.3155 li
24.8594 31.1182 li
24.8594 30.9219 li
25.0479 30.9219 li
25.2383 31.1182 li
25.1426 31.2159 li
cp
25.1426 30.4317 mo
25.1426 30.5303 li
25.0479 30.627 li
24.9532 30.627 li
24.9532 30.4317 li
25.1426 30.4317 li
cp
24.5733 30.4317 mo
24.5733 28.959 li
24.669 28.8614 li
25.0479 29.0567 li
25.2383 29.0567 li
25.0479 29.1553 li
24.9532 29.3516 li
24.9532 29.5479 li
25.0479 29.7442 li
24.9532 29.9405 li
24.9532 30.334 li
24.7637 30.4317 li
24.5733 30.4317 li
cp
24.5733 31.0206 mo
24.4795 31.1182 li
24.3838 31.0206 li
24.3838 30.9219 li
24.7637 30.8243 li
24.5733 31.0206 li
cp
24.7637 31.9043 mo
24.669 32.001 li
24.4795 31.8057 li
24.3838 31.6084 li
24.7637 31.7081 li
24.7637 31.9043 li
cp
24.2891 32.3946 mo
24.0997 32.3946 li
24.004 32.2969 li
24.004 32.0997 li
24.1924 32.0997 li
24.3838 32.2969 li
24.2891 32.3946 li
cp
23.9102 31.6084 mo
23.9102 31.3155 li
24.004 31.2159 li
24.1924 31.4131 li
24.1924 31.5118 li
24.004 31.6084 li
23.9102 31.6084 li
cp
23.7198 30.9219 mo
23.625 30.7266 li
23.7198 30.5303 li
23.8155 30.5303 li
23.8155 30.627 li
24.004 30.7266 li
24.004 30.9219 li
23.9102 31.0206 li
23.7198 30.9219 li
cp
23.7198 31.7081 mo
23.625 31.9043 li
23.5303 31.9043 li
23.4356 31.8057 li
23.4356 31.4131 li
23.625 31.6084 li
23.7198 31.6084 li
23.7198 31.7081 li
cp
23.2452 31.3155 mo
23.1514 31.2159 li
23.0557 31.2159 li
23.1514 30.8243 li
23.5303 31.0206 li
23.4356 31.2159 li
23.2452 31.3155 li
cp
22.962 30.2354 mo
22.8663 30.1377 li
22.8663 29.9405 li
22.962 30.0391 li
23.1514 30.1377 li
23.4356 30.2354 li
23.5303 30.2354 li
23.5303 30.334 li
23.4356 30.5303 li
23.2452 30.5303 li
23.2452 30.334 li
23.1514 30.2354 li
22.962 30.2354 li
cp
23.3409 29.7442 mo
23.3409 29.1553 li
23.9102 28.6641 li
24.0997 28.4678 li
24.4795 28.4678 li
24.669 28.2715 li
24.4795 28.7637 li
24.004 28.959 li
23.625 29.0567 li
23.7198 29.1553 li
23.9102 29.1553 li
24.1924 28.959 li
24.4795 28.959 li
24.3838 29.3516 li
24.4795 29.7442 li
24.4795 30.334 li
24.3838 30.4317 li
24.1924 30.4317 li
24.0997 30.2354 li
24.004 29.7442 li
24.004 29.3516 li
23.9102 29.254 li
23.625 29.5479 li
23.5303 29.9405 li
23.4356 29.9405 li
23.3409 29.8428 li
23.3409 29.7442 li
cp
23.7198 27.9786 mo
23.5303 27.9786 li
23.4356 27.7813 li
23.625 27.586 li
23.625 27.4864 li
23.7198 27.4864 li
23.7198 27.7813 li
24.004 28.0752 li
23.7198 27.9786 li
cp
22.7706 27.878 mo
22.6768 27.7813 li
22.5811 27.878 li
22.2959 27.878 li
22.2022 27.586 li
22.0108 27.3887 li
22.0108 27.1924 li
22.2022 27.0938 li
22.3917 27.0938 li
22.5811 26.9961 li
22.8663 26.6026 li
23.0557 26.6026 li
23.0557 26.7012 li
23.1514 26.9961 li
23.2452 27.1924 li
23.3409 27.2911 li
23.5303 27.3887 li
23.4356 27.4864 li
23.4356 27.6827 li
23.2452 27.878 li
22.7706 27.878 li
cp
22.6768 28.959 mo
22.5811 29.254 li
22.3917 29.4493 li
22.2022 29.4493 li
22.1065 29.3516 li
22.0108 29.1553 li
21.917 28.8614 li
21.8223 28.7637 li
21.7276 28.7637 li
21.6319 28.959 li
21.7276 29.1553 li
21.8223 29.4493 li
21.917 29.6456 li
21.6319 30.2354 li
21.4424 30.4317 li
21.1573 30.334 li
20.9678 30.2354 li
21.1573 30.0391 li
21.0626 30.0391 li
20.9678 30.1377 li
20.8741 29.8428 li
20.8741 29.1553 li
20.9678 28.959 li
20.9678 28.8614 li
20.8741 28.8614 li
20.6836 29.0567 li
20.5879 29.254 li
20.3047 29.5479 li
20.209 29.4493 li
20.209 29.0567 li
20.3047 28.8614 li
20.4942 28.7637 li
20.8741 28.6641 li
21.253 28.6641 li
21.1573 29.3516 li
21.1573 29.7442 li
21.3477 30.0391 li
21.253 29.3516 li
21.3477 28.6641 li
21.5372 28.5674 li
21.8223 28.5674 li
22.0108 28.6641 li
22.2022 28.5674 li
21.8223 28.4678 li
21.4424 28.4678 li
20.6836 28.5674 li
20.4942 28.4678 li
20.6836 28.3702 li
21.253 28.3702 li
21.4424 28.2715 li
21.4424 28.3702 li
21.7276 28.3702 li
21.8223 28.2715 li
22.3917 28.2715 li
22.4864 28.6641 li
22.5811 28.7637 li
22.6768 28.959 li
cp
22.0108 30.2354 mo
22.0108 30.5303 li
21.917 30.627 li
21.917 30.2354 li
22.0108 30.2354 li
cp
21.7276 30.9219 mo
21.7276 31.0206 li
21.6319 30.9219 li
21.6319 30.8243 li
21.7276 30.7266 li
21.7276 30.9219 li
cp
21.4424 31.5118 mo
21.253 31.5118 li
21.253 31.3155 li
21.4424 31.4131 li
21.4424 31.5118 li
cp
21.1573 30.8243 mo
21.3477 30.8243 li
21.3477 30.9219 li
21.253 30.9219 li
21.1573 30.8243 li
cp
20.9678 31.0206 mo
21.0626 31.0206 li
21.0626 31.1192 li
20.9678 31.1192 li
20.9678 31.0206 li
cp
20.5879 29.6456 mo
20.5879 29.4493 li
20.6836 29.7442 li
20.5879 29.6456 li
cp
24.004 27.586 mo
24.004 27.3887 li
24.0997 27.2911 li
24.2891 27.2911 li
24.4795 27.4864 li
24.669 27.4864 li
24.8594 27.3887 li
24.9532 27.2911 li
24.9532 27.1924 li
25.3331 27.1924 li
25.5235 26.9961 li
25.8077 27.2911 li
25.8077 27.4864 li
25.712 27.6827 li
25.4278 27.878 li
25.1426 27.9786 li
24.9532 28.0752 li
25.9024 28.0752 li
25.9024 27.9786 li
25.8077 27.9786 li
25.712 27.878 li
25.8077 27.7813 li
25.9961 27.7813 li
25.9961 27.9786 li
25.9024 28.0752 li
25.9961 28.2715 li
25.6172 28.3702 li
25.0479 28.3702 li
25.0479 28.4678 li
25.2383 28.5674 li
25.4278 28.5674 li
25.712 28.4678 li
25.9961 28.3702 li
26.1866 28.1739 li
26.1866 27.9786 li
26.2813 27.7813 li
26.1866 27.586 li
25.9961 27.586 li
25.9961 27.2911 li
25.9024 27.0938 li
25.712 26.8975 li
25.9961 26.8975 li
26.377 26.7999 li
26.4717 26.6026 li
26.5674 26.5049 li
26.6602 26.5049 li
26.8497 27.586 li
26.377 28.3702 li
25.9024 29.0567 li
25.8077 28.7637 li
25.5235 28.5674 li
25.5235 28.6641 li
25.6172 28.8614 li
25.712 29.1553 li
25.6172 29.3516 li
25.4278 29.5479 li
25.2383 29.4493 li
25.2383 29.3516 li
25.3331 29.254 li
25.3331 29.0567 li
25.5235 28.959 li
25.3331 28.8614 li
24.9532 28.8614 li
24.7637 28.7637 li
24.7637 28.3702 li
24.8594 28.2715 li
24.669 28.1739 li
24.3838 28.0752 li
24.004 27.878 li
24.004 27.586 li
cp
25.4278 26.7999 mo
25.2383 26.9961 li
25.0479 26.8975 li
25.2383 26.7999 li
25.4278 26.7999 li
cp
24.9532 26.5049 mo
25.0479 26.4073 li
25.4278 26.211 li
25.6172 26.211 li
25.8077 26.3086 li
26.2813 26.5049 li
26.0918 26.6026 li
25.0479 26.6026 li
24.9532 26.7012 li
24.9532 26.5049 li
cp
26.5674 24.5411 mo
26.5674 23.9522 li
26.4717 23.8555 li
26.5674 23.7569 li
26.8497 23.8555 li
26.7559 24.1485 li
26.6602 24.3458 li
26.6602 24.9336 li
26.5674 24.5411 li
cp
24.9532 22.0889 mo
24.7637 22.4805 li
24.669 22.3819 li
24.4795 22.4805 li
24.2891 22.5782 li
24.2891 22.7745 li
24.1924 22.9708 li
24.0997 23.0704 li
23.9102 22.7745 li
23.625 22.4805 li
23.7198 22.1846 li
23.7198 22.0889 li
23.625 21.9893 li
23.625 21.8907 li
23.4356 21.8907 li
23.4356 21.793 li
23.3409 21.6954 li
23.4356 21.4981 li
23.7198 21.2042 li
23.8155 21.0079 li
24.0997 21.2042 li
24.4795 21.4004 li
25.0479 21.793 li
24.9532 22.0889 li
cp
22.2022 20.7129 mo
21.5372 20.7129 li
21.253 20.5176 li
20.1143 20.0254 li
20.1143 19.9278 li
20.3047 19.9278 li
20.3985 19.8301 li
20.6836 20.0254 li
21.0626 20.418 li
21.5372 20.5176 li
21.917 20.5176 li
22.3917 20.418 li
22.7706 20.3213 li
22.962 20.3213 li
23.0557 20.5176 li
22.2022 20.7129 li
cp
19.7354 19.2403 mo
19.4493 19.044 li
19.6397 18.9473 li
19.8301 19.044 li
20.1143 19.3399 li
20.1143 19.4376 li
19.7354 19.2403 li
cp
19.3555 19.5362 mo
19.2608 19.3399 li
18.9756 18.9473 li
19.3555 19.1426 li
19.5459 19.6329 li
19.3555 19.5362 li
cp
18.6915 19.2403 mo
18.4063 18.9473 li
18.5967 18.9473 li
18.7872 19.044 li
19.0704 19.4376 li
18.6915 19.2403 li
cp
18.3126 19.3399 mo
18.1221 19.1426 li
17.7422 18.9473 li
18.1221 19.4376 li
17.0782 18.9473 li
16.793 18.9473 li
16.6036 18.75 li
16.5088 18.75 li
16.793 19.044 li
16.5088 18.9473 li
16.2247 18.75 li
16.0342 18.5538 li
15.7491 18.4551 li
15.9395 18.6514 li
16.129 18.75 li
15.8448 18.75 li
15.5606 18.5538 li
15.3711 18.3584 li
15.085 18.2598 li
15.4659 18.5538 li
15.2745 18.6514 li
15.1807 18.5538 li
14.8956 18.3584 li
14.2325 18.5538 li
13.4727 18.8487 li
12.7139 19.044 li
11.9542 19.1426 li
11.1954 19.044 li
10.5313 18.8487 li
9.48731 18.2598 li
8.44336 17.5723 li
7.30567 17.0811 li
6.73536 16.9825 li
6.16602 16.8858 li
7.21094 16.9825 li
8.34864 17.376 li
9.29883 17.8663 li
10.3418 18.4551 li
10.7208 18.6514 li
11.1954 18.8487 li
12.1446 18.8487 li
13.0928 18.6514 li
14.042 18.3584 li
14.3252 18.2598 li
14.7061 18.1602 li
13.5674 17.2774 li
12.5245 16.3936 li
11.5752 15.3145 li
10.8165 14.1368 li
10.5313 13.7442 li
10.1524 13.3516 li
9.67774 13.1543 li
9.29883 12.9581 li
7.87403 12.3692 li
7.49512 12.0752 li
6.5459 11.3877 li
5.50294 10.8965 li
6.07227 11.0948 li
6.5459 11.2901 li
7.49512 11.879 li
8.34864 12.2715 li
9.29883 12.6641 li
9.86817 12.9581 li
10.5313 13.1543 li
10.5313 13.3516 li
10.627 13.4493 li
10.7208 13.4493 li
11.5752 14.9209 li
12.1446 15.6094 li
12.7139 16.1983 li
13.377 16.7872 li
14.042 17.2774 li
14.8018 17.7686 li
15.4659 18.0626 li
16.8887 18.5538 li
18.2168 18.9473 li
18.3126 19.2403 li
18.501 19.4376 li
18.3126 19.3399 li
cp
17.8379 20.2227 mo
17.5528 20.418 li
16.8887 20.5176 li
17.1729 20.3213 li
17.4571 20.2227 li
18.1221 20.0254 li
17.8379 20.2227 li
cp
17.1729 19.2403 mo
17.0782 19.1426 li
17.0782 19.044 li
17.2676 19.2403 li
17.1729 19.2403 li
cp
16.6993 20.0254 mo
16.3194 20.3213 li
15.8448 20.6153 li
15.3711 20.6153 li
16.5088 19.7325 li
17.0782 19.6329 li
16.6993 20.0254 li
cp
13.5674 19.5362 mo
13.1876 20.0254 li
12.9034 20.5176 li
12.7139 21.1055 li
12.6182 20.6153 li
12.5245 20.2227 li
11.9542 19.6329 li
11.7647 19.6329 li
11.5752 19.4376 li
11.3858 19.3399 li
12.7139 19.3399 li
13.2842 19.2403 li
13.9463 19.1426 li
13.5674 19.5362 li
cp
13.8526 20.0254 mo
13.6631 20.418 li
12.9034 21.0079 li
13.0928 20.5176 li
13.2842 20.1241 li
13.5674 19.8301 li
13.9463 19.5362 li
13.8526 20.0254 li
cp
12.2383 21.3028 mo
12.1446 21.2042 li
12.0489 20.8116 li
12.0489 20.418 li
11.9542 20.0254 li
12.2383 20.3213 li
12.334 20.7129 li
12.4288 21.4004 li
12.2383 21.3028 li
cp
10.9112 19.2403 mo
11.0059 19.2403 li
11.0997 19.3399 li
10.9112 19.2403 li
cp
11.2901 19.8301 mo
10.8165 19.9278 li
10.3418 19.9278 li
9.96094 19.7325 li
10.3418 19.6329 li
10.8165 19.5362 li
11.1954 19.5362 li
11.669 19.6329 li
11.2901 19.8301 li
cp
6.73536 17.9649 mo
5.88184 18.1602 li
5.78809 18.1602 li
6.07227 17.9649 li
6.5459 17.67 li
7.02051 17.5723 li
7.49512 17.5723 li
6.73536 17.9649 li
cp
7.02051 18.6514 mo
8.06446 18.6514 li
7.87403 18.8487 li
7.68458 18.9473 li
7.21094 19.044 li
6.64161 18.9473 li
6.16602 18.9473 li
6.35645 18.75 li
6.5459 18.6514 li
7.02051 18.6514 li
cp
5.59668 17.8663 mo
5.31348 18.3584 li
5.31348 17.376 li
5.40723 16.9825 li
6.26172 17.0811 li
7.02051 17.2774 li
6.64161 17.2774 li
6.26172 17.376 li
5.88184 17.5723 li
5.59668 17.8663 li
cp
5.97754 16.7872 mo
5.69239 16.8858 li
5.69239 16.7872 li
5.97754 16.7872 li
cp
6.5459 16.002 mo
6.07227 15.8047 li
5.69239 15.4122 li
5.02735 14.628 li
5.31348 14.628 li
5.50294 14.7256 li
5.97754 15.1182 li
6.26172 15.5098 li
6.5459 16.002 li
cp
8.06446 15.6094 mo
8.44336 15.4122 li
8.91797 15.3145 li
9.86817 15.3145 li
9.39258 15.5098 li
9.0127 15.6094 li
8.53809 15.7071 li
8.06446 15.6094 li
cp
8.15918 16.1983 mo
8.44336 16.3936 li
8.63282 16.6876 li
8.91797 17.2774 li
8.44336 16.7872 li
8.15918 16.1983 li
cp
7.11426 15.6094 mo
7.02051 15.1182 li
7.02051 14.628 li
7.11426 14.1368 li
7.4004 14.5293 li
7.49512 15.1182 li
7.49512 15.6094 li
7.30567 16.0997 li
7.11426 15.6094 li
cp
7.49512 16.2959 mo
7.68458 15.9024 li
7.78126 15.9024 li
8.06446 16.5909 li
8.15918 16.8858 li
8.34864 17.1797 li
7.30567 16.7872 li
7.49512 16.2959 li
cp
9.20313 17.376 mo
9.39258 17.0811 li
9.48731 16.6876 li
9.67774 16.3936 li
9.77149 16.0997 li
9.86817 16.0997 li
9.86817 16.6876 li
9.77149 16.8858 li
9.67774 17.1797 li
9.48731 17.2774 li
9.20313 17.376 li
cp
12.0489 18.3584 mo
11.1954 18.0626 li
10.9112 17.7686 li
10.7208 17.376 li
10.5313 16.8858 li
12.0489 18.3584 li
cp
12.4288 17.9649 mo
12.334 18.1602 li
12.334 18.3584 li
12.0489 17.4737 li
11.8594 16.4922 li
12.1446 16.7872 li
12.334 17.1797 li
12.4288 17.5723 li
12.4288 17.9649 li
cp
12.6182 17.2774 mo
12.5245 16.8858 li
12.9981 17.376 li
13.7569 18.0626 li
13.1876 18.3584 li
12.4288 18.4551 li
12.6182 18.1602 li
12.7139 17.67 li
12.6182 17.2774 li
cp
7.30567 13.253 mo
7.78126 13.3516 li
8.25391 13.7442 li
9.0127 14.5293 li
8.44336 14.334 li
7.96973 14.1368 li
7.58985 13.7442 li
7.30567 13.253 li
cp
4.64942 16.4922 mo
4.45801 16.2959 li
4.36426 16.0997 li
4.36426 15.7071 li
4.45801 15.2168 li
4.45801 15.0196 li
4.36426 14.7256 li
4.07911 14.1368 li
3.88965 13.8418 li
3.6045 13.5469 li
4.55372 13.5469 li
5.02735 13.4493 li
5.2168 13.3516 li
5.40723 13.0567 li
5.78809 12.7618 li
5.97754 12.5655 li
6.26172 12.5655 li
5.97754 12.8604 li
5.78809 13.1543 li
5.69239 13.6456 li
5.69239 14.0381 li
5.59668 14.2344 li
6.35645 13.9395 li
6.73536 13.6456 li
6.92579 13.253 li
7.4004 13.8418 li
7.96973 14.334 li
8.53809 14.628 li
8.91797 14.7256 li
9.29883 14.7256 li
9.29883 14.8243 li
9.48731 14.8243 li
9.48731 14.7256 li
9.0127 14.1368 li
8.15918 13.253 li
7.87403 13.1543 li
7.49512 13.0567 li
7.11426 13.1543 li
7.21094 12.1719 li
7.87403 12.5655 li
8.44336 12.8604 li
9.1084 13.253 li
9.77149 13.4493 li
10.9112 14.628 li
11.7032 15.9024 li
11.7647 15.9024 li
11.7647 16.002 li
11.7032 15.9024 li
11.669 15.9024 li
11.669 16.8858 li
11.7647 17.376 li
11.9542 17.8663 li
10.5313 16.3936 li
10.1524 15.9024 li
10.2461 16.6876 li
10.4376 17.5723 li
10.7208 17.9649 li
11.0059 18.2598 li
11.3858 18.4551 li
11.8594 18.5538 li
11.4805 18.5538 li
11.1954 18.4551 li
10.5313 18.1602 li
9.39258 17.5723 li
9.67774 17.376 li
9.86817 17.2774 li
9.96094 17.0811 li
10.0567 16.7872 li
10.0567 16.3936 li
9.96094 16.002 li
10.0567 15.7071 li
9.67774 15.9024 li
9.1084 17.0811 li
9.0127 16.6876 li
8.72852 16.3936 li
8.44336 16.1983 li
8.06446 16.002 li
7.87403 15.8047 li
7.87403 15.7071 li
8.25391 15.9024 li
8.72852 16.002 li
9.20313 16.002 li
9.58204 15.8047 li
9.67774 15.7071 li
9.77149 15.7071 li
9.96094 15.6094 li
10.3418 15.4122 li
10.5313 15.4122 li
10.7208 15.3145 li
10.2461 15.2168 li
9.77149 15.1182 li
9.20313 15.0196 li
8.72852 15.0196 li
8.25391 15.1182 li
7.78126 15.4122 li
7.78126 14.9209 li
7.68458 14.5293 li
7.49512 14.1368 li
7.21094 13.8418 li
7.11426 13.5469 li
6.64161 14.5293 li
6.64161 15.1182 li
6.73536 15.3145 li
6.92579 15.8047 li
7.21094 16.1983 li
7.21094 16.6876 li
6.92579 16.002 li
6.5459 15.3145 li
6.16602 14.7256 li
5.88184 14.5293 li
5.40723 14.334 li
4.64942 14.334 li
4.64942 14.5293 li
5.02735 15.2168 li
5.59668 15.7071 li
6.26172 16.1983 li
6.92579 16.5909 li
6.92579 16.6876 li
5.88184 16.5909 li
4.64942 16.4922 li
cp
3.79395 15.2168 mo
3.6045 14.628 li
3.13086 13.4493 li
3.50977 13.9395 li
3.88965 14.5293 li
4.07911 15.1182 li
4.17383 15.7071 li
3.79395 15.2168 li
cp
4.64942 12.9581 mo
5.02735 12.7618 li
5.40723 12.7618 li
5.12403 13.0567 li
4.74317 13.253 li
4.36426 13.3516 li
3.98438 13.3516 li
4.64942 12.9581 li
cp
7.02051 12.2715 mo
6.83106 12.7618 li
6.64161 13.1543 li
6.35645 13.5469 li
5.97754 13.9395 li
6.07227 13.4493 li
6.26172 12.9581 li
6.5459 12.5655 li
7.02051 12.2715 li
cp
4.55372 12.1719 mo
4.93262 11.9776 li
5.12403 11.9776 li
5.31348 12.0752 li
5.31348 11.9776 li
5.97754 12.0752 li
6.5459 12.1719 li
6.07227 12.3692 li
5.59668 12.3692 li
4.55372 12.1719 li
cp
6.83106 8.44239 mo
7.4004 7.26465 li
7.49512 7.75586 li
7.30567 8.14942 li
7.11426 8.63868 li
6.83106 8.9336 li
6.83106 8.44239 li
cp
7.49512 9.62208 mo
7.87403 9.91504 li
8.25391 10.1114 li
8.72852 10.3086 li
9.1084 10.3086 li
8.34864 10.5049 li
7.96973 10.7002 li
7.58985 10.9942 li
7.58985 10.6016 li
7.49512 10.1114 li
7.30567 9.71876 li
7.02051 9.42383 li
7.49512 9.62208 li
cp
7.87403 9.42383 mo
8.34864 9.52247 li
8.72852 9.81739 li
9.0127 10.1114 li
8.63282 10.1114 li
8.15918 9.91504 li
7.4004 9.42383 li
7.87403 9.42383 li
cp
8.72852 8.34473 mo
8.91797 8.44239 li
9.1084 8.63868 li
9.39258 9.03223 li
9.58204 9.62208 li
9.67774 10.1114 li
9.29883 9.71876 li
9.0127 9.32715 li
8.72852 8.34473 li
cp
9.29883 10.4063 mo
9.39258 10.3086 li
9.48731 10.3086 li
9.48731 10.4063 li
9.29883 10.4063 li
cp
9.39258 10.5049 mo
9.1084 10.7989 li
8.72852 10.9942 li
8.34864 10.9942 li
7.87403 11.0948 li
8.25391 10.7989 li
9.39258 10.5049 li
cp
7.21094 11.2901 mo
7.02051 10.9942 li
6.92579 10.6016 li
6.92579 10.1114 li
7.02051 9.71876 li
7.21094 10.0127 li
7.30567 10.5049 li
7.30567 10.8965 li
7.21094 11.2901 li
cp
9.86817 11.584 mo
9.58204 11.6817 li
9.20313 11.7803 li
8.53809 11.7803 li
8.82227 11.584 li
9.86817 11.584 li
cp
10.4376 9.81739 mo
10.5313 10.209 li
10.4376 10.6016 li
10.2461 10.209 li
10.2461 9.91504 li
10.1524 9.12989 li
10.4376 9.81739 li
cp
13.9463 16.3936 mo
13.7569 16.002 li
13.6631 15.5098 li
13.6631 15.0196 li
13.8526 15.1182 li
14.042 15.3145 li
14.1368 15.8047 li
14.2325 16.8858 li
13.9463 16.3936 li
cp
14.1368 13.0567 mo
14.2325 13.253 li
14.1368 13.5469 li
13.9463 14.0381 li
13.6631 14.4307 li
13.1876 14.7256 li
13.2842 14.2344 li
14.1368 13.0567 li
cp
12.7139 15.4122 mo
12.7139 14.4307 li
12.4288 13.9395 li
12.0489 13.5469 li
12.9034 13.5469 li
13.7569 13.253 li
13.377 13.5469 li
13.1876 13.9395 li
12.9981 14.4307 li
12.9981 15.0196 li
12.9034 15.1182 li
13.0928 15.1182 li
13.1876 15.0196 li
13.4727 14.9209 li
13.4727 15.5098 li
13.5674 16.0997 li
13.8526 16.6876 li
14.2325 17.0811 li
13.7569 16.8858 li
13.2842 16.4922 li
12.9034 16.002 li
12.5245 15.6094 li
12.7139 15.4122 li
cp
12.2383 14.628 mo
12.1446 14.334 li
12.0489 13.9395 li
12.2383 14.1368 li
12.4288 14.4307 li
12.5245 14.8243 li
12.6182 15.0196 li
12.5245 15.2168 li
12.2383 14.628 li
cp
11.0997 13.3516 mo
11.0997 13.253 li
11.3858 13.253 li
11.669 13.3516 li
11.8594 14.334 li
12.4288 15.3145 li
12.4288 15.5098 li
12.0489 15.0196 li
11.7647 14.5293 li
11.0997 13.5469 li
11.0997 13.3516 li
cp
12.7139 13.0567 mo
13.5674 13.0567 li
13.377 13.253 li
13.0928 13.3516 li
12.5245 13.3516 li
12.0489 13.1543 li
11.4805 13.0567 li
11.3858 13.0567 li
11.669 12.9581 li
12.0489 12.8604 li
12.4288 12.8604 li
12.7139 13.0567 li
cp
13.0928 12.5655 mo
12.8086 12.5655 li
12.4288 12.3692 li
11.4805 11.7803 li
11.8594 11.879 li
12.334 11.9776 li
12.8086 12.1719 li
13.0928 12.5655 li
cp
10.9112 12.0752 mo
10.7208 11.6817 li
10.4376 11.2901 li
10.5313 11.2901 li
10.627 11.0948 li
10.9112 11.0948 li
11.1954 10.9942 li
11.7647 10.9942 li
11.5752 11.1915 li
11.1954 11.2901 li
10.627 11.1915 li
10.627 11.3877 li
10.7208 11.4864 li
11.0997 11.6817 li
11.1954 11.7803 li
11.3858 12.0752 li
11.669 12.2715 li
12.334 12.6641 li
11.4805 12.6641 li
11.1954 12.8604 li
10.9112 12.0752 li
cp
17.4571 17.0811 mo
17.1729 16.9825 li
16.8887 16.7872 li
16.5088 16.3936 li
16.129 15.9024 li
15.9395 15.7071 li
15.6553 15.5098 li
16.2247 15.7071 li
16.6993 16.0997 li
17.0782 16.4922 li
17.4571 17.0811 li
cp
18.2168 15.9024 mo
18.1221 16.2959 li
17.8379 16.9825 li
17.7422 16.4922 li
17.7422 15.4122 li
17.8379 14.9209 li
18.0274 15.2168 li
18.1221 15.5098 li
18.2168 15.9024 li
cp
20.5879 17.67 mo
20.3047 17.4737 li
19.7354 16.8858 li
20.0196 16.9825 li
20.3985 17.2774 li
20.9678 17.7686 li
20.5879 17.67 li
cp
20.9678 19.7325 mo
21.253 19.6329 li
21.8223 19.6329 li
22.1065 19.5362 li
22.2959 19.7325 li
22.5811 19.9278 li
22.6768 20.2227 li
21.6319 20.3213 li
21.1573 20.2227 li
20.7784 19.8301 li
20.9678 19.7325 li
cp
20.4942 18.8487 mo
20.6836 18.8487 li
21.0626 19.2403 li
20.8741 19.2403 li
20.7784 19.044 li
20.4942 18.8487 li
cp
20.209 18.8487 mo
20.5879 19.2403 li
20.4942 19.3399 li
20.3047 19.1426 li
20.0196 18.9473 li
20.209 18.8487 li
cp
20.5879 17.9649 mo
20.8741 18.0626 li
20.8741 18.1602 li
20.1143 18.2598 li
19.7354 18.2598 li
19.2608 18.1602 li
19.4493 18.0626 li
19.7354 17.9649 li
20.5879 17.9649 li
cp
18.4063 18.0626 mo
18.501 16.8858 li
18.6915 16.2959 li
18.9756 15.8047 li
18.9756 15.6094 li
19.1661 16.002 li
19.1661 16.4922 li
18.9756 17.2774 li
18.4063 18.0626 li
cp
19.2608 18.4551 mo
18.7872 18.4551 li
18.4063 18.5538 li
18.1221 18.5538 li
18.501 18.2598 li
18.9756 17.8663 li
19.2608 17.376 li
19.4493 16.8858 li
19.5459 16.8858 li
20.209 17.5723 li
19.9249 17.67 li
19.7354 17.7686 li
19.4493 17.8663 li
19.1661 17.9649 li
18.6915 18.2598 li
19.5459 18.4551 li
20.4942 18.4551 li
19.9249 18.6514 li
19.5459 18.6514 li
19.2608 18.4551 li
cp
19.2608 18.75 mo
18.7872 18.6514 li
18.8809 18.5538 li
19.0704 18.5538 li
19.2608 18.75 li
cp
21.253 18.75 mo
21.3477 18.9473 li
21.5372 19.044 li
21.8223 19.1426 li
22.0108 19.1426 li
22.1065 19.2403 li
22.0108 19.3399 li
21.4424 19.044 li
20.8741 18.6514 li
20.9678 18.5538 li
21.0626 18.5538 li
21.253 18.75 li
cp
21.3477 18.4551 mo
21.3477 18.3584 li
21.4424 18.3584 li
21.6319 18.5538 li
21.4424 18.5538 li
21.3477 18.4551 li
cp
16.8887 14.7256 mo
16.8887 13.9395 li
17.0782 14.2344 li
17.1729 14.628 li
17.1729 15.4122 li
16.9825 15.1182 li
16.8887 14.7256 li
cp
16.4141 13.7442 mo
16.4766 13.7442 li
16.5088 13.6944 li
16.5088 13.5469 li
16.6036 13.5469 li
16.5088 13.6944 li
16.5088 13.7442 li
16.4766 13.7442 li
16.4141 13.8418 li
16.3194 14.0381 li
15.8448 14.5293 li
15.2745 14.8243 li
14.6114 15.0196 li
14.9913 14.5293 li
15.3711 14.2344 li
16.4141 13.7442 li
cp
15.6553 13.6456 mo
15.3711 13.8418 li
14.9913 14.0381 li
14.6114 14.628 li
14.1368 15.1182 li
14.1368 15.2168 li
14.8018 15.2168 li
15.4659 15.1182 li
16.0342 14.8243 li
16.2247 14.628 li
16.6036 14.0381 li
16.793 13.6456 li
16.6036 14.628 li
16.6036 15.1182 li
16.6993 15.4122 li
16.8887 15.6094 li
17.0782 15.7071 li
17.2676 15.9024 li
17.3624 15.4122 li
17.4571 14.8243 li
17.3624 14.628 li
17.3624 14.4307 li
16.9825 13.6456 li
17.3624 13.8418 li
17.8379 14.0381 li
18.5967 14.7256 li
19.1661 15.2168 li
19.6397 15.8047 li
20.5879 17.0811 li
20.1143 16.7872 li
19.7354 16.6876 li
19.4493 16.6876 li
19.4493 16.2959 li
19.3555 15.9024 li
19.2608 15.6094 li
18.9756 15.3145 li
18.501 16.2959 li
18.501 15.8047 li
18.3126 15.3145 li
17.7422 14.4307 li
17.6485 14.5293 li
17.6485 15.1182 li
17.4571 15.7071 li
17.3624 16.2959 li
17.5528 16.8858 li
17.3624 16.7872 li
17.2676 16.4922 li
17.0782 16.0997 li
16.793 15.7071 li
16.4141 15.4122 li
16.0342 15.3145 li
14.9913 15.3145 li
15.2745 15.6094 li
15.6553 15.8047 li
16.2247 16.4922 li
16.5088 16.7872 li
16.793 16.9825 li
17.1729 17.1797 li
17.6485 17.1797 li
17.7422 17.2774 li
17.7422 17.5723 li
17.8379 17.67 li
18.1221 17.2774 li
18.3126 16.8858 li
18.2168 17.376 li
18.1221 17.7686 li
17.8379 18.4551 li
16.129 18.0626 li
15.2745 17.67 li
14.5167 17.2774 li
14.5167 16.5909 li
14.4209 16.002 li
14.1368 15.3145 li
13.7569 14.8243 li
13.7569 14.7256 li
14.042 14.4307 li
14.2325 14.1368 li
14.3252 13.6456 li
14.3252 12.7618 li
14.2325 12.6641 li
14.1368 12.7618 li
14.1368 12.8604 li
13.377 12.8604 li
12.8086 12.7618 li
12.9981 12.6641 li
13.1876 12.7618 li
13.6631 12.7618 li
13.1876 12.2715 li
12.6182 11.879 li
12.0489 11.6817 li
11.3858 11.4864 li
11.5752 11.3877 li
11.7647 11.2901 li
11.8594 11.0948 li
11.8594 10.9942 li
11.5752 10.7989 li
11.1954 10.7989 li
10.627 10.8965 li
10.7208 10.4063 li
10.8165 10.209 li
10.8165 9.91504 li
10.2461 8.9336 li
11.0059 9.91504 li
11.7647 10.7989 li
12.7139 11.6817 li
13.1876 12.0752 li
13.7569 12.3692 li
14.9913 12.9581 li
16.3194 13.4493 li
15.6553 13.6456 li
cp
9.77149 10.7002 mo
9.96094 10.8965 li
10.2461 11.3877 li
10.5313 11.9776 li
10.7208 12.4678 li
10.8165 13.1543 li
10.8165 13.3516 li
10.7208 13.1543 li
10.7208 12.7618 li
10.627 12.5655 li
10.2461 11.6817 li
10.0567 11.2901 li
9.77149 10.7989 li
9.96094 11.3877 li
9.58204 11.2901 li
9.1084 11.2901 li
8.72852 11.3877 li
8.44336 11.584 li
8.15918 11.6817 li
8.44336 11.879 li
8.91797 11.9776 li
9.29883 11.9776 li
9.67774 11.879 li
10.0567 11.6817 li
10.4376 12.6641 li
10.2461 12.6641 li
9.96094 12.5655 li
9.58204 12.3692 li
9.0127 12.1719 li
8.44336 11.9776 li
7.87403 11.879 li
7.30567 11.584 li
7.49512 11.0948 li
8.15918 11.1915 li
8.72852 11.1915 li
9.29883 10.9942 li
9.48731 10.7989 li
9.67774 10.5049 li
9.67774 10.7002 li
9.77149 10.7002 li
cp
7.11426 6.38184 mo
6.64161 6.38184 li
6.26172 6.28321 li
5.88184 6.08692 li
6.73536 6.08692 li
7.49512 6.28321 li
7.11426 6.38184 li
cp
6.83106 7.06836 mo
6.73536 7.16602 li
6.35645 7.36329 li
5.59668 7.36329 li
5.31348 7.46094 li
5.02735 7.36329 li
5.97754 7.06836 li
6.45215 6.97071 li
7.02051 6.97071 li
6.83106 7.06836 li
cp
8.82227 5.69336 mo
9.0127 5.20313 li
9.20313 4.81153 li
9.48731 4.32032 li
9.48731 4.81153 li
9.39258 5.30176 li
9.1084 5.792 li
8.72852 6.18458 li
8.82227 5.69336 li
cp
9.77149 5.89063 mo
9.86817 5.59668 li
10.2461 6.28321 li
10.3418 6.57715 li
10.4376 6.97071 li
10.5313 7.06836 li
10.5313 7.46094 li
9.96094 6.67676 li
9.77149 6.18458 li
9.77149 5.89063 li
cp
10.7208 7.75586 mo
10.7208 7.65723 li
12.2383 7.65723 li
12.9034 7.36329 li
13.2842 7.16602 li
13.5674 6.97071 li
14.5167 7.26465 li
12.9981 7.46094 li
12.7139 7.65723 li
12.334 7.75586 li
12.1446 8.04981 li
11.8594 8.44239 li
11.8594 9.03223 li
11.9542 9.22852 li
12.0489 9.03223 li
12.1446 9.03223 li
12.2383 8.9336 li
12.4288 9.42383 li
12.6182 10.209 li
12.8086 10.6016 li
12.0489 9.81739 li
11.2901 8.9336 li
10.4376 8.04981 li
9.58204 7.26465 li
8.72852 6.57715 li
9.1084 6.08692 li
9.39258 5.89063 li
9.48731 5.59668 li
9.48731 6.28321 li
9.58204 6.57715 li
9.67774 6.77442 li
10.1524 7.36329 li
10.627 7.75586 li
10.7208 7.75586 li
cp
11.1954 7.26465 mo
11.2901 7.16602 li
11.669 6.97071 li
12.0489 6.87208 li
12.4288 6.87208 li
13.1876 6.97071 li
12.7139 7.26465 li
12.2383 7.36329 li
11.0997 7.46094 li
11.1954 7.26465 li
cp
12.1446 8.63868 mo
12.6182 8.14942 li
13.0928 7.8545 li
13.6631 7.55958 li
14.2325 7.46094 li
13.7569 7.8545 li
13.2842 8.14942 li
12.1446 8.63868 li
cp
13.4727 11.0948 mo
13.1876 10.7002 li
12.9981 10.3086 li
12.8086 9.81739 li
12.7139 9.42383 li
12.9981 9.71876 li
13.2842 10.209 li
13.4727 11.0948 li
cp
14.7061 7.26465 mo
15.6553 7.26465 li
15.4659 7.36329 li
15.1807 7.36329 li
14.8018 7.65723 li
14.5167 7.95118 li
14.2325 8.34473 li
14.1368 8.73731 li
13.9463 8.63868 li
13.8526 8.54102 li
13.8526 8.9336 li
13.7569 9.42383 li
13.6631 10.3086 li
13.4727 9.91504 li
13.0928 9.52247 li
12.4288 8.9336 li
12.4288 8.83594 li
13.0928 8.73731 li
13.6631 8.34473 li
14.2325 7.8545 li
14.7061 7.26465 li
cp
15.1807 6.18458 mo
15.6553 5.49805 li
16.2247 4.90918 li
16.4141 5.00684 li
16.6993 5.10547 li
17.6485 5.59668 li
17.2676 5.69336 li
16.8887 5.98829 li
16.6036 6.38184 li
16.4141 6.77442 li
17.3624 6.77442 li
18.2168 6.57715 li
18.501 6.97071 li
18.8809 7.26465 li
18.8809 7.36329 li
18.6915 7.36329 li
18.0274 7.26465 li
17.3624 7.06836 li
16.6993 6.97071 li
16.0342 6.87208 li
16.3194 6.47852 li
16.5088 6.08692 li
16.6036 5.59668 li
16.5088 5.10547 li
16.4141 5.00684 li
15.5606 5.89063 li
15.4659 6.28321 li
15.4659 6.77442 li
15.1807 6.18458 li
cp
14.2325 5.98829 mo
13.5674 5.30176 li
14.042 5.39942 li
14.5167 5.59668 li
14.8018 5.98829 li
15.085 6.47852 li
14.2325 5.98829 li
cp
14.9913 5.792 mo
14.7061 5.39942 li
14.2325 5.10547 li
14.7061 5.00684 li
15.085 4.81153 li
14.9913 5.30176 li
14.9913 5.792 li
cp
13.8526 4.61426 mo
14.9913 4.32032 li
15.1807 4.22168 li
15.1807 4.32032 li
15.085 4.41895 li
14.8956 4.51563 li
14.2325 4.71094 li
13.5674 4.71094 li
13.8526 4.61426 li
cp
15.3711 4.90918 mo
15.6553 4.51563 li
16.3194 3.73145 li
16.129 4.22168 li
15.9395 4.61426 li
15.2745 5.30176 li
15.3711 4.90918 li
cp
16.5088 4.12403 mo
16.5088 3.53418 li
17.6485 4.51563 li
18.2168 5.10547 li
18.7872 5.59668 li
18.6915 5.59668 li
18.501 5.39942 li
17.7422 4.81153 li
17.3624 4.61426 li
16.8887 4.51563 li
16.3194 4.61426 li
16.5088 4.12403 li
cp
24.2891 10.3086 mo
24.5733 10.4063 li
24.8594 10.3086 li
24.8594 11.879 li
24.4795 11.4864 li
24.1924 11.0948 li
23.7198 10.1114 li
24.2891 10.3086 li
cp
23.7198 9.03223 mo
23.9102 8.44239 li
24.1924 7.8545 li
24.669 7.46094 li
24.5733 8.04981 li
24.3838 8.63868 li
24.0997 9.22852 li
23.7198 9.71876 li
23.7198 9.03223 li
cp
24.7637 10.1114 mo
24.2891 10.0127 li
23.8155 9.91504 li
24.1924 9.81739 li
24.5733 9.71876 li
25.4278 9.91504 li
25.0479 10.0127 li
24.9532 10.0127 li
24.7637 10.1114 li
cp
24.9532 10.3086 mo
25.1426 10.6016 li
25.2383 10.8965 li
25.3331 11.2901 li
25.2383 11.6817 li
25.0479 12.1719 li
24.9532 12.0752 li
25.0479 11.1915 li
24.9532 10.3086 li
cp
25.9961 7.26465 mo
25.9024 7.55958 li
25.4278 8.04981 li
25.2383 8.34473 li
24.9532 8.54102 li
25.0479 8.14942 li
25.2383 7.8545 li
25.8077 7.26465 li
25.9961 7.26465 li
cp
24.5733 6.87208 mo
24.5733 6.67676 li
24.4795 6.47852 li
25.1426 6.47852 li
25.8077 6.77442 li
25.5235 6.87208 li
24.5733 6.87208 li
cp
24.004 6.67676 mo
24.0997 6.57715 li
24.2891 6.57715 li
24.2891 6.67676 li
24.3838 6.77442 li
24.004 6.67676 li
cp
24.9532 6.08692 mo
24.5733 6.08692 li
24.7637 5.69336 li
24.7637 5.30176 li
24.669 4.51563 li
24.9532 4.81153 li
25.4278 4.90918 li
25.8077 5.10547 li
25.9961 5.30176 li
26.0918 5.49805 li
26.1866 6.08692 li
26.0918 6.57715 li
25.4278 6.28321 li
24.9532 6.08692 li
cp
24.0997 4.61426 mo
24.2891 4.22168 li
24.3838 5.10547 li
24.3838 5.59668 li
24.2891 5.98829 li
24.0997 5.792 li
24.0997 5.49805 li
24.004 5.00684 li
24.0997 4.61426 li
cp
24.0997 2.35645 mo
24.004 1.9629 li
23.9102 0.981446 li
24.3838 1.66895 li
24.3838 2.16114 li
24.2891 2.74903 li
24.0997 2.35645 li
cp
24.7637 2.74903 mo
25.0479 2.55274 li
25.5235 2.16114 li
25.4278 2.55274 li
25.2383 2.74903 li
25.0479 2.84766 li
24.5733 2.94532 li
24.7637 2.74903 li
cp
25.712 1.08008 mo
25.9024 1.17872 li
26.0918 1.375 li
26.2813 1.86622 li
26.5674 2.45411 li
26.2813 2.16114 li
25.9024 1.375 li
25.712 1.08008 li
cp
26.6602 2.94532 mo
26.6602 3.14161 li
26.5674 3.24024 li
26.2813 3.3379 li
25.9024 3.43653 li
25.5235 3.43653 li
25.712 3.24024 li
25.9961 3.04395 li
26.2813 2.94532 li
26.6602 2.94532 li
cp
26.8497 15.4122 mo
26.4717 15.2168 li
26.377 15.0196 li
26.377 14.7256 li
26.8497 15.4122 li
cp
25.8077 19.044 mo
25.8077 19.4376 li
25.712 19.2403 li
25.712 19.044 li
25.8077 19.044 li
cp
25.1426 17.4737 mo
24.9532 18.0626 li
24.8594 18.2598 li
24.5733 18.4551 li
24.2891 18.4551 li
24.004 18.3584 li
24.5733 17.8663 li
25.1426 17.4737 li
cp
25.5235 16.4922 mo
25.3331 16.3936 li
25.2383 16.2959 li
25.0479 15.9024 li
25.0479 15.5098 li
25.4278 15.9024 li
25.5235 16.1983 li
25.5235 16.4922 li
cp
25.9024 16.4922 mo
25.8077 16.9825 li
25.6172 17.376 li
25.6172 17.8663 li
25.5235 17.7686 li
25.4278 17.5723 li
25.5235 17.2774 li
25.8077 16.5909 li
25.9024 16.2959 li
25.9024 15.9024 li
25.9961 16.002 li
25.9024 16.4922 li
cp
25.9024 18.75 mo
25.9024 18.8487 li
25.8077 18.6514 li
25.9024 18.75 li
cp
26.377 16.6876 mo
26.4717 16.8858 li
26.4717 17.0811 li
26.6602 17.2774 li
26.7559 17.4737 li
26.7559 17.8663 li
26.5674 18.1602 li
26.4717 18.4551 li
26.2813 18.75 li
26.2813 19.044 li
26.0918 19.6329 li
25.9961 19.4376 li
26.0918 19.3399 li
26.0918 18.5538 li
25.9024 18.2598 li
25.712 17.4737 li
25.9961 16.8858 li
26.0918 16.5909 li
25.9961 16.1983 li
26.0918 16.2959 li
26.1866 16.2959 li
26.1866 16.4922 li
26.377 16.6876 li
cp
20.5879 10.3086 mo
20.4942 9.71876 li
20.4942 9.12989 li
20.6836 9.32715 li
20.7784 9.62208 li
20.9678 10.3086 li
20.9678 10.8965 li
20.7784 11.4864 li
20.5879 10.3086 li
cp
23.5303 15.1182 mo
23.2452 16.002 li
22.962 16.0997 li
22.8663 16.1983 li
22.6768 16.1983 li
23.0557 15.6094 li
23.5303 15.1182 li
cp
21.4424 13.253 mo
21.7276 13.3516 li
22.0108 13.4493 li
22.3917 13.4493 li
22.6768 13.6456 li
23.4356 14.5293 li
22.8663 14.334 li
22.2959 14.1368 li
21.8223 13.7442 li
21.4424 13.253 li
cp
20.9678 12.7618 mo
21.1573 12.1719 li
21.4424 11.6817 li
22.1065 10.6016 li
22.1065 10.9942 li
22.0108 11.2901 li
21.7276 11.879 li
21.3477 12.3692 li
20.9678 12.7618 li
cp
14.3252 9.91504 mo
14.3252 10.209 li
14.2325 10.7989 li
14.1368 10.9942 li
14.042 11.2901 li
13.8526 10.8965 li
13.8526 10.4063 li
14.042 9.03223 li
14.1368 9.32715 li
14.3252 9.62208 li
14.3252 9.91504 li
cp
14.6114 10.3086 mo
15.5606 11.0948 li
14.9913 10.9942 li
14.6114 10.9942 li
14.3252 11.1915 li
14.4209 10.7989 li
14.6114 10.3086 li
cp
15.8448 11.2901 mo
15.5606 11.4864 li
15.1807 11.4864 li
14.8018 11.3877 li
14.4209 11.3877 li
14.4209 11.2901 li
14.5167 11.2901 li
14.8018 11.1915 li
15.3711 11.1915 li
15.8448 11.2901 li
cp
15.6553 10.7002 mo
14.8956 10.209 li
15.2745 10.209 li
15.6553 10.3086 li
16.129 10.6016 li
16.4141 10.8965 li
16.5088 11.1915 li
15.6553 10.7002 li
cp
18.8809 11.2901 mo
18.5967 11.4864 li
17.8379 11.6817 li
17.4571 11.6817 li
17.7422 11.3877 li
18.501 11.1915 li
18.8809 11.2901 li
cp
19.0704 10.3086 mo
19.5459 10.6016 li
19.9249 11.0948 li
20.4942 12.0752 li
20.209 11.9776 li
19.6397 11.3877 li
19.3555 10.7989 li
19.0704 10.3086 li
cp
16.9825 10.4063 mo
16.5088 10.0127 li
16.3194 9.62208 li
16.129 9.03223 li
16.0342 8.54102 li
16.4141 8.9336 li
16.6993 9.42383 li
16.8887 9.91504 li
16.9825 10.4063 li
cp
18.1221 10.209 mo
17.7422 10.6016 li
17.2676 10.7989 li
17.6485 10.0127 li
17.9317 9.62208 li
18.3126 9.32715 li
18.1221 10.209 li
cp
20.3047 8.2461 mo
20.0196 8.63868 li
19.7354 9.12989 li
19.2608 9.42383 li
18.8809 9.71876 li
19.1661 9.22852 li
19.4493 8.83594 li
19.8301 8.44239 li
20.0196 8.34473 li
20.3047 8.2461 li
cp
19.0704 8.14942 mo
18.6915 8.44239 li
18.2168 8.63868 li
17.7422 8.73731 li
17.1729 8.73731 li
17.5528 8.44239 li
18.0274 8.2461 li
19.0704 8.14942 li
cp
19.1661 7.55958 mo
19.6397 7.65723 li
20.1143 7.65723 li
20.3047 7.95118 li
19.8301 7.75586 li
19.3555 7.75586 li
18.501 7.65723 li
18.4063 7.65723 li
18.2647 7.6084 li
17.5528 7.46094 li
17.1729 7.36329 li
16.7657 7.19434 li
16.6036 7.16602 li
16.6993 7.16602 li
16.7657 7.19434 li
17.1729 7.26465 li
17.8379 7.46094 li
18.2647 7.6084 li
18.501 7.65723 li
18.7872 7.65723 li
19.1661 7.55958 li
cp
18.8809 6.77442 mo
19.1661 6.87208 li
19.4493 7.06836 li
19.7354 7.36329 li
19.3555 7.26465 li
19.0704 7.06836 li
18.5967 6.67676 li
18.8809 6.77442 li
cp
18.6915 6.08692 mo
18.7872 5.98829 li
19.0704 5.98829 li
19.4493 6.67676 li
19.2608 6.57715 li
18.8809 6.47852 li
18.5967 6.47852 li
18.3126 6.38184 li
18.6915 6.08692 li
cp
17.4571 5.10547 mo
16.793 4.81153 li
16.793 4.71094 li
17.1729 4.81153 li
17.5528 4.90918 li
17.9317 5.10547 li
18.2168 5.39942 li
17.4571 5.10547 li
cp
18.7872 5.792 mo
18.3126 6.08692 li
17.7422 6.38184 li
16.6993 6.57715 li
17.0782 6.18458 li
17.5528 5.89063 li
18.1221 5.792 li
18.7872 5.792 li
cp
15.7491 6.38184 mo
15.8448 5.89063 li
16.4141 5.20313 li
16.4141 5.59668 li
16.3194 5.98829 li
15.8448 6.77442 li
15.7491 6.77442 li
15.7491 6.87208 li
15.6553 6.77442 li
15.7491 6.38184 li
cp
14.5167 8.63868 mo
14.6114 8.34473 li
14.8018 8.04981 li
15.3711 7.65723 li
15.6553 7.55958 li
15.3711 7.8545 li
15.1807 8.14942 li
14.8018 8.44239 li
14.5167 8.63868 li
cp
14.7061 9.12989 mo
14.9913 8.9336 li
15.2745 8.63868 li
15.5606 8.04981 li
15.7491 7.75586 li
15.9395 7.55958 li
16.2247 7.46094 li
16.6036 7.46094 li
17.9317 7.8545 li
19.2608 7.95118 li
18.5967 8.04981 li
17.9317 8.04981 li
17.6485 8.14942 li
17.3624 8.2461 li
17.1729 8.54102 li
16.8887 8.83594 li
17.0782 8.9336 li
17.4571 8.9336 li
18.0274 9.03223 li
18.5967 8.83594 li
19.0704 8.54102 li
19.4493 8.04981 li
19.7354 8.04981 li
20.1143 8.14942 li
19.7354 8.2461 li
19.4493 8.34473 li
18.3126 10.1114 li
18.6915 8.9336 li
18.501 9.03223 li
18.4063 9.12989 li
18.2168 9.22852 li
18.0274 9.22852 li
17.6485 9.42383 li
17.4571 9.81739 li
17.0782 10.5049 li
17.0782 9.42383 li
16.8887 9.12989 li
16.6993 8.9336 li
16.2247 8.34473 li
15.8448 7.8545 li
15.7491 7.8545 li
15.7491 8.9336 li
15.8448 9.52247 li
16.129 9.91504 li
16.6036 10.4063 li
17.0782 10.7989 li
16.9825 10.9942 li
16.9825 11.1915 li
17.0782 11.1915 li
17.5528 10.9942 li
18.3126 10.4063 li
18.7872 10.0127 li
18.9756 10.5049 li
19.1661 11.0948 li
18.501 10.8965 li
18.1221 10.8965 li
17.7422 11.0948 li
17.4571 11.2901 li
17.0782 11.6817 li
16.9825 11.584 li
16.8887 11.3877 li
16.6993 10.6016 li
16.5088 10.5049 li
16.4141 10.3086 li
16.0342 10.1114 li
15.5606 10.0127 li
15.085 9.91504 li
14.7061 10.0127 li
14.7061 9.91504 li
14.6114 9.71876 li
14.4209 9.42383 li
14.4209 9.12989 li
14.7061 9.12989 li
cp
17.4571 12.5655 mo
17.5528 12.6641 li
14.1368 11.4864 li
14.7061 11.584 li
15.1807 11.6817 li
15.6553 11.6817 li
15.9395 11.584 li
16.129 11.4864 li
16.5088 11.584 li
17.2676 12.1719 li
17.4571 12.5655 li
cp
18.2168 12.5655 mo
18.4063 12.9581 li
18.0274 12.7618 li
17.4571 12.3692 li
17.2676 11.9776 li
17.6485 12.1719 li
18.2168 12.5655 li
cp
23.4356 18.4551 mo
23.1514 18.1602 li
22.8663 17.7686 li
21.3477 15.6094 li
20.1143 14.4307 li
19.5459 13.9395 li
18.8809 13.4493 li
18.7872 13.1543 li
18.6915 12.9581 li
18.501 12.3692 li
18.2168 12.1719 li
17.9317 12.0752 li
18.1221 12.0752 li
18.3126 11.9776 li
18.5967 11.7803 li
18.8809 11.4864 li
19.2608 11.2901 li
19.4493 11.6817 li
19.8301 12.0752 li
20.3047 12.2715 li
20.7784 12.3692 li
20.7784 12.7618 li
20.8741 12.9581 li
21.0626 13.0567 li
21.6319 13.6456 li
22.2022 14.334 li
22.4864 14.5293 li
22.8663 14.7256 li
23.2452 14.8243 li
23.625 14.8243 li
23.7198 14.9209 li
23.4356 15.0196 li
23.2452 15.1182 li
22.8663 15.5098 li
22.2959 16.3936 li
22.6768 16.4922 li
23.1514 16.3936 li
23.3409 16.2959 li
23.4356 16.0997 li
23.625 15.3145 li
23.625 15.1182 li
23.8155 14.9209 li
23.3409 13.9395 li
23.0557 13.5469 li
22.8663 13.3516 li
22.5811 13.253 li
22.2022 13.1543 li
21.8223 13.0567 li
21.4424 13.0567 li
21.0626 12.8604 li
21.5372 12.5655 li
21.917 12.1719 li
22.2022 11.6817 li
22.2959 11.0948 li
22.2022 10.7002 li
22.2959 10.3086 li
21.4424 11.0948 li
21.0626 11.584 li
20.7784 12.1719 li
20.7784 11.9776 li
20.8741 11.7803 li
20.9678 11.6817 li
21.0626 11.4864 li
21.1573 11.0948 li
21.253 10.7989 li
21.1573 10.1114 li
20.9678 9.42383 li
20.4942 8.83594 li
20.4942 8.63868 li
20.209 9.52247 li
20.209 10.4063 li
20.3985 11.2901 li
20.6836 12.0752 li
20.3985 11.4864 li
20.0196 10.7989 li
19.5459 10.3086 li
19.2608 10.1114 li
18.8809 9.91504 li
19.3555 9.71876 li
19.7354 9.42383 li
20.1143 9.03223 li
20.3047 8.63868 li
20.3985 8.34473 li
20.4942 8.34473 li
20.6836 8.63868 li
20.9678 8.9336 li
21.5372 9.32715 li
22.1065 9.81739 li
22.6768 10.4063 li
23.4356 11.9776 li
23.9102 12.7618 li
24.4795 13.4493 li
25.1426 14.4307 li
25.712 15.5098 li
25.712 16.0997 li
25.6172 15.8047 li
25.3331 15.5098 li
24.9532 14.9209 li
24.8594 15.8047 li
24.9532 16.2959 li
25.0479 16.4922 li
25.4278 16.6876 li
25.5235 16.8858 li
25.4278 17.0811 li
25.2383 17.1797 li
24.7637 17.2774 li
24.5733 17.5723 li
24.2891 17.8663 li
24.004 18.0626 li
23.625 18.0626 li
23.625 18.2598 li
23.9102 18.4551 li
24.2891 18.6514 li
24.9532 18.6514 li
25.1426 18.4551 li
25.2383 18.2598 li
25.3331 17.7686 li
25.6172 18.3584 li
25.712 18.75 li
25.6172 18.9473 li
25.5235 19.044 li
25.5235 19.3399 li
24.0997 18.8487 li
23.4356 18.4551 li
cp
26.6602 29.5479 mo
26.5674 30.7266 li
26.4717 32.001 li
26.2813 31.4131 li
26.1866 30.8243 li
26.4717 30.2354 li
26.6602 29.5479 li
cp
24.1924 48.7891 mo
24.0997 48.7891 li
24.1924 48.6905 li
24.1924 48.7891 li
cp
20.5879 48.7891 mo
17.6485 48.7891 li
17.7422 48.6905 li
20.5879 48.6905 li
22.0108 48.5918 li
23.4356 48.6905 li
23.5303 48.7891 li
20.5879 48.7891 li
cp
19.8301 30.627 mo
20.0196 30.627 li
20.209 30.8243 li
20.3047 31.0206 li
20.209 31.1182 li
20.209 31.3155 li
20.3985 31.7081 li
20.1143 31.3155 li
19.9249 31.1182 li
19.7354 31.1182 li
19.6397 30.9219 li
19.6397 30.7266 li
19.8301 30.627 li
cp
24.3838 24.4434 mo
24.4795 24.3458 li
24.669 24.2481 li
24.8594 24.3458 li
24.9532 24.4434 li
24.9532 24.6407 li
24.8594 24.7374 li
24.4795 24.7374 li
24.3838 24.5411 li
24.3838 24.4434 li
cp
14.6114 19.2403 mo
14.8018 19.3399 li
14.8018 19.9278 li
14.7061 20.418 li
14.6114 19.8301 li
14.4209 19.2403 li
14.6114 19.2403 li
cp
5.97754 20.0254 mo
5.02735 20.3213 li
5.31348 20.0254 li
5.88184 19.6329 li
6.26172 19.6329 li
6.73536 19.7325 li
5.97754 20.0254 li
cp
5.02735 17.8663 mo
4.93262 18.4551 li
4.55372 19.4376 li
4.36426 18.8487 li
4.45801 18.2598 li
4.64942 17.7686 li
5.02735 17.376 li
5.12403 17.376 li
5.02735 17.8663 li
cp
3.79395 17.67 mo
3.50977 18.0626 li
2.65626 18.6514 li
2.4668 18.8487 li
2.65626 18.3584 li
3.03614 17.8663 li
3.50977 17.4737 li
4.07911 17.1797 li
3.79395 17.67 li
cp
2.3711 16.4922 mo
1.89747 16.5909 li
1.32813 16.7872 li
0.85254 16.8858 li
1.80176 16.2959 li
2.3711 16.1983 li
2.84571 16.2959 li
2.3711 16.4922 li
cp
2.4668 15.1182 mo
1.89747 14.8243 li
0.85254 14.2344 li
1.42286 14.334 li
1.99219 14.5293 li
2.56055 14.8243 li
3.03614 15.3145 li
2.4668 15.1182 li
cp
4.36426 9.71876 mo
3.88965 9.32715 li
3.6045 8.9336 li
3.50977 8.63868 li
3.50977 8.34473 li
4.17383 9.12989 li
4.55372 9.52247 li
4.64942 10.0127 li
4.36426 9.71876 li
cp
3.88965 11.2901 mo
3.6045 11.584 li
2.84571 11.9776 li
2.84571 11.7803 li
3.03614 11.4864 li
3.41504 11.1915 li
4.07911 10.8965 li
3.88965 11.2901 li
cp
3.79395 5.69336 mo
3.50977 5.98829 li
3.13086 6.18458 li
3.32032 5.792 li
4.17383 4.90918 li
3.79395 5.69336 li
cp
2.4668 5.10547 mo
1.99219 5.30176 li
1.04297 5.59668 li
1.32813 5.20313 li
1.80176 5.00684 li
2.65626 4.71094 li
2.84571 4.81153 li
2.4668 5.10547 li
cp
2.75 4.12403 mo
2.27637 4.0254 li
1.70704 3.73145 li
1.32813 3.43653 li
1.89747 3.43653 li
2.3711 3.53418 li
2.84571 3.73145 li
3.32032 4.0254 li
2.75 4.12403 li
cp
15.2745 3.63379 mo
14.8018 3.63379 li
13.8526 3.53418 li
14.042 3.43653 li
14.3252 3.3379 li
14.8018 3.3379 li
15.7491 3.43653 li
15.2745 3.63379 li
cp
15.6553 2.45411 mo
15.2745 2.0625 li
14.7061 0.981446 li
14.9913 1.08008 li
15.2745 1.27637 li
15.6553 1.66895 li
15.9395 2.25879 li
16.129 2.84766 li
15.6553 2.45411 li
cp
19.3555 4.51563 mo
19.6397 4.12403 li
20.0196 3.82911 li
20.4942 3.63379 li
19.9249 4.32032 li
19.2608 5.00684 li
19.3555 4.51563 li
cp
20.0196 5.00684 mo
20.6836 5.00684 li
21.3477 5.20313 li
20.8741 5.39942 li
20.3985 5.49805 li
19.9249 5.39942 li
19.4493 5.20313 li
19.6397 5.00684 li
20.0196 5.00684 li
cp
22.962 8.54102 mo
22.7706 8.04981 li
22.5811 7.65723 li
22.2959 7.26465 li
22.3917 7.26465 li
22.5811 7.36329 li
22.7706 7.55958 li
22.962 8.04981 li
23.2452 8.9336 li
22.962 8.54102 li
cp
21.6319 6.77442 mo
21.1573 6.97071 li
21.3477 6.57715 li
22.1065 5.792 li
22.4864 5.49805 li
22.5811 5.49805 li
22.2959 5.98829 li
22.0108 6.38184 li
21.6319 6.77442 li
cp
23.4356 4.41895 mo
22.962 4.51563 li
22.0108 4.51563 li
22.3917 4.22168 li
22.8663 4.12403 li
23.4356 4.0254 li
23.9102 4.12403 li
23.4356 4.41895 li
cp
22.962 1.57129 mo
23.0557 1.27637 li
23.2452 0.590821 li
23.3409 0.786133 li
23.4356 0.884766 li
23.4356 1.27637 li
23.2452 1.57129 li
23.1514 1.76856 li
22.962 1.86622 li
22.962 1.57129 li
cp
22.2022 1.9629 mo
21.917 1.76856 li
21.5372 1.375 li
21.3477 1.08008 li
21.7276 1.17872 li
22.1065 1.375 li
22.6768 2.0625 li
22.2022 1.9629 li
cp
26.9454 48.7891 mo
25.5235 48.8858 li
25.3331 48.7891 li
25.0479 48.7891 li
25.2383 48.6905 li
25.6172 48.6905 li
25.8077 48.5918 li
24.0997 48.5918 li
22.3917 48.3956 li
19.5459 48.3956 li
18.1221 48.5918 li
16.6993 48.7891 li
13.4727 48.7891 li
12.7139 48.5918 li
12.334 48.5918 li
11.9542 48.6905 li
7.87403 48.6905 li
7.87403 48.5918 li
7.4004 48.5918 li
6.92579 48.6905 li
6.5459 48.7891 li
6.07227 48.6905 li
3.41504 48.6905 li
3.7002 48.3956 li
4.07911 48.2002 li
3.88965 48.2002 li
3.79395 48.1006 li
3.79395 47.9043 li
3.88965 47.7081 li
4.26856 47.4131 li
4.17383 47.3145 li
3.98438 47.2178 li
3.79395 47.3145 li
3.7002 47.3145 li
3.50977 47.2178 li
3.41504 47.3145 li
3.41504 47.4131 li
3.32032 47.8067 li
3.32032 48.003 li
3.41504 48.1006 li
3.41504 47.9043 li
3.50977 47.7081 li
3.6045 47.6104 li
3.7002 47.6104 li
3.6045 47.8067 li
3.6045 48.2979 li
3.41504 48.2979 li
3.13086 48.003 li
3.13086 47.5118 li
3.03614 47.4131 li
2.94043 47.7081 li
3.03614 47.9043 li
3.13086 48.2002 li
3.32032 48.3956 li
3.22461 48.4932 li
3.13086 48.4932 li
2.94043 48.6905 li
2.65626 48.7891 li
1.99219 48.7891 li
1.89747 48.9854 li
1.89747 49.6719 li
26.9454 49.6719 li
26.9454 48.7891 li
cp
26.9454 34.7999 mo
26.7559 34.9473 li
26.7559 35.045 li
26.5674 35.1436 li
26.5674 35.3399 li
26.9454 34.9473 li
26.9454 34.7999 li
cp
26.9454 20.1729 mo
26.8497 20.1241 li
26.6602 19.9278 li
26.9454 20.2959 li
26.9454 20.1729 li
cp
26.9454 19.712 mo
26.7559 19.6329 li
26.8497 19.8301 li
26.9454 19.9278 li
26.9454 19.712 li
cp
26.9454 19.3057 mo
26.8497 19.2403 li
26.8497 19.3399 li
26.9454 19.4376 li
26.9454 19.3057 li
cp
26.9454 16.002 mo
26.7559 16.002 li
26.6602 16.0997 li
26.9454 16.1983 li
26.9454 16.002 li
cp
26.9454 8.68165 mo
26.6602 8.63868 li
26.2813 8.54102 li
25.9024 8.63868 li
24.4795 9.22852 li
24.4795 9.32715 li
24.3838 9.42383 li
24.5733 9.42383 li
24.7637 9.32715 li
25.1426 9.42383 li
25.6172 9.52247 li
26.0918 9.62208 li
26.2813 9.62208 li
26.5674 9.52247 li
26.1866 10.1114 li
25.9961 10.7002 li
25.9024 11.3877 li
26.1866 11.2901 li
26.4717 11.0948 li
26.7559 11.2901 li
26.9454 11.4864 li
26.9454 11.0694 li
26.6602 10.9942 li
26.9454 10.6026 li
26.9454 10.21 li
26.5674 10.7002 li
26.1866 11.0948 li
26.2813 10.6016 li
26.4717 10.209 li
26.9454 9.32813 li
26.9454 9.12989 li
26.6602 9.22852 li
26.1866 9.32715 li
25.6172 9.22852 li
25.1426 9.12989 li
25.712 8.9336 li
26.1866 8.9336 li
26.6602 8.83594 li
26.9454 8.89356 li
26.9454 8.68165 li
cp
26.9454 0.00292969 mo
26.8497 0.491211 li
26.7559 0.6875 li
26.7559 0.786133 li
26.6602 0.884766 li
26.6602 1.17872 li
26.5674 1.375 li
26.5674 1.66895 li
26.4717 1.86622 li
26.2813 1.27637 li
26.0918 1.08008 li
25.8077 0.981446 li
25.3331 0.786133 li
25.6172 1.17872 li
25.8077 1.66895 li
25.5235 1.9629 li
25.2383 2.16114 li
24.669 2.45411 li
24.669 1.86622 li
24.4795 1.375 li
24.1924 0.981446 li
23.8155 0.590821 li
23.8155 1.27637 li
23.7198 1.66895 li
23.8155 2.0625 li
23.9102 2.74903 li
23.4356 2.45411 li
23.0557 2.0625 li
23.4356 1.66895 li
23.5303 1.375 li
23.625 1.17872 li
23.3409 0.19629 li
23.2452 0.295899 li
23.2452 0.491211 li
22.962 0.786133 li
22.8663 1.08008 li
22.6768 1.76856 li
22.3917 1.375 li
22.0108 1.08008 li
21.5372 0.786133 li
21.0626 0.786133 li
21.3477 1.17872 li
21.5372 1.57129 li
22.0108 2.0625 li
22.4864 2.0625 li
22.7706 2.16114 li
23.2452 2.45411 li
24.0997 3.3379 li
24.1924 3.53418 li
24.1924 3.63379 li
24.0997 3.73145 li
23.7198 3.63379 li
23.3409 3.63379 li
23.0557 3.73145 li
22.6768 3.82911 li
22.0108 4.22168 li
21.5372 4.71094 li
22.8663 4.71094 li
23.4356 4.61426 li
23.7198 4.51563 li
24.004 4.32032 li
24.004 4.51563 li
23.9102 4.71094 li
23.8155 5.10547 li
23.8155 5.49805 li
23.9102 5.89063 li
24.004 6.18458 li
24.0997 6.28321 li
24.004 6.47852 li
23.8155 6.47852 li
23.4356 6.67676 li
24.004 6.87208 li
24.3838 6.97071 li
24.669 7.06836 li
24.3838 7.36329 li
24.004 7.65723 li
23.7198 8.04981 li
23.5303 8.44239 li
23.5303 8.9336 li
23.4356 9.03223 li
23.2452 8.63868 li
23.2452 7.8545 li
23.1514 7.65723 li
22.3917 7.06836 li
22.0108 6.87208 li
22.2022 6.57715 li
22.3917 6.18458 li
22.7706 5.59668 li
23.2452 5.10547 li
22.6768 5.20313 li
22.1065 5.49805 li
21.6319 5.792 li
21.253 6.18458 li
20.9678 6.67676 li
20.9678 6.97071 li
21.0626 7.26465 li
21.4424 7.16602 li
21.917 6.97071 li
22.2022 7.55958 li
22.5811 8.2461 li
22.8663 8.83594 li
23.1514 9.03223 li
23.5303 9.22852 li
23.5303 9.71876 li
23.2452 9.32715 li
22.962 9.03223 li
22.2959 8.54102 li
21.5372 8.14942 li
21.253 7.8545 li
20.9678 7.46094 li
20.7784 7.06836 li
20.5879 6.77442 li
20.0196 6.18458 li
19.0704 5.30176 li
19.2608 5.30176 li
19.2608 5.39942 li
20.209 5.69336 li
21.1573 5.69336 li
21.7276 5.10547 li
21.1573 5.00684 li
20.6836 4.81153 li
19.7354 4.81153 li
20.8741 3.43653 li
19.7354 3.73145 li
19.5459 3.82911 li
19.3555 4.0254 li
19.1661 4.81153 li
18.8809 5.10547 li
18.4063 4.71094 li
17.8379 4.32032 li
16.793 3.43653 li
16.5088 3.3379 li
16.4141 3.14161 li
16.2247 2.16114 li
16.129 1.86622 li
16.0342 1.66895 li
15.8448 1.375 li
15.6553 1.27637 li
15.2745 0.981446 li
14.4209 0.6875 li
14.6114 1.375 li
14.8018 1.9629 li
15.1807 2.55274 li
15.7491 2.94532 li
16.0342 3.04395 li
16.4141 3.24024 li
16.129 3.3379 li
15.9395 3.3379 li
15.4659 3.14161 li
14.8956 3.04395 li
14.4209 2.94532 li
14.1368 3.04395 li
13.7569 3.14161 li
13.2842 3.63379 li
13.2842 3.73145 li
14.5167 3.92676 li
15.1807 3.92676 li
15.4659 3.82911 li
15.7491 3.63379 li
16.0342 3.53418 li
16.3194 3.53418 li
15.5606 4.22168 li
15.5606 4.12403 li
15.7491 4.0254 li
15.7491 3.82911 li
15.1807 4.0254 li
14.042 4.22168 li
13.4727 4.41895 li
13.0928 4.81153 li
12.9034 5.10547 li
12.9034 5.39942 li
13.0928 5.20313 li
13.2842 5.10547 li
13.4727 5.69336 li
13.6631 5.89063 li
14.1368 6.18458 li
14.8018 6.47852 li
15.3711 6.87208 li
14.8956 6.97071 li
14.5167 6.97071 li
13.5674 6.87208 li
13.0928 6.77442 li
12.7139 6.67676 li
12.2383 6.57715 li
11.7647 6.57715 li
11.4805 6.67676 li
11.1954 6.87208 li
10.7208 7.46094 li
10.7208 6.77442 li
10.627 6.18458 li
10.4376 5.89063 li
9.86817 5.30176 li
9.67774 5.00684 li
9.67774 3.63379 li
9.58204 3.63379 li
9.48731 3.92676 li
9.29883 4.22168 li
8.82227 4.81153 li
8.53809 5.39942 li
8.44336 5.69336 li
8.44336 6.08692 li
8.53809 6.18458 li
8.53809 6.47852 li
8.15918 6.18458 li
7.58985 5.69336 li
6.83106 5.39942 li
6.16602 5.00684 li
5.40723 4.61426 li
4.64942 4.41895 li
4.36426 4.22168 li
3.98438 4.12403 li
3.7002 3.92676 li
2.84571 3.3379 li
2.56055 3.24024 li
2.18165 3.14161 li
1.51856 3.14161 li
0.85254 3.24024 li
0.85254 3.43653 li
0.947266 3.53418 li
1.42286 3.92676 li
1.99219 4.12403 li
2.56055 4.32032 li
3.13086 4.22168 li
3.22461 4.22168 li
3.41504 4.12403 li
3.50977 4.12403 li
3.7002 4.22168 li
3.32032 4.41895 li
2.94043 4.41895 li
2.27637 4.51563 li
1.61133 4.71094 li
1.13868 5.10547 li
0.663086 5.69336 li
0.56836 5.69336 li
0.472657 5.89063 li
1.42286 5.792 li
1.89747 5.69336 li
2.65626 5.30176 li
3.50977 4.41895 li
3.98438 4.32032 li
4.17383 4.32032 li
4.36426 4.51563 li
3.98438 4.81153 li
3.50977 5.10547 li
3.22461 5.49805 li
3.13086 5.69336 li
3.03614 5.98829 li
2.84571 6.18458 li
2.65626 6.57715 li
3.13086 6.38184 li
3.7002 6.18458 li
4.07911 5.89063 li
4.26856 5.59668 li
4.36426 5.30176 li
4.45801 5.10547 li
4.45801 4.71094 li
4.55372 4.51563 li
5.31348 4.81153 li
5.97754 5.20313 li
7.4004 6.08692 li
7.4004 6.18458 li
7.11426 5.98829 li
6.83106 5.89063 li
6.26172 5.89063 li
5.59668 5.98829 li
5.02735 6.08692 li
5.02735 6.18458 li
5.40723 6.18458 li
5.88184 6.38184 li
6.26172 6.67676 li
5.69239 6.77442 li
4.93262 7.06836 li
4.55372 7.26465 li
4.26856 7.46094 li
5.69239 7.75586 li
6.16602 7.75586 li
6.73536 7.55958 li
7.02051 7.36329 li
7.21094 7.16602 li
7.21094 6.87208 li
7.02051 6.77442 li
7.49512 6.67676 li
7.87403 6.38184 li
9.0127 7.55958 li
9.58204 8.04981 li
10.0567 8.63868 li
10.0567 8.9336 li
9.96094 9.32715 li
9.96094 9.81739 li
10.0567 10.7002 li
9.77149 10.0127 li
9.77149 9.42383 li
9.58204 8.83594 li
9.48731 8.63868 li
9.29883 8.44239 li
8.34864 7.95118 li
8.15918 7.75586 li
8.44336 8.14942 li
8.63282 8.63868 li
8.91797 9.62208 li
8.82227 9.62208 li
8.63282 9.52247 li
8.44336 9.32715 li
8.25391 9.22852 li
7.68458 9.22852 li
7.4004 9.32715 li
7.21094 9.32715 li
7.02051 9.22852 li
7.49512 8.63868 li
7.68458 8.2461 li
7.68458 7.8545 li
7.49512 6.77442 li
6.73536 8.14942 li
6.64161 8.44239 li
6.64161 8.83594 li
6.83106 9.42383 li
6.64161 10.3086 li
6.64161 10.7989 li
6.73536 11.1915 li
6.5459 11.1915 li
6.35645 10.9942 li
6.26172 10.9942 li
5.59668 10.7002 li
4.93262 10.5049 li
4.93262 10.0127 li
4.8379 9.71876 li
4.64942 9.32715 li
4.45801 9.03223 li
3.88965 8.54102 li
3.32032 7.95118 li
3.22461 8.34473 li
3.32032 8.73731 li
3.41504 9.03223 li
3.6045 9.42383 li
4.07911 9.91504 li
4.64942 10.4063 li
4.64942 10.5049 li
4.45801 10.5049 li
4.07911 10.7002 li
3.6045 10.7989 li
3.22461 10.9942 li
2.84571 11.2901 li
2.75 11.4864 li
2.65626 11.7803 li
2.75 12.4678 li
2.94043 12.2715 li
3.50977 11.9776 li
3.88965 11.584 li
4.26856 11.0948 li
4.55372 10.6016 li
5.2168 10.7989 li
5.88184 11.0948 li
7.02051 12.0752 li
6.26172 11.879 li
5.88184 11.7803 li
5.40723 11.6817 li
5.02735 11.6817 li
4.74317 11.7803 li
4.36426 11.9776 li
4.07911 12.2715 li
4.45801 12.2715 li
4.74317 12.4678 li
4.93262 12.4678 li
4.17383 12.8604 li
3.7002 13.0567 li
3.32032 13.1543 li
3.22461 13.253 li
2.84571 13.253 li
2.94043 14.0381 li
3.22461 14.7256 li
3.6045 15.4122 li
4.07911 16.002 li
3.50977 15.6094 li
3.03614 15.0196 li
2.65626 14.5293 li
2.08594 14.1368 li
1.51856 13.9395 li
1.13868 13.8418 li
0.75879 13.9395 li
0 14.0381 li
0 14.1368 li
0.378907 14.334 li
1.13868 14.9209 li
1.51856 15.1182 li
2.27637 15.4122 li
3.03614 15.5098 li
3.6045 15.8047 li
3.13086 15.9024 li
2.18165 15.9024 li
1.70704 16.002 li
1.32813 16.1983 li
0.947266 16.4922 li
0.663086 16.8858 li
0.56836 17.2774 li
1.51856 17.2774 li
2.3711 16.9825 li
3.13086 16.4922 li
3.79395 16.002 li
4.17383 16.3936 li
4.45801 16.4922 li
4.55372 16.6876 li
3.88965 16.9825 li
3.6045 17.0811 li
3.22461 17.2774 li
2.94043 17.4737 li
2.65626 17.8663 li
2.27637 18.6514 li
2.18165 19.3399 li
2.3711 19.4376 li
3.32032 18.6514 li
4.07911 17.67 li
4.64942 16.6876 li
4.93262 16.7872 li
5.12403 16.9825 li
4.64942 17.5723 li
4.26856 18.1602 li
4.07911 18.6514 li
4.17383 19.2403 li
4.26856 19.5362 li
4.45801 19.8301 li
4.8379 19.2403 li
5.12403 18.6514 li
5.2168 18.5538 li
5.78809 18.3584 li
6.35645 18.3584 li
6.45215 18.4551 li
6.07227 18.6514 li
5.78809 18.8487 li
5.59668 19.1426 li
5.59668 19.2403 li
5.97754 19.1426 li
6.45215 19.2403 li
6.83106 19.3399 li
7.11426 19.3399 li
6.83106 19.4376 li
6.35645 19.4376 li
6.07227 19.3399 li
5.78809 19.4376 li
5.59668 19.4376 li
5.12403 19.7325 li
4.45801 20.5176 li
4.45801 20.6153 li
5.12403 20.5176 li
5.78809 20.418 li
6.45215 20.1241 li
7.02051 19.7325 li
7.11426 19.5362 li
7.30567 19.4376 li
7.4004 19.3399 li
7.49512 19.2403 li
7.78126 19.1426 li
7.96973 19.044 li
8.53809 18.4551 li
7.87403 18.4551 li
7.21094 18.2598 li
6.92579 18.3584 li
6.64161 18.3584 li
7.21094 18.0626 li
7.78126 17.5723 li
8.25391 17.7686 li
8.72852 18.0626 li
9.58204 18.6514 li
9.96094 18.9473 li
10.4376 19.1426 li
10.7208 19.1426 li
10.7208 19.2403 li
10.5313 19.2403 li
10.3418 19.3399 li
9.96094 19.4376 li
9.77149 19.5362 li
9.39258 19.5362 li
9.20313 19.6329 li
9.58204 19.7325 li
9.86817 19.9278 li
10.1524 20.0254 li
10.5313 20.2227 li
11.1954 20.1241 li
11.4805 20.0254 li
11.7647 19.8301 li
11.8594 20.0254 li
11.8594 20.3213 li
11.7647 20.6153 li
11.8594 20.9102 li
12.0489 21.3028 li
12.334 21.6954 li
12.7139 21.9893 li
12.7139 21.3028 li
12.8086 21.4004 li
12.8086 21.4981 li
13.1876 21.1055 li
13.5674 20.8116 li
13.8526 20.5176 li
14.042 20.1241 li
14.2325 19.2403 li
14.4209 19.6329 li
14.5167 20.1241 li
14.5167 20.6153 li
14.6114 20.8116 li
14.7061 20.9102 li
14.7061 20.6153 li
14.8018 20.418 li
14.8956 20.0254 li
15.085 19.6329 li
14.8956 19.2403 li
14.3252 19.044 li
14.7061 18.9473 li
15.1807 18.75 li
16.793 19.3399 li
16.8887 19.4376 li
16.3194 19.6329 li
15.9395 19.8301 li
15.5606 20.1241 li
15.2745 20.418 li
15.085 20.8116 li
15.8448 20.8116 li
16.129 20.7129 li
16.4141 20.5176 li
17.1729 19.7325 li
17.4571 19.6329 li
18.0274 19.8301 li
17.3624 20.0254 li
16.793 20.418 li
16.6993 20.6153 li
16.6993 20.7129 li
16.793 20.7129 li
17.1729 20.6153 li
17.6485 20.5176 li
18.0274 20.3213 li
18.2168 20.1241 li
18.3126 19.9278 li
19.9249 20.0254 li
20.7784 20.5176 li
21.1573 20.7129 li
21.6319 20.9102 li
21.917 21.0079 li
22.2022 21.0079 li
22.6768 20.8116 li
22.962 20.7129 li
23.4356 20.7129 li
23.7198 20.9102 li
23.625 21.1055 li
23.5303 21.2042 li
23.3409 21.3028 li
23.2452 21.4004 li
23.1514 21.6954 li
23.2452 21.8907 li
23.3409 21.8907 li
23.5303 22.0889 li
23.5303 22.1846 li
23.4356 22.3819 li
23.4356 22.5782 li
23.625 22.6758 li
23.7198 22.7745 li
23.7198 22.9708 li
23.8155 23.167 li
24.004 23.2657 li
24.2891 23.2657 li
24.4795 23.0704 li
24.4795 22.7745 li
24.669 22.5782 li
24.8594 22.5782 li
24.9532 22.4805 li
25.0479 22.2842 li
25.1426 21.8907 li
25.2383 21.8907 li
25.8077 22.4805 li
25.9961 22.7745 li
26.1866 23.167 li
26.2813 23.9522 li
26.4717 24.837 li
26.5674 25.7198 li
26.5674 26.3086 li
26.377 26.3086 li
26.1866 26.211 li
25.9961 26.0137 li
25.8077 25.7198 li
25.5235 25.4249 li
25.4278 25.4249 li
25.2383 25.3282 li
24.9532 25.4249 li
24.5733 25.5235 li
24.4795 25.4249 li
24.2891 25.3282 li
24.1924 25.1299 li
24.1924 24.837 li
24.3838 24.837 li
24.3838 24.9336 li
24.669 24.9336 li
24.9532 24.837 li
25.0479 24.7374 li
25.0479 24.2481 li
24.9532 24.1485 li
24.7637 24.0508 li
24.669 24.0508 li
24.3838 24.1485 li
24.3838 24.0508 li
24.4795 23.9522 li
24.5733 23.6573 li
24.8594 23.462 li
25.0479 23.3633 li
24.8594 23.3633 li
24.5733 23.462 li
24.3838 23.6573 li
24.1924 23.9522 li
24.1924 24.2481 li
24.004 24.837 li
24.0997 25.2295 li
24.1924 25.4249 li
24.2891 25.5235 li
24.5733 25.6211 li
24.7637 25.6211 li
25.3331 25.5235 li
25.6172 25.7198 li
25.712 25.9151 li
25.712 26.0137 li
25.3331 26.0137 li
24.9532 26.211 li
24.7637 26.6026 li
24.6846 27.0127 li
24.7637 27.0938 li
24.669 27.2911 li
24.4795 27.2911 li
24.2891 27.0938 li
24.0997 27.0938 li
23.7198 27.2911 li
23.625 27.1924 li
23.5303 27.1924 li
23.3409 26.9961 li
23.3409 26.7012 li
23.0557 26.4073 li
22.8663 26.5049 li
22.7706 26.6026 li
22.4864 26.7999 li
22.3917 26.8975 li
22.2022 26.8975 li
22.0108 26.9961 li
21.917 27.1924 li
21.8223 27.4864 li
21.917 27.586 li
22.0108 27.6827 li
22.0108 27.9786 li
21.1573 28.0752 li
20.6836 28.1739 li
20.3047 28.3702 li
20.209 28.2715 li
20.1143 28.2715 li
19.7354 28.4678 li
19.1661 28.5674 li
19.4493 28.1739 li
19.0704 28.1739 li
18.7872 28.0752 li
18.8809 28.2715 li
19.0704 28.2715 li
19.1661 28.3702 li
19.1661 28.4678 li
19.0704 28.5674 li
19.0704 28.6641 li
19.1661 28.7637 li
19.3555 28.7637 li
19.6397 28.6641 li
19.9249 28.4678 li
20.1143 28.3702 li
20.3047 28.4678 li
20.3047 28.5674 li
20.209 28.6641 li
19.8301 28.8614 li
19.5459 29.254 li
19.3555 29.6456 li
19.0704 29.9405 li
18.6915 30.1377 li
18.501 30.1377 li
18.3126 30.0391 li
18.2168 30.0391 li
18.0274 29.8428 li
17.9317 29.5479 li
18.0274 29.1553 li
18.2168 28.7637 li
18.4063 28.6641 li
18.5967 28.6641 li
18.9756 29.0567 li
18.9756 29.3516 li
18.6915 29.6456 li
18.501 29.6456 li
18.3126 29.4493 li
18.4063 29.3516 li
18.501 29.1553 li
18.4063 29.0567 li
18.3126 29.3516 li
18.2168 29.5479 li
18.4063 29.7442 li
18.5967 29.8428 li
18.7872 29.7442 li
18.8809 29.6456 li
19.0704 29.3516 li
19.0704 28.7637 li
18.8809 28.6641 li
18.7872 28.6641 li
18.6915 28.5674 li
18.3126 28.5674 li
17.9317 28.959 li
17.7422 29.3516 li
17.8379 29.8428 li
17.8379 29.9405 li
18.0274 30.1377 li
18.4063 30.334 li
18.7872 30.2354 li
19.4493 29.9405 li
19.4493 30.1377 li
19.5459 30.334 li
19.6397 30.4317 li
19.6397 30.5303 li
19.5459 30.7266 li
19.5459 31.2159 li
19.7354 31.4131 li
19.9249 31.5118 li
20.1143 31.6084 li
20.209 31.8057 li
20.3985 31.9043 li
20.4942 31.6084 li
20.4942 31.4131 li
20.3985 31.1182 li
20.3985 30.8243 li
20.1143 30.5303 li
19.9249 30.4317 li
19.7354 30.4317 li
19.6397 30.334 li
19.5459 30.1377 li
19.4493 29.8428 li
19.7354 29.254 li
20.1143 28.8614 li
20.1143 28.959 li
20.0196 29.0567 li
20.0196 29.5479 li
20.209 29.6456 li
20.3985 29.6456 li
20.3985 29.9405 li
20.4942 30.1377 li
20.5879 30.2354 li
20.6836 30.4317 li
20.4942 30.627 li
20.6836 30.7266 li
20.7784 30.9219 li
20.7784 31.1182 li
20.8741 31.3155 li
20.9678 31.3155 li
21.0626 31.4131 li
21.1573 31.6084 li
21.253 31.7081 li
21.4424 31.6084 li
21.5372 31.6084 li
21.6319 31.5118 li
21.6319 31.3155 li
21.8223 31.2159 li
21.917 31.1182 li
21.917 30.9219 li
22.1065 30.8243 li
22.2022 30.627 li
22.2022 30.1377 li
22.0108 30.1377 li
21.917 30.0391 li
22.1065 29.6456 li
22.2022 29.5479 li
22.3917 29.6456 li
22.7706 29.3516 li
22.962 28.959 li
22.7706 28.7637 li
22.7706 28.5674 li
22.5811 28.2715 li
22.7706 28.1739 li
23.2452 28.1739 li
23.625 28.2715 li
23.9102 28.3702 li
23.625 28.5674 li
23.2452 28.959 li
23.2452 29.1553 li
23.1514 29.254 li
22.962 29.5479 li
22.6768 29.7442 li
22.6768 30.1377 li
22.7706 30.334 li
23.0557 30.5303 li
23.0557 30.627 li
22.962 30.627 li
22.8663 30.9219 li
22.962 31.2159 li
23.1514 31.4131 li
23.2452 31.6084 li
23.2452 31.9043 li
23.3409 32.001 li
23.7198 32.001 li
23.9102 32.3946 li
24.004 32.4932 li
24.3838 32.4932 li
24.4795 32.2969 li
24.669 32.0997 li
24.9532 32.0997 li
25.0479 31.8057 li
25.0479 31.4131 li
25.2383 31.4131 li
25.3331 31.3155 li
25.5235 32.4932 li
25.3331 32.4932 li
25.1426 32.3946 li
24.9532 32.4932 li
24.5733 32.8858 li
24.5733 33.2784 li
24.669 33.4747 li
24.8594 33.5733 li
24.5733 33.8672 li
24.3838 34.4561 li
24.4795 34.751 li
24.4795 34.8487 li
24.669 34.9473 li
25.3331 34.751 li
25.712 34.5547 li
25.9024 34.2598 li
25.9961 34.3584 li
26.2813 34.3584 li
26.0918 35.045 li
25.9961 35.8301 li
25.9024 37.2051 li
25.9961 38.2852 li
26.0918 39.2666 li
26.0918 39.4629 li
26.1866 39.7579 li
26.1866 39.9542 li
25.9961 40.1495 li
25.9024 39.9542 li
25.9024 39.8545 li
25.5235 39.0704 li
25.4278 39.168 li
25.4278 39.3643 li
25.2383 39.5616 li
25.1426 39.7579 li
25.1426 39.9542 li
25.0479 40.0518 li
25.0479 40.1495 li
25.1426 40.1495 li
25.0479 40.2481 li
24.8594 40.2481 li
24.669 40.3467 li
24.8594 40.3467 li
25.0479 40.543 li
24.7637 40.6397 li
24.669 40.837 li
24.4795 41.1309 li
24.1924 41.1309 li
24.3838 41.4258 li
24.5733 41.5245 li
24.7637 41.5245 li
25.0479 41.3272 li
25.3331 40.9356 li
25.4278 41.0333 li
25.4278 41.4258 li
25.3331 41.8184 li
25.3331 42.1133 li
25.4278 42.5059 li
25.8077 43.0938 li
26.377 43.3887 li
26.377 43.4874 li
26.2813 43.7823 li
25.9961 43.9776 li
25.712 43.7823 li
25.4278 43.6836 li
24.7637 43.6836 li
24.0997 43.9776 li
23.4356 44.1739 li
23.8155 44.1739 li
24.2891 43.9776 li
24.7637 43.9776 li
25.1426 43.8799 li
25.3331 44.0762 li
25.5235 44.1739 li
25.712 44.1739 li
25.9024 44.2725 li
25.9024 44.5665 li
25.712 45.1553 li
25.5235 45.3516 li
25.712 45.2549 li
25.9024 45.1553 li
26.0918 44.8614 li
26.0918 44.3702 li
26.1866 44.2725 li
26.2813 44.2725 li
26.5674 44.1739 li
26.9454 44.1739 li
26.9454 43.586 li
26.8497 43.4874 li
26.7559 43.292 li
26.1866 42.9971 li
25.9024 42.7999 li
25.6172 42.5059 li
25.5235 41.917 li
25.6172 41.3272 li
25.8077 40.7393 li
26.0918 40.2481 li
26.1866 40.543 li
26.1866 40.7393 li
25.9961 41.7208 li
25.9961 42.211 li
26.5674 42.7999 li
26.9454 42.8985 li
26.9454 42.6036 li
26.7559 42.6036 li
26.6602 42.5059 li
26.5674 42.3096 li
26.6602 42.1133 li
26.5674 41.917 li
26.4717 40.9356 li
26.377 39.8545 li
26.2813 37.8916 li
26.2813 35.8301 li
26.6602 35.8301 li
26.7559 35.7325 li
26.8497 36.1241 li
26.9454 36.3204 li
26.9454 35.3409 li
26.8497 35.5362 li
26.6602 35.6338 li
26.4717 35.6338 li
26.377 35.5362 li
26.377 34.9473 li
26.4717 34.751 li
26.4717 34.6524 li
26.6602 34.6524 li
26.7559 34.5547 li
26.7559 34.1612 li
26.8497 34.0645 li
26.9454 34.0645 li
26.9454 33.9004 li
26.7559 33.9659 li
26.4717 34.0645 li
26.5674 33.5733 li
26.8497 33.5733 li
26.9454 33.6221 li
26.9454 33.3965 li
26.6602 33.2784 li
26.2813 33.0821 li
25.712 32.2969 li
25.6172 31.9043 li
25.5235 31.1182 li
25.6172 30.334 li
25.8077 29.6456 li
26.1866 29.0567 li
26.8497 27.9786 li
26.8497 28.4678 li
26.7559 28.8614 li
26.4717 29.6456 li
26.0918 30.4317 li
26.0918 31.3155 li
26.1866 31.9043 li
26.2813 32.1993 li
26.4717 32.4932 li
26.8497 32.7881 li
26.9454 32.837 li
26.9454 32.5909 li
26.6602 32.2969 li
26.6602 31.4131 li
26.7559 30.627 li
26.9454 29.7471 li
26.9454 26.8946 li
26.7559 26.1133 li
26.6602 25.2295 li
26.9454 25.3028 li
26.9454 25.1299 li
26.8497 25.1299 li
26.8497 24.2481 li
26.9454 24.1485 li
26.9454 23.7559 li
26.6602 23.6573 li
26.9454 23.3643 li
26.9454 22.8741 li
26.8497 23.0704 li
26.7559 23.3633 li
26.6602 23.5596 li
26.5674 23.5596 li
26.4717 23.462 li
26.4717 22.9708 li
26.2813 22.6758 li
26.1866 22.3819 li
25.712 21.793 li
24.5733 21.0079 li
24.1924 20.8116 li
23.7198 20.6153 li
23.0557 20.0254 li
22.3917 19.2403 li
21.917 18.5538 li
21.1573 17.5723 li
19.8301 15.6094 li
18.5967 14.334 li
18.1221 14.0381 li
17.2676 13.4493 li
16.3194 13.0567 li
15.2745 12.7618 li
14.3252 12.3692 li
13.377 11.879 li
12.5245 11.2901 li
12.1446 10.9942 li
11.7647 10.5049 li
10.7208 9.03223 li
9.58204 7.75586 li
8.25391 6.57715 li
6.92579 5.49805 li
7.4004 5.792 li
7.78126 6.08692 li
8.15918 6.47852 li
8.53809 6.77442 li
10.2461 7.95118 li
10.7208 8.44239 li
11.4805 9.62208 li
12.4288 10.7989 li
12.5245 10.8965 li
12.6182 10.8965 li
12.7139 10.9942 li
12.9034 10.9942 li
12.9034 11.2901 li
13.0928 11.2901 li
12.9981 11.1915 li
13.7569 11.584 li
14.6114 11.879 li
14.5167 12.0752 li
14.6114 12.1719 li
14.7061 11.9776 li
15.085 12.1719 li
15.2745 12.1719 li
15.2745 12.2715 li
15.1807 12.3692 li
15.3711 12.3692 li
15.4659 12.2715 li
16.129 12.4678 li
16.0342 12.6641 li
16.2247 12.6641 li
16.4141 12.5655 li
16.8887 12.7618 li
16.793 12.7618 li
16.6993 12.8604 li
16.793 12.9581 li
16.8887 12.9581 li
17.0782 12.8604 li
17.1729 12.7618 li
17.2676 12.8604 li
17.4571 12.8604 li
17.2676 13.0567 li
17.2676 13.1543 li
17.8379 13.0567 li
18.0274 13.1543 li
18.2168 13.253 li
18.0274 13.3516 li
18.1221 13.4493 li
18.2168 13.3516 li
18.501 13.3516 li
18.6915 13.5469 li
18.6915 13.6456 li
18.9756 13.6456 li
19.2608 13.8418 li
19.1661 13.9395 li
18.9756 13.9395 li
18.9756 14.0381 li
19.1661 14.1368 li
19.2608 14.1368 li
19.4493 14.0381 li
19.8301 14.4307 li
19.4493 14.4307 li
19.4493 14.5293 li
19.9249 14.628 li
20.1143 14.7256 li
20.3047 14.9209 li
19.9249 14.9209 li
19.8301 15.0196 li
20.0196 15.1182 li
20.3047 15.1182 li
20.4942 15.2168 li
20.6836 15.4122 li
20.5879 15.5098 li
20.3985 15.5098 li
20.3047 15.4122 li
20.209 15.5098 li
20.6836 15.6094 li
20.8741 15.7071 li
21.0626 15.9024 li
20.8741 16.002 li
20.7784 15.9024 li
20.3985 15.9024 li
21.253 16.1983 li
21.4424 16.4922 li
21.0626 16.3936 li
20.6836 16.3936 li
20.6836 16.4922 li
21.253 16.5909 li
21.5372 16.7872 li
21.7276 16.9825 li
21.3477 16.7872 li
20.8741 16.8858 li
21.5372 17.0811 li
21.917 17.2774 li
22.2022 17.5723 li
21.917 17.5723 li
21.7276 17.4737 li
21.6319 17.5723 li
22.0108 17.7686 li
22.2959 17.9649 li
22.5811 18.3584 li
22.6768 18.75 li
22.7706 18.5538 li
22.7706 18.3584 li
23.1514 18.75 li
23.5303 19.044 li
23.7198 19.2403 li
24.004 19.3399 li
24.1924 19.5362 li
24.2891 19.7325 li
24.3838 19.7325 li
24.3838 19.6329 li
24.4795 19.5362 li
24.5733 19.6329 li
24.669 19.9278 li
24.8594 20.3213 li
24.9532 20.0254 li
24.9532 19.8301 li
25.0479 19.8301 li
25.4278 20.8116 li
25.5235 20.5176 li
25.5235 20.2227 li
25.712 20.5176 li
25.8077 20.8116 li
25.9024 21.4004 li
26.0918 20.8116 li
25.9961 20.7129 li
25.9961 20.5176 li
26.2813 21.1055 li
26.377 21.793 li
26.377 21.8907 li
26.4717 21.4981 li
26.5674 21.2042 li
26.7559 21.793 li
26.8497 22.4805 li
26.9454 22.1368 li
26.9454 21.125 li
26.7559 20.8116 li
26.4717 20.5176 li
26.0918 20.2227 li
24.669 19.3399 li
25.0479 19.4376 li
25.5235 19.5362 li
26.2813 20.1241 li
26.9454 20.712 li
26.9454 20.5167 li
26.4717 20.0254 li
26.6602 18.8487 li
26.9454 18.2598 li
26.9454 17.1553 li
26.8497 16.9825 li
26.377 16.1983 li
25.1426 14.0381 li
24.4795 12.9581 li
23.625 11.9776 li
23.3409 11.0948 li
22.8663 10.3086 li
22.2959 9.52247 li
21.917 9.22852 li
21.5372 9.03223 li
21.1573 8.73731 li
20.8741 8.34473 li
20.3985 7.55958 li
19.8301 6.67676 li
19.2608 5.89063 li
18.6915 5.20313 li
18.0274 4.51563 li
18.6915 5.10547 li
20.4942 6.97071 li
21.0626 7.95118 li
21.5372 8.34473 li
22.0108 8.63868 li
22.962 9.42383 li
22.962 9.62208 li
23.2452 9.91504 li
23.3409 10.0127 li
23.3409 10.209 li
23.4356 10.209 li
23.5303 10.3086 li
23.625 10.6016 li
23.5303 10.7002 li
23.8155 10.9942 li
23.8155 11.0948 li
23.7198 11.1915 li
23.9102 11.2901 li
24.004 11.4864 li
23.9102 11.584 li
24.1924 11.7803 li
24.3838 11.9776 li
24.2891 11.9776 li
24.1924 12.0752 li
24.2891 12.1719 li
24.669 12.1719 li
24.7637 12.3692 li
24.5733 12.4678 li
24.7637 12.5655 li
24.9532 12.5655 li
25.0479 12.6641 li
25.1426 12.8604 li
24.9532 12.8604 li
24.7637 12.9581 li
24.9532 12.9581 li
25.1426 13.0567 li
25.4278 13.0567 li
25.5235 13.1543 li
25.5235 13.253 li
25.4278 13.3516 li
25.2383 13.3516 li
25.1426 13.4493 li
25.5235 13.5469 li
25.712 13.5469 li
25.8077 13.7442 li
25.5235 13.7442 li
25.3331 13.8418 li
25.5235 13.9395 li
25.712 13.9395 li
25.9024 14.0381 li
25.9961 14.1368 li
25.8077 14.1368 li
25.8077 14.2344 li
25.712 14.334 li
25.9961 14.334 li
26.1866 14.4307 li
26.2813 14.5293 li
26.1866 14.628 li
26.0918 14.5293 li
25.9961 14.628 li
25.9961 14.7256 li
26.0918 14.7256 li
26.1866 14.8243 li
26.1866 15.0196 li
26.2813 15.2168 li
26.4717 15.4122 li
26.5674 15.7071 li
26.8497 15.8047 li
26.9454 15.8047 li
26.9454 15.0196 li
26.8497 14.9209 li
26.7559 14.7256 li
26.8497 14.7256 li
26.9454 14.8223 li
26.9454 14.5782 li
26.8497 14.5293 li
26.5674 14.5293 li
26.4717 14.334 li
26.6602 14.0381 li
26.8497 13.9395 li
26.9454 13.9073 li
26.9454 13.6778 li
26.7559 13.7442 li
26.5674 13.8418 li
26.377 14.0381 li
25.9961 13.3516 li
25.5235 12.7618 li
25.5235 12.6641 li
26.0918 12.7618 li
26.5674 12.9581 li
26.9454 13.0245 li
26.9454 12.6387 li
26.8497 12.6641 li
26.377 12.5655 li
25.8077 12.4678 li
25.9961 12.3692 li
26.2813 12.2715 li
26.8497 12.2715 li
26.9454 12.2803 li
26.9454 11.9776 li
26.4717 11.9776 li
25.9024 12.0752 li
25.4278 12.4678 li
25.2383 12.3692 li
25.1426 12.2715 li
25.3331 11.9776 li
25.5235 11.1915 li
25.4278 10.7989 li
25.3331 10.6016 li
25.1426 10.3086 li
25.712 10.1114 li
26.2813 9.81739 li
26.2813 9.71876 li
25.712 9.71876 li
25.1426 9.52247 li
24.5733 9.42383 li
24.2891 9.52247 li
24.004 9.52247 li
24.2891 9.32715 li
24.669 8.73731 li
24.7637 8.44239 li
24.8594 7.06836 li
25.5235 7.06836 li
25.1426 7.46094 li
24.9532 7.8545 li
24.8594 8.34473 li
24.8594 8.83594 li
25.712 8.2461 li
26.0918 7.8545 li
26.377 7.36329 li
26.2813 7.16602 li
26.4717 7.36329 li
26.5674 7.65723 li
26.9454 8.04883 li
26.9454 7.69629 li
26.5674 7.06836 li
26.4717 6.67676 li
26.4717 6.18458 li
26.377 5.792 li
26.1866 5.39942 li
25.8077 5.00684 li
25.4278 4.81153 li
24.9532 4.51563 li
24.7637 4.32032 li
24.5733 4.12403 li
24.3838 3.53418 li
24.669 4.0254 li
25.0479 4.41895 li
25.4278 4.71094 li
25.712 4.81153 li
25.9961 4.90918 li
25.9961 4.71094 li
25.712 4.61426 li
25.4278 4.41895 li
24.4795 3.3379 li
24.8594 3.24024 li
25.2383 3.14161 li
25.6172 2.74903 li
25.712 2.55274 li
25.712 2.16114 li
25.9024 1.9629 li
26.1866 2.55274 li
26.377 2.65137 li
25.9961 2.74903 li
25.712 2.94532 li
25.1426 3.53418 li
24.9532 3.53418 li
24.8594 3.63379 li
25.2383 3.82911 li
26.0918 3.82911 li
26.2813 3.73145 li
26.5674 3.43653 li
26.7559 3.3379 li
26.7559 3.43653 li
26.6602 3.53418 li
26.4717 3.82911 li
26.1866 4.71094 li
26.1866 5.00684 li
26.4717 4.22168 li
26.8497 3.63379 li
26.5674 4.61426 li
26.5674 5.69336 li
26.8497 6.77442 li
26.9454 7.06934 li
26.9454 5.79004 li
26.8497 5.49805 li
26.7559 5.30176 li
26.8497 4.81153 li
26.9454 4.93458 li
26.9454 2.55274 li
26.8497 2.45411 li
26.8497 2.16114 li
26.7559 1.57129 li
26.9454 1.08301 li
0 0 0 1 cmyk
ef
51.9942 48.4932 mo
51.8995 48.5918 li
51.709 48.6905 li
51.8047 48.4932 li
51.8047 48.2979 li
51.709 48.1993 li
51.8995 48.1006 li
51.9942 48.1993 li
51.9942 48.4932 li
cp
49.7178 48.6905 mo
49.7178 48.5918 li
49.8126 48.3956 li
49.9073 48.3956 li
50.1934 48.4932 li
50.4766 48.5918 li
50.667 48.5918 li
50.667 48.3956 li
50.8555 48.2979 li
51.1407 48.2979 li
51.5206 48.5918 li
51.6153 48.5918 li
49.7178 48.6905 li
cp
49.4336 48.3956 mo
49.3379 48.2979 li
49.5264 48.1993 li
49.7178 48.1993 li
49.5264 48.2979 li
49.4336 48.3956 li
cp
48.959 48.6905 mo
48.4854 48.6905 li
48.5782 48.5918 li
48.4854 48.4932 li
48.3897 48.5918 li
48.1045 48.6905 li
47.7256 48.6905 li
47.9151 48.5918 li
47.9151 48.4932 li
47.8194 48.3956 li
47.7256 48.3956 li
47.6299 48.4932 li
47.5362 48.4932 li
47.4395 48.3956 li
47.3448 48.3956 li
47.6299 48.1993 li
47.8194 48.1006 li
48.0108 48.1993 li
48.0108 48.4932 li
48.293 48.3956 li
48.6749 48.4932 li
48.6749 48.5918 li
49.2432 48.3956 li
49.2432 48.4932 li
49.1475 48.4932 li
48.959 48.5918 li
48.959 48.6905 li
cp
47.1553 48.1993 mo
46.7764 48.1993 li
46.8711 48.1006 li
47.0606 48.004 li
47.4395 48.004 li
47.251 48.1006 li
47.1553 48.1993 li
cp
46.9649 48.6905 mo
46.4913 48.6905 li
46.6807 48.5918 li
46.7764 48.5918 li
47.1553 48.6905 li
46.9649 48.6905 li
cp
45.8272 48.6905 mo
45.6377 48.5918 li
46.1124 48.3956 li
46.3018 48.3956 li
46.586 48.4932 li
46.1124 48.6905 li
45.8272 48.6905 li
cp
44.9737 48.4932 mo
45.3526 48.2979 li
45.8272 48.2979 li
45.6377 48.4932 li
44.9737 48.4932 li
cp
44.7833 48.6905 mo
44.878 48.5918 li
44.9737 48.6905 li
44.7833 48.6905 li
cp
44.4043 48.5918 mo
44.1202 48.4932 li
44.4043 48.3956 li
44.4981 48.2979 li
44.5948 48.1006 li
44.878 48.1006 li
45.0694 48.1993 li
44.5948 48.4932 li
44.4043 48.5918 li
cp
43.6446 48.3956 mo
44.1202 48.1006 li
44.3096 48.004 li
44.5948 48.004 li
44.1202 48.3956 li
43.9307 48.4932 li
43.6446 48.3956 li
cp
43.5508 48.7891 mo
43.0762 48.7891 li
43.0762 48.6905 li
42.9805 48.5918 li
42.9805 48.3956 li
43.171 48.4932 li
43.0762 48.5918 li
43.0762 48.6905 li
43.3614 48.5918 li
43.6446 48.5918 li
43.7403 48.6905 li
43.5508 48.7891 li
cp
42.6954 48.004 mo
42.3165 48.004 li
42.4112 47.9053 li
42.0323 47.9053 li
41.6524 47.8067 li
41.7471 47.6104 li
41.9366 47.5127 li
41.9366 47.7081 li
42.2217 47.6104 li
42.6016 47.7081 li
42.5059 47.8067 li
42.4112 47.8067 li
42.4112 47.9053 li
42.7911 47.7081 li
43.171 47.8067 li
43.0762 47.9053 li
42.9805 47.9053 li
42.8868 48.004 li
42.8868 48.1006 li
42.9805 48.1006 li
43.171 48.004 li
43.3614 47.9053 li
43.9307 47.9053 li
43.4551 48.2979 li
43.0762 48.2979 li
42.7911 48.1993 li
42.6954 48.004 li
cp
41.3672 47.7081 mo
41.2735 47.6104 li
41.3672 47.4151 li
41.7471 47.4151 li
41.5577 47.7081 li
41.3672 47.7081 li
cp
41.2735 48.3956 mo
41.1788 48.4932 li
41.0831 48.3956 li
40.9893 48.3956 li
40.7989 48.4932 li
40.5127 48.3956 li
40.2295 48.4932 li
39.0918 48.6905 li
38.8057 48.6905 li
38.5206 48.5918 li
38.4258 48.3956 li
39.1856 48.1993 li
39.4708 48.004 li
39.7549 47.7081 li
39.8497 47.4151 li
39.9454 47.0215 li
40.0401 46.2374 li
40.3243 46.1387 li
40.5127 46.1387 li
40.6084 46.0411 li
40.5127 45.9424 li
40.6084 45.8438 li
40.6084 45.7461 li
40.419 45.8438 li
40.2295 45.9424 li
40.0401 45.8438 li
39.8497 45.8438 li
39.6592 45.6475 li
39.4708 45.6475 li
38.9004 45.5499 li
38.9004 44.1749 li
39.0918 43.4874 li
39.0918 42.8008 li
39.1856 41.4268 li
39.0918 40.7393 li
39.0918 38.6778 li
38.9952 38.4825 li
39.0918 38.4825 li
39.0918 38.3829 li
38.9952 38.3829 li
38.9004 38.2852 li
38.711 38.2852 li
38.6163 38.1876 li
38.711 38.0879 li
38.9004 38.0879 li
39.0918 38.1876 li
39.0918 36.8126 li
39.4708 38.3829 li
39.5655 38.5792 li
39.6592 38.4825 li
39.8497 38.4825 li
39.9454 38.3829 li
40.1338 38.2852 li
40.1338 38.4825 li
39.8497 38.5792 li
39.7549 38.5792 li
39.6592 38.7764 li
39.8497 38.7764 li
40.0401 38.6778 li
40.1338 38.6778 li
40.2295 38.7764 li
39.9454 38.8741 li
39.6592 39.0704 li
39.8497 39.169 li
39.9454 39.169 li
40.3243 39.0704 li
40.2295 39.169 li
40.1338 39.2676 li
39.9454 39.2676 li
39.8497 39.4629 li
39.6592 39.0704 li
39.5655 39.169 li
39.6592 39.3653 li
39.7549 39.4629 li
39.8497 39.6592 li
39.8497 39.8545 li
40.6084 41.0352 li
40.8936 41.0352 li
40.9893 41.1319 li
41.0831 41.0352 li
41.0831 40.9356 li
40.8936 40.9356 li
40.7989 40.837 li
41.7471 40.6397 li
41.7471 40.9356 li
41.3672 40.9356 li
41.1788 41.0352 li
41.0831 41.1319 li
41.0831 41.2305 li
41.1788 41.3272 li
40.7042 41.3272 li
40.5127 41.4268 li
41.1788 41.5254 li
41.9366 41.7208 li
40.419 41.7208 li
40.3243 41.8194 li
40.9893 41.918 li
41.2735 41.918 li
41.6524 42.0157 li
40.9893 42.0157 li
40.7042 42.1124 li
40.5127 42.1124 li
40.5127 42.212 li
41.1788 42.3096 li
41.4629 42.3096 li
41.7471 42.4073 li
41.8428 42.4073 li
41.8428 42.6036 li
41.0831 42.5059 li
40.7042 42.5059 li
40.419 42.6036 li
40.5127 42.7032 li
40.7989 42.7032 li
40.8936 42.8008 li
41.0831 42.7032 li
41.2735 42.8008 li
41.5577 42.8008 li
41.6524 42.8985 li
41.8428 42.8985 li
41.8428 42.9971 li
41.0831 42.8985 li
40.7042 42.8985 li
40.419 43.0948 li
41.1788 43.1934 li
41.4629 43.292 li
41.8428 43.3887 li
41.0831 43.292 li
40.7042 43.292 li
40.3243 43.4874 li
40.3243 43.585 li
40.6084 43.4874 li
40.7989 43.585 li
41.2735 43.6846 li
40.9893 43.7823 li
40.5127 43.7823 li
40.2295 43.8799 li
40.5127 43.9786 li
41.1788 43.9786 li
41.4629 44.0762 li
41.7471 44.0762 li
41.7471 44.1749 li
40.8936 44.0762 li
40.5127 44.1749 li
40.2295 44.3711 li
40.9893 44.4698 li
41.6524 44.5674 li
41.6524 44.7637 li
41.2735 44.5674 li
40.5127 44.5674 li
40.1338 44.7637 li
40.2295 44.7637 li
40.2295 44.8614 li
40.9893 44.8614 li
41.5577 44.96 li
41.6524 45.0567 li
40.9893 44.96 li
40.3243 45.0567 li
40.2295 45.0567 li
40.2295 45.1563 li
40.8936 45.2549 li
41.2256 45.3526 li
41.2735 45.3526 li
41.3077 45.378 li
41.5577 45.4502 li
41.5577 45.5499 li
41.3077 45.378 li
41.2256 45.3526 li
40.8936 45.3526 li
40.2295 45.4502 li
40.2295 45.5499 li
40.9893 45.5499 li
41.5577 45.8438 li
41.5577 45.9424 li
41.4629 46.0411 li
41.1788 45.7461 li
40.8936 45.6475 li
40.7042 45.6475 li
40.6084 45.7461 li
40.7042 45.9424 li
40.8936 46.0411 li
40.8936 46.8252 li
40.9893 47.7081 li
41.0831 47.8067 li
41.1788 48.004 li
41.2735 48.2979 li
41.2735 48.3956 li
cp
38.0469 48.2979 mo
37.2881 47.9053 li
36.4336 47.8067 li
35.4854 47.7081 li
34.5362 47.7081 li
34.4424 47.6104 li
34.3458 47.4151 li
35.4854 47.5127 li
36.6241 47.7081 li
38.6163 48.004 li
38.711 48.004 li
38.4258 47.7081 li
38.0469 47.6104 li
37.1934 47.4151 li
36.2442 47.3155 li
35.3897 47.2188 li
34.3458 47.2188 li
34.1563 47.1202 li
34.0626 47.0215 li
34.0626 46.629 li
33.8721 46.4327 li
34.0626 46.334 li
34.252 46.334 li
34.4424 46.5313 li
34.7266 46.629 li
35.1055 46.5313 li
35.295 46.5313 li
36.1485 45.9424 li
36.4336 45.5499 li
36.5293 45.0567 li
36.7178 44.96 li
36.8126 44.96 li
37.0987 45.0567 li
37.5723 45.0567 li
37.4766 45.3526 li
37.4766 45.6475 li
37.3829 45.9424 li
37.3829 46.9229 li
37.0987 47.0215 li
36.7178 46.9229 li
36.4336 46.8252 li
36.1485 46.8252 li
35.4854 46.9229 li
34.8213 46.9229 li
34.5362 46.8252 li
34.3458 46.629 li
34.252 46.629 li
34.1563 46.7266 li
34.252 46.8252 li
34.5362 47.0215 li
35.2012 47.1202 li
36.5293 47.1202 li
37.0987 47.3155 li
37.9512 47.3155 li
38.711 47.4151 li
38.8057 47.4151 li
38.9952 47.6104 li
39.376 47.6104 li
39.4708 47.7081 li
39.376 47.8067 li
39.1856 47.9053 li
38.9004 48.004 li
38.4258 48.1006 li
38.2374 48.1006 li
38.0469 48.2979 li
cp
38.2374 48.7891 mo
38.0469 48.7891 li
37.8575 48.6905 li
37.5723 48.4932 li
36.8126 48.1993 li
35.961 48.1006 li
35.2012 48.004 li
35.3897 48.004 li
35.5801 47.9053 li
36.2442 48.004 li
36.9092 48.1006 li
38.1416 48.5918 li
38.2374 48.6905 li
38.2374 48.7891 li
cp
31.4053 47.2188 mo
30.836 47.4151 li
30.9307 47.2188 li
31.1211 47.1202 li
31.5 46.9229 li
31.5 46.8252 li
31.5958 46.8252 li
31.7852 46.9229 li
31.8809 47.0215 li
31.4053 47.2188 li
cp
30.5508 47.0215 mo
30.9307 46.8252 li
31.4053 46.629 li
31.4053 46.7266 li
30.9307 46.9229 li
30.7413 47.0215 li
30.5508 47.0215 li
cp
30.0772 46.5313 mo
29.8877 46.334 li
30.1719 46.2374 li
30.4561 46.1387 li
30.4561 46.334 li
30.1719 46.334 li
30.0772 46.4327 li
30.0772 46.5313 li
30.2666 46.5313 li
30.3614 46.7266 li
30.0772 46.5313 li
cp
29.128 45.4502 mo
29.5079 45.4502 li
29.5079 45.5499 li
29.128 45.5499 li
29.128 45.4502 li
cp
29.4122 45.7461 mo
29.792 45.6475 li
29.4122 45.8438 li
29.0333 45.9424 li
29.0333 45.8438 li
29.4122 45.7461 li
cp
29.3174 46.2374 mo
29.0333 46.2374 li
29.0333 46.1387 li
29.6983 46.0411 li
30.3614 45.9424 li
29.6983 46.1387 li
29.3174 46.2374 li
cp
27.5157 6.97071 mo
27.5157 6.77344 li
27.6104 6.38184 li
28.084 5.98926 li
28.6543 5.59766 li
28.5586 5.98926 li
28.2745 6.38184 li
27.8936 6.77344 li
27.5157 7.06934 li
27.5157 6.97071 li
cp
27.0411 4.32032 mo
27.5157 4.71192 li
27.7051 5.00782 li
27.7051 5.4004 li
27.42 5.20411 li
27.2305 4.90918 li
27.0411 4.61426 li
27.0411 4.32032 li
cp
27.5157 4.41895 mo
27.3243 4.41895 li
27.3243 4.32032 li
27.5157 4.41895 li
cp
27.42 3.73145 mo
28.3692 3.73145 li
28.6543 3.92774 li
29.0333 4.12403 li
28.5586 4.22168 li
28.084 4.22168 li
27.6104 4.0254 li
27.2305 3.83008 li
27.42 3.73145 li
cp
29.3174 4.22168 mo
29.5079 4.12403 li
29.4122 4.0254 li
29.3174 3.92774 li
29.9805 4.22168 li
30.3614 4.32032 li
31.0245 4.32032 li
31.4053 4.22168 li
32.0694 4.22168 li
31.5958 4.61426 li
31.1211 4.90918 li
30.1719 5.30079 li
29.8877 5.00782 li
29.6983 4.51661 li
29.4122 4.41895 li
29.2237 4.41895 li
29.0333 4.32032 li
29.3174 4.22168 li
cp
29.6026 3.63477 mo
30.5508 3.63477 li
31.0245 3.83008 li
31.4053 4.0254 li
30.9307 4.12403 li
30.3614 4.0254 li
29.8877 3.92774 li
29.5079 3.73145 li
29.6026 3.63477 li
cp
29.6983 5.10645 mo
29.5079 4.81153 li
29.128 4.61426 li
28.9395 4.51661 li
28.8438 4.32032 li
28.9395 4.32032 li
29.128 4.51661 li
29.2237 4.61426 li
29.4122 4.61426 li
29.6026 4.71192 li
29.6983 5.00782 li
29.8877 5.30079 li
29.6983 5.10645 li
cp
32.3545 4.22168 mo
32.8292 3.83008 li
33.1133 3.73145 li
33.3975 3.63477 li
33.6827 3.43555 li
33.9668 3.43555 li
34.252 3.24024 li
34.5362 3.14161 li
35.1055 3.04395 li
34.9151 3.14161 li
34.5362 3.14161 li
33.4922 3.83008 li
32.9229 4.12403 li
32.3545 4.32032 li
31.6885 4.90918 li
31.4053 5.20411 li
31.0245 5.4004 li
30.5508 5.4004 li
30.1719 5.59766 li
29.8877 5.79297 li
29.6026 6.08692 li
29.4122 6.67676 li
29.2237 7.167 li
28.9395 7.65723 li
28.7481 7.75684 li
28.4639 7.95215 li
28.084 8.542 li
27.8936 8.34571 li
27.8936 8.14942 li
28.084 7.75684 li
28.4639 7.36329 li
28.8438 7.06934 li
29.2237 6.67676 li
29.5079 6.18458 li
29.6983 5.79297 li
29.8877 5.69336 li
30.0772 5.49805 li
31.3116 5.00782 li
32.3545 4.22168 li
cp
32.3545 3.43555 mo
32.544 3.04395 li
32.7334 2.55274 li
32.8292 2.0625 li
32.9229 2.16114 li
33.0186 2.25879 li
33.1133 2.45508 li
33.1133 2.65235 li
32.8292 3.24024 li
32.544 3.53516 li
32.2588 3.92774 li
32.3545 3.43555 li
cp
33.5879 2.25879 mo
33.0186 1.08106 li
33.3028 1.37598 li
33.6827 1.57129 li
33.9668 1.86719 li
34.0626 2.0625 li
34.1563 2.25879 li
34.1563 2.94532 li
33.9668 2.55274 li
33.5879 2.25879 li
cp
35.1055 1.57129 mo
35.3897 1.08106 li
35.6758 0.884766 li
35.8643 0.786133 li
35.4854 1.76856 li
35.2012 2.25879 li
34.8213 2.65235 li
35.1055 1.57129 li
cp
35.7696 3.43555 mo
36.1485 3.53516 li
35.7696 3.63477 li
35.295 3.73145 li
34.8213 3.73145 li
34.3458 3.63477 li
34.7266 3.43555 li
35.7696 3.43555 li
cp
34.3458 5.00782 mo
34.3458 5.98926 li
34.0626 5.59766 li
33.8721 5.10645 li
33.8721 4.61426 li
33.9668 4.0254 li
34.3458 5.00782 li
cp
33.7774 4.32032 mo
33.5879 4.41895 li
33.1133 4.41895 li
32.6387 4.51661 li
31.8809 5.10645 li
32.0694 4.81153 li
32.2588 4.61426 li
32.8292 4.32032 li
33.3975 4.12403 li
33.8721 3.83008 li
33.7774 4.12403 li
33.7774 4.32032 li
cp
33.2081 5.00782 mo
33.0186 5.10645 li
32.6387 5.30079 li
31.9747 5.30079 li
32.2588 5.10645 li
32.6387 4.90918 li
33.3028 4.81153 li
33.2081 5.00782 li
cp
32.7334 5.79297 mo
33.3028 5.98926 li
33.7774 6.38184 li
34.1563 6.77344 li
33.5879 6.67676 li
33.1133 6.38184 li
32.2588 5.69336 li
32.7334 5.79297 li
cp
31.0245 11.3887 mo
31.3116 10.8975 li
31.6885 10.5049 li
31.8809 9.91407 li
31.9747 9.91407 li
31.8809 10.5049 li
31.5958 10.9952 li
31.1211 11.879 li
31.0245 11.879 li
30.9307 11.584 li
31.0245 11.3887 li
cp
33.8721 9.91407 mo
33.3975 9.91407 li
32.8292 9.71973 li
32.3545 9.42383 li
32.0694 9.03223 li
32.544 9.13086 li
33.0186 9.32715 li
33.4922 9.62208 li
33.8721 9.91407 li
cp
34.6309 9.71973 mo
35.2012 9.42383 li
35.7696 9.32715 li
36.2442 9.13086 li
36.1485 9.42383 li
35.961 9.62208 li
35.3897 9.81739 li
34.252 10.1124 li
34.6309 9.71973 li
cp
32.7334 7.26563 mo
33.0186 7.36329 li
33.3028 7.55958 li
33.6827 7.95215 li
34.1563 9.03223 li
33.8721 8.9336 li
33.3028 8.34571 li
32.7334 7.26563 li
cp
31.5 5.79297 mo
31.6885 5.79297 li
31.7852 5.89161 li
31.9747 6.18458 li
32.2588 6.77344 li
32.3545 7.46094 li
31.7852 6.67676 li
31.5958 6.28321 li
31.5 5.79297 li
cp
30.7413 6.28321 mo
30.7413 6.97071 li
30.5508 8.04981 li
30.3614 7.55958 li
30.3614 6.4795 li
30.5508 5.98926 li
30.7413 6.28321 li
cp
30.3614 9.22852 mo
30.7413 8.83594 li
31.2149 8.63965 li
31.1211 9.13086 li
30.836 9.42383 li
30.4561 9.71973 li
30.0772 9.91407 li
29.792 10.0127 li
29.6026 10.0127 li
30.3614 9.22852 li
cp
29.792 9.03223 mo
29.6983 9.42383 li
29.5079 9.91407 li
29.4122 9.91407 li
29.4122 9.03223 li
29.6026 8.14942 li
29.792 8.542 li
29.792 9.03223 li
cp
30.9307 12.0762 mo
30.5508 12.4678 li
30.3614 12.5665 li
30.1719 12.4678 li
30.1719 12.2725 li
30.0772 12.1729 li
29.8877 11.9776 li
29.8877 11.0948 li
29.6983 10.7012 li
29.4122 10.3086 li
29.792 10.21 li
30.2666 10.21 li
30.6475 10.1124 li
30.836 10.0127 li
31.0245 9.91407 li
31.2149 9.71973 li
31.3116 9.42383 li
31.4053 8.9336 li
31.5958 8.44336 li
31.7852 8.2461 li
31.9747 8.14942 li
31.8809 8.04981 li
31.7852 8.04981 li
31.3116 8.34571 li
30.836 8.542 li
30.4561 8.73829 li
30.0772 9.13086 li
29.9805 8.44336 li
29.8877 8.04981 li
29.6983 7.75684 li
29.6026 7.75684 li
29.4122 8.2461 li
29.2237 8.83594 li
29.128 9.32715 li
29.2237 9.91407 li
28.6543 9.13086 li
28.4639 8.73829 li
28.4639 8.2461 li
28.6543 8.04981 li
29.2237 7.65723 li
29.4122 7.36329 li
29.5079 7.167 li
29.792 6.28321 li
29.8877 6.08692 li
29.9805 5.89161 li
30.1719 5.69336 li
30.5508 5.69336 li
30.5508 5.79297 li
30.2666 6.28321 li
30.0772 6.77344 li
30.0772 7.26563 li
30.1719 7.8545 li
30.4561 8.14942 li
30.6475 8.542 li
30.9307 7.8545 li
31.1211 7.167 li
31.1211 6.4795 li
30.9307 6.18458 li
30.7413 5.59766 li
31.4053 5.49805 li
31.3116 5.98926 li
31.4053 6.57911 li
31.5958 7.06934 li
32.544 8.04981 li
32.6387 8.2461 li
32.7334 8.2461 li
32.7334 8.04981 li
32.6387 7.75684 li
32.544 7.55958 li
32.6387 7.26563 li
32.7334 7.55958 li
32.8292 7.75684 li
32.8292 8.04981 li
33.0186 8.2461 li
33.0186 8.542 li
33.2081 8.73829 li
33.5879 9.03223 li
34.4424 9.42383 li
34.252 9.71973 li
34.0626 9.91407 li
33.8721 9.62208 li
33.5879 9.32715 li
32.9229 9.03223 li
32.2588 8.83594 li
31.5958 8.73829 li
31.8809 9.13086 li
31.9747 9.32715 li
31.8809 9.62208 li
31.5 10.21 li
31.0245 10.7999 li
30.836 11.0948 li
30.7413 11.3887 li
30.7413 11.7803 li
30.9307 12.0762 li
cp
37.668 7.65723 mo
37.5723 7.8545 li
37.3829 8.04981 li
36.9092 8.2461 li
36.4336 8.34571 li
35.961 8.44336 li
36.3389 8.04981 li
36.7178 7.8545 li
37.668 7.65723 li
cp
34.4424 6.97071 mo
34.252 7.95215 li
34.3458 8.542 li
34.5362 8.73829 li
34.6309 8.9336 li
35.1055 8.34571 li
35.3897 7.65723 li
35.4854 7.26563 li
35.4854 6.4795 li
35.295 6.18458 li
35.295 6.08692 li
36.1485 6.97071 li
36.5293 7.26563 li
37.668 7.46094 li
37.2881 7.46094 li
36.9092 7.55958 li
36.5293 7.65723 li
36.2442 7.8545 li
35.5801 8.34571 li
35.0118 8.83594 li
35.1055 9.03223 li
35.3897 8.83594 li
35.7696 8.63965 li
36.5293 8.63965 li
36.9092 8.542 li
37.1934 8.44336 li
37.5723 8.2461 li
37.7618 7.95215 li
37.8575 7.75684 li
38.0469 7.55958 li
38.1416 6.97071 li
38.4258 7.167 li
38.8057 7.26563 li
38.711 7.46094 li
38.5206 7.55958 li
37.9512 8.34571 li
37.8575 8.83594 li
37.0987 8.9336 li
36.5293 9.22852 li
36.3389 9.42383 li
35.961 10.3086 li
34.3458 10.6026 li
32.8292 10.8975 li
32.2588 11.0948 li
31.7852 11.4874 li
31.7852 11.3887 li
31.8809 11.2901 li
31.9747 11.0948 li
32.0694 10.7012 li
32.0694 10.21 li
31.9747 9.42383 li
32.4483 9.81739 li
32.9229 10.1124 li
33.4922 10.21 li
33.9668 10.21 li
33.9668 10.3086 li
34.0626 10.4073 li
34.252 10.3086 li
34.7266 10.3086 li
35.295 10.21 li
35.6758 10.0127 li
36.1485 9.71973 li
36.4336 9.22852 li
36.8126 8.73829 li
36.5293 8.83594 li
35.3897 9.13086 li
35.0118 9.22852 li
34.6309 9.42383 li
34.3458 8.9336 li
33.9668 7.95215 li
33.6827 7.55958 li
33.4922 7.26563 li
32.9229 7.06934 li
32.544 7.167 li
32.544 6.67676 li
32.2588 6.18458 li
31.7852 5.49805 li
32.0694 5.79297 li
32.4483 6.08692 li
33.0186 6.77344 li
33.3975 6.87305 li
33.6827 6.97071 li
34.0626 7.06934 li
34.4424 6.97071 li
cp
34.6309 7.95215 mo
34.6309 7.36329 li
34.8213 6.77344 li
35.0118 6.28321 li
35.0118 6.18458 li
35.1055 6.08692 li
35.2012 6.38184 li
35.2012 6.67676 li
35.1055 7.36329 li
34.9151 7.95215 li
34.6309 8.542 li
34.6309 7.95215 li
cp
36.1485 6.28321 mo
36.7178 6.4795 li
37.1934 6.77344 li
37.668 7.167 li
37.5723 7.26563 li
37.003 7.06934 li
36.6241 6.97071 li
36.4336 6.77344 li
36.1485 6.67676 li
35.961 6.4795 li
35.5801 6.18458 li
36.1485 6.28321 li
cp
37.5723 5.98926 mo
37.7618 6.18458 li
37.8575 6.38184 li
37.9512 6.87305 li
37.9512 7.06934 li
37.7618 7.26563 li
37.668 6.87305 li
37.5723 5.98926 li
cp
37.1934 5.20411 mo
36.9092 4.81153 li
36.5293 4.51661 li
36.9092 4.51661 li
37.3829 4.81153 li
38.1416 5.49805 li
38.1416 5.59766 li
37.8575 5.59766 li
37.5723 5.49805 li
37.1934 5.20411 li
cp
38.5206 6.67676 mo
38.711 6.57911 li
39.0918 6.4795 li
39.4708 6.57911 li
39.7549 6.77344 li
39.8497 6.77344 li
39.9454 6.87305 li
39.5655 6.97071 li
39.1856 6.97071 li
38.3311 6.77344 li
38.5206 6.67676 li
cp
38.711 8.2461 mo
38.4258 8.542 li
38.1416 8.73829 li
38.1416 8.34571 li
38.3311 8.04981 li
38.8057 7.46094 li
38.9004 7.8545 li
38.711 8.2461 li
cp
39.1856 8.73829 mo
39.9454 8.73829 li
39.7549 8.9336 li
39.376 9.13086 li
38.711 9.13086 li
38.5206 9.03223 li
38.4258 9.03223 li
38.4258 8.9336 li
39.1856 8.73829 li
cp
37.0987 9.62208 mo
36.3389 10.0127 li
36.3389 9.81739 li
36.5293 9.62208 li
36.8126 9.32715 li
36.8126 9.42383 li
36.9092 9.42383 li
36.9092 9.22852 li
37.0987 9.13086 li
37.4766 9.03223 li
37.7618 9.03223 li
37.0987 9.62208 li
cp
37.5723 10.3086 mo
38.2374 10.21 li
38.9004 10.0127 li
39.5655 9.71973 li
39.5655 9.81739 li
39.9454 9.81739 li
39.6592 9.91407 li
39.4708 10.1124 li
39.2803 10.1124 li
38.9952 10.21 li
39.0918 10.3086 li
39.2803 10.3086 li
39.0918 10.4073 li
38.8057 10.5049 li
38.5206 10.4073 li
38.3311 10.4073 li
38.3311 10.5049 li
38.4258 10.5049 li
38.5206 10.6026 li
38.3311 10.7012 li
38.1416 10.7012 li
37.8575 10.6026 li
37.668 10.6026 li
37.8575 10.7999 li
37.3829 10.7999 li
37.1934 10.7012 li
37.003 10.6026 li
37.0987 10.7999 li
37.003 10.8975 li
36.9092 10.8975 li
36.6241 10.7999 li
36.4336 10.7012 li
36.2442 10.7012 li
36.1485 10.7999 li
36.3389 10.8975 li
36.5293 10.9952 li
35.7696 10.9952 li
35.7696 11.0948 li
35.8643 11.0948 li
35.961 11.1915 li
35.8643 11.2901 li
35.7696 11.2901 li
35.4854 11.1915 li
35.3897 11.0948 li
35.2012 11.1915 li
35.295 11.2901 li
35.3897 11.2901 li
35.3897 11.3887 li
35.4854 11.4874 li
35.295 11.4874 li
35.0118 11.3887 li
34.8213 11.2901 li
34.6309 11.2901 li
35.0118 11.4874 li
34.7266 11.4874 li
34.3458 11.2901 li
34.1563 11.2901 li
34.252 11.4874 li
34.4424 11.584 li
34.3458 11.6827 li
34.1563 11.584 li
33.8721 11.3887 li
33.6827 11.2901 li
33.3975 11.2901 li
33.6827 11.4874 li
33.9668 11.7803 li
33.5879 11.6827 li
33.3028 11.584 li
32.7334 11.1915 li
33.7774 10.9952 li
34.8213 10.7999 li
35.8643 10.6026 li
36.8126 10.3086 li
37.5723 10.3086 li
cp
40.2295 9.22852 mo
40.7042 9.03223 li
41.8428 8.83594 li
43.0762 8.73829 li
43.6446 8.63965 li
44.3096 8.44336 li
46.2071 7.46094 li
46.8711 6.87305 li
47.251 6.57911 li
47.5362 6.18458 li
47.3448 6.67676 li
47.0606 7.06934 li
46.6807 7.36329 li
46.2071 7.55958 li
45.3526 7.95215 li
44.878 8.2461 li
44.4981 8.542 li
44.0235 8.73829 li
43.4551 8.83594 li
42.4112 8.9336 li
41.3672 9.13086 li
40.8936 9.22852 li
40.3243 9.52247 li
40.0401 9.52247 li
40.0401 9.71973 li
39.6592 9.62208 li
40.2295 9.22852 li
cp
46.7764 5.69336 mo
47.0606 5.20411 li
47.1553 4.61426 li
47.3448 5.00782 li
47.3448 5.30079 li
47.1553 5.69336 li
47.0606 6.08692 li
46.586 6.77344 li
46.4913 6.77344 li
46.586 6.18458 li
46.7764 5.69336 li
cp
46.7764 3.92774 mo
46.3018 3.83008 li
46.0176 3.53516 li
46.0176 3.43555 li
46.8711 3.63477 li
47.251 3.83008 li
47.5362 4.12403 li
46.7764 3.92774 li
cp
46.6807 2.74903 mo
46.3018 2.16114 li
46.0176 1.66895 li
46.4913 2.0625 li
46.9649 2.55274 li
47.251 2.74903 li
47.4395 2.94532 li
47.5362 3.24024 li
47.5362 3.63477 li
47.4395 3.63477 li
46.6807 2.74903 li
cp
47.9151 6.18458 mo
47.8194 6.28321 li
47.9151 6.08692 li
47.9151 6.18458 li
cp
48.6749 5.4004 mo
49.0538 4.81153 li
49.0538 5.20411 li
48.8643 5.59766 li
48.5782 5.89161 li
48.1993 6.08692 li
48.6749 5.4004 li
cp
48.5782 4.51661 mo
49.0538 3.63477 li
49.8126 3.73145 li
50.667 3.83008 li
50.0967 4.0254 li
49.4336 4.22168 li
49.2432 4.12403 li
48.1993 5.49805 li
48.5782 4.51661 li
cp
48.8643 2.74903 mo
48.7686 2.25879 li
48.7686 1.76856 li
48.8643 1.17969 li
49.0538 1.37598 li
49.1475 1.66895 li
49.2432 2.16114 li
49.2432 2.74903 li
49.1475 3.24024 li
48.8643 2.74903 li
cp
49.8126 3.04395 mo
50.3819 2.84864 li
51.046 2.74903 li
51.6153 2.94532 li
52.0889 2.74903 li
51.9942 2.94532 li
51.8047 3.14161 li
51.4249 3.33887 li
50.9512 3.43555 li
49.3379 3.43555 li
49.8126 3.04395 li
cp
50.667 4.12403 mo
50.4766 4.32032 li
50.3819 4.32032 li
50.2862 4.41895 li
50.2862 4.51661 li
49.4336 4.32032 li
50.0967 4.22168 li
50.8555 3.92774 li
50.667 4.12403 li
cp
49.3379 5.89161 mo
49.8126 5.69336 li
50.2862 5.59766 li
50.1934 5.89161 li
50.001 6.08692 li
49.5264 6.28321 li
48.959 6.38184 li
48.4854 6.38184 li
49.3379 5.89161 li
cp
50.1934 6.4795 mo
50.1934 7.75684 li
50.3819 8.44336 li
50.1934 8.73829 li
49.9073 8.83594 li
49.2432 9.13086 li
49.6231 8.542 li
49.8126 7.95215 li
49.9073 7.36329 li
49.9073 6.97071 li
49.8126 6.67676 li
49.9073 6.38184 li
50.4766 5.79297 li
50.1934 6.4795 li
cp
50.7608 6.57911 mo
50.7608 7.167 li
50.667 7.65723 li
50.5723 8.2461 li
50.4766 7.65723 li
50.4766 6.57911 li
50.667 5.98926 li
50.7608 6.57911 li
cp
50.9512 9.13086 mo
52.0889 9.13086 li
51.5206 9.32715 li
50.9512 9.42383 li
50.3819 9.42383 li
49.8126 9.32715 li
50.9512 9.13086 li
cp
48.959 9.03223 mo
49.1475 8.04981 li
49.3379 7.46094 li
49.7178 7.06934 li
49.7178 7.65723 li
49.5264 8.14942 li
48.959 9.03223 li
cp
46.0176 8.9336 mo
45.9219 8.63965 li
46.1124 8.73829 li
46.2071 8.9336 li
46.3018 9.22852 li
46.3018 9.52247 li
46.1124 9.91407 li
46.1124 9.32715 li
46.0176 8.9336 li
cp
46.9649 9.52247 mo
47.1553 8.542 li
47.5362 7.55958 li
47.5362 8.04981 li
47.4395 8.542 li
47.251 9.13086 li
46.9649 9.52247 li
cp
45.0694 13.7442 mo
45.4483 13.8428 li
45.8272 14.0391 li
46.4913 14.628 li
46.0176 14.5293 li
45.6377 14.334 li
45.0694 13.7442 li
cp
48.6749 9.22852 mo
48.1993 9.62208 li
47.8194 9.91407 li
47.9151 10.0127 li
48.1045 10.0127 li
48.7686 10.4073 li
49.4336 10.6026 li
50.0967 10.6026 li
50.4766 10.5049 li
50.7608 10.3086 li
51.046 10.3086 li
50.5723 10.7999 li
50.001 11.1915 li
49.7178 11.4874 li
49.5264 12.0762 li
49.6231 12.4678 li
49.6231 12.5665 li
49.1475 12.7627 li
48.6749 13.0577 li
48.8643 12.3702 li
48.8643 11.6827 li
48.7686 11.584 li
48.0108 12.3702 li
47.8194 12.8614 li
47.7256 13.1553 li
47.8194 13.4493 li
47.8194 13.5479 li
47.9151 13.7442 li
47.9151 13.8428 li
47.8194 14.0391 li
47.7256 13.6456 li
47.5362 13.253 li
47.0606 12.4678 li
46.7764 14.2354 li
46.8711 14.5293 li
47.0606 14.7256 li
46.7764 14.9219 li
46.3965 14.9219 li
45.7325 14.8243 li
44.9737 14.7256 li
44.3096 14.628 li
44.4043 14.1377 li
44.6885 13.6456 li
45.0694 14.2354 li
45.6377 14.628 li
46.1124 14.7256 li
46.3965 14.8243 li
46.6807 14.7256 li
46.3018 14.334 li
46.0176 13.9395 li
45.7325 13.6456 li
45.2579 13.4493 li
45.9219 13.0577 li
46.3965 12.5665 li
46.6807 11.879 li
46.8711 11.0948 li
46.4913 11.2901 li
46.2071 11.584 li
45.3526 12.1729 li
46.7764 10.1124 li
47.3448 9.52247 li
47.6299 8.9336 li
47.7256 8.2461 li
47.8194 7.65723 li
47.7256 6.97071 li
47.251 7.65723 li
46.7764 8.44336 li
46.6807 8.83594 li
46.6807 9.22852 li
46.586 10.1124 li
45.7325 11.1915 li
46.1124 10.7012 li
46.3018 10.1124 li
46.4913 9.62208 li
46.4913 9.03223 li
46.3018 8.73829 li
46.1124 8.542 li
45.7325 8.2461 li
45.6377 8.2461 li
45.9219 9.32715 li
45.3526 9.13086 li
45.1641 9.03223 li
44.3096 9.03223 li
46.2071 7.8545 li
46.6807 7.65723 li
47.1553 7.36329 li
47.5362 6.87305 li
47.8194 6.38184 li
48.7686 6.67676 li
49.2432 6.67676 li
49.7178 6.4795 li
49.5264 6.97071 li
48.959 7.75684 li
48.7686 8.2461 li
48.6749 9.22852 li
cp
48.7686 9.81739 mo
49.1475 9.81739 li
49.9073 10.0127 li
50.4766 10.21 li
50.2862 10.3086 li
49.4336 10.3086 li
48.959 10.1124 li
48.4854 9.91407 li
48.7686 9.81739 li
cp
50.8555 11.0948 mo
50.5723 11.584 li
50.1934 12.0762 li
49.8126 12.3702 li
49.8126 12.1729 li
49.9073 11.879 li
50.1934 11.3887 li
51.046 10.6026 li
50.8555 11.0948 li
cp
51.1407 11.879 mo
52.754 11.879 li
52.2793 12.0762 li
51.709 12.1729 li
51.2354 12.2725 li
50.667 12.1729 li
50.8555 11.9776 li
51.1407 11.879 li
cp
50.4766 12.7627 mo
51.046 12.9581 li
51.5206 13.253 li
52.0889 13.3516 li
51.5206 13.4493 li
50.8555 13.3516 li
50.3819 13.0577 li
49.8126 12.7627 li
50.1934 12.6651 li
50.4766 12.7627 li
cp
48.3897 13.1553 mo
48.1045 13.4493 li
48.1045 13.0577 li
48.1993 12.6651 li
48.3897 12.2725 li
48.6749 11.9776 li
48.5782 12.7627 li
48.3897 13.1553 li
cp
48.5782 13.8428 mo
49.0538 13.7442 li
49.4336 13.7442 li
50.1934 13.9395 li
50.5723 13.9395 li
50.001 14.1377 li
49.4336 14.2354 li
48.8643 14.1377 li
48.1993 14.0391 li
48.3897 13.9395 li
48.5782 13.8428 li
cp
47.0606 13.5479 mo
47.1553 12.8614 li
47.3448 13.253 li
47.4395 13.7442 li
47.4395 14.628 li
47.251 14.4307 li
47.1553 14.1377 li
47.0606 13.5479 li
cp
47.9151 15.0206 mo
48.293 15.0206 li
48.6749 15.1182 li
47.1553 15.1182 li
46.586 15.3145 li
45.9219 15.3145 li
45.3526 15.1182 li
44.5948 15.2178 li
43.9307 15.3145 li
43.2657 15.5108 li
42.6016 15.7081 li
42.6016 15.8057 li
42.127 15.8057 li
42.127 16.002 li
41.9366 16.1006 li
41.3672 16.1006 li
41.4629 16.2959 li
41.2735 16.3936 li
41.0831 16.3936 li
40.8936 16.2959 li
40.7042 16.3936 li
40.7989 16.4922 li
40.9893 16.4922 li
40.6084 16.6885 li
40.419 16.5918 li
40.2295 16.4922 li
40.1338 16.4922 li
40.3243 16.6885 li
40.1338 16.7872 li
39.9454 16.6885 li
39.7549 16.6885 li
39.5655 16.5918 li
39.6592 16.7872 li
39.4708 16.7872 li
39.2803 16.6885 li
39.1856 16.6885 li
38.9952 16.7872 li
38.9004 16.7872 li
38.711 16.6885 li
38.6163 16.5918 li
38.5206 16.6885 li
38.6163 16.7872 li
38.4258 16.7872 li
38.1416 16.4922 li
37.9512 16.4922 li
38.1416 16.7872 li
37.9512 16.7872 li
37.7618 16.5918 li
37.5723 16.5918 li
37.668 16.7872 li
37.4766 16.7872 li
37.3829 16.6885 li
37.1934 16.4922 li
37.0987 16.4922 li
37.1934 16.7872 li
37.003 16.7872 li
36.8126 16.6885 li
36.7178 16.5918 li
36.5293 16.5918 li
36.5293 16.6885 li
36.7178 16.7872 li
36.5293 16.8858 li
36.1485 16.6885 li
35.961 16.5918 li
36.1485 16.9834 li
35.8643 16.9834 li
35.7696 16.8858 li
35.5801 16.7872 li
35.4854 16.6885 li
35.3897 16.6885 li
35.3897 16.7872 li
35.4854 16.8858 li
35.6758 17.0821 li
35.295 17.1807 li
34.9151 17.2774 li
34.6309 16.9834 li
34.5362 17.0821 li
34.8213 17.376 li
34.7266 17.4747 li
34.6309 17.4747 li
34.5362 17.376 li
34.3458 17.2774 li
34.1563 17.1807 li
34.1563 17.2774 li
34.252 17.376 li
34.3458 17.5733 li
34.3458 17.6709 li
34.252 17.6709 li
34.0626 17.5733 li
33.9668 17.4747 li
33.7774 17.376 li
33.8721 17.6709 li
34.0626 17.8672 li
33.9668 17.9649 li
33.7774 17.8672 li
33.5879 17.6709 li
33.4922 17.6709 li
33.5879 17.9649 li
33.7774 18.0626 li
33.4922 18.0626 li
33.1133 17.7686 li
33.1133 17.9649 li
33.2081 18.1612 li
33.3975 18.2598 li
33.3975 18.3584 li
33.2081 18.2598 li
33.0186 18.1612 li
32.7334 17.8672 li
33.3028 17.4747 li
33.8721 16.9834 li
33.9668 16.7872 li
34.252 16.6885 li
34.5362 16.3936 li
36.0547 16.1006 li
36.1485 15.7081 li
36.1485 15.5108 li
35.961 15.3145 li
35.961 15.2178 li
36.1485 15.3145 li
36.5293 14.8243 li
36.8126 14.334 li
36.8126 14.7256 li
36.5293 15.1182 li
36.3389 15.5108 li
36.2442 15.9034 li
36.4336 16.002 li
37.3829 16.1006 li
39.4708 16.2959 li
39.9454 16.1983 li
40.5127 16.1006 li
42.0323 15.5108 li
42.8868 15.2178 li
43.2657 15.1182 li
44.2139 14.9219 li
44.5948 14.9219 li
45.4483 15.0206 li
46.2071 15.2178 li
46.6807 15.2178 li
47.0606 15.0206 li
47.9151 15.0206 li
cp
49.5264 15.4131 mo
48.6749 15.2178 li
49.5264 15.3145 li
49.5264 15.4131 li
cp
49.8126 16.5918 mo
49.9073 16.9834 li
49.8126 17.376 li
49.6231 17.6709 li
49.6231 17.2774 li
49.5264 16.5918 li
49.5264 16.1983 li
49.6231 15.9034 li
49.8126 16.5918 li
cp
50.001 16.1006 mo
50.1934 16.2959 li
50.4766 16.8858 li
50.3819 16.9834 li
50.3819 17.0821 li
50.2862 17.4747 li
50.0967 17.8672 li
49.8126 18.2598 li
49.6231 18.5538 li
49.4336 18.9473 li
48.959 18.4551 li
48.3897 17.9649 li
48.293 17.9649 li
48.1045 17.8672 li
48.0108 17.7686 li
47.9151 17.8672 li
47.8194 17.6709 li
47.7256 17.5733 li
47.6299 17.5733 li
47.3448 16.8858 li
47.0606 16.5918 li
46.7764 16.3936 li
46.9649 16.3936 li
47.0606 16.4922 li
47.0606 16.5918 li
48.0108 17.4747 li
48.0108 17.5733 li
48.293 17.7686 li
48.5782 17.8672 li
49.2432 17.8672 li
49.2432 17.6709 li
49.0538 17.4747 li
49.0538 17.376 li
48.5782 16.7872 li
48.1993 16.5918 li
47.9151 16.5918 li
47.9151 16.4922 li
48.0108 16.4922 li
48.1993 16.5918 li
48.293 16.4922 li
48.1993 16.3936 li
48.0108 16.2959 li
47.6299 15.8057 li
47.4395 15.7081 li
47.1553 15.6104 li
46.8711 15.6104 li
46.586 15.8057 li
46.2071 15.8057 li
46.0176 15.7081 li
46.3965 15.7081 li
46.6807 15.6104 li
47.3448 15.4131 li
48.0108 15.3145 li
48.293 15.3145 li
48.6749 15.4131 li
49.5264 15.7081 li
49.4336 15.8057 li
49.4336 15.9034 li
49.3379 16.002 li
49.3379 16.1006 li
49.2432 16.5918 li
49.2432 17.0821 li
49.4336 18.0626 li
49.5264 18.1612 li
50.001 17.5733 li
50.0967 17.2774 li
50.0967 16.8858 li
50.001 16.3936 li
49.7178 15.9034 li
50.001 16.1006 li
cp
50.3819 17.9649 mo
50.2862 18.4551 li
50.001 18.751 li
49.7178 19.1436 li
49.6231 19.045 li
50.001 18.2598 li
50.2862 17.9649 li
50.3819 17.5733 li
50.3819 17.9649 li
cp
49.1475 19.6329 mo
48.5782 19.045 li
48.293 18.4551 li
48.0108 17.9649 li
48.4854 18.2598 li
48.8643 18.6514 li
49.2432 19.2413 li
49.4336 19.7325 li
49.1475 19.6329 li
cp
48.1993 16.8858 mo
48.5782 17.1807 li
48.8643 17.5733 li
48.3897 17.4747 li
48.0108 17.2774 li
47.3448 16.6885 li
47.7256 16.6885 li
48.1993 16.8858 li
cp
47.3448 16.2959 mo
46.9649 16.1983 li
46.4913 16.002 li
46.9649 15.8057 li
47.251 15.9034 li
47.4395 16.002 li
47.7256 16.2959 li
47.3448 16.2959 li
cp
43.0762 16.5918 mo
43.0762 16.3936 li
43.171 16.002 li
43.2657 16.002 li
43.2657 16.5918 li
43.171 16.6885 li
43.0762 16.5918 li
cp
44.1202 17.0821 mo
43.7403 17.4747 li
43.171 17.7686 li
42.127 18.0626 li
42.127 17.9649 li
42.9805 17.2774 li
44.1202 17.0821 li
cp
42.9805 18.4551 mo
43.6446 18.5538 li
45.0694 19.1436 li
44.3096 19.3399 li
43.5508 19.1436 li
42.8868 18.9473 li
42.2217 18.5538 li
42.6016 18.4551 li
42.9805 18.4551 li
cp
42.127 20.6163 mo
42.0323 19.8311 li
42.0323 19.045 li
42.2217 19.4376 li
42.3165 20.0264 li
42.127 20.6163 li
cp
41.6524 18.2598 mo
41.0831 17.8672 li
41.6524 17.7686 li
42.127 17.4747 li
42.8868 16.6885 li
42.9805 16.7872 li
43.0762 16.9834 li
42.6954 17.1807 li
42.3165 17.4747 li
42.0323 17.7686 li
41.8428 18.2598 li
41.9366 18.3584 li
42.127 18.2598 li
42.0323 18.3584 li
41.9366 18.3584 li
41.6524 18.2598 li
cp
42.3165 16.8858 mo
42.2217 16.9834 li
42.0323 17.1807 li
41.5577 17.4747 li
41.1788 17.5733 li
41.3672 17.2774 li
41.9366 16.8858 li
42.3165 16.8858 li
cp
40.8936 17.6709 mo
40.6084 17.376 li
40.419 17.0821 li
41.0831 16.8858 li
41.6524 16.5918 li
42.8868 16.002 li
42.8868 16.3936 li
42.7911 16.5918 li
42.6016 16.6885 li
42.127 16.6885 li
41.6524 16.7872 li
41.2735 16.9834 li
40.9893 17.376 li
40.8936 17.6709 li
cp
35.7696 18.3584 mo
35.8643 18.751 li
35.8643 19.9278 li
35.6758 19.6329 li
35.5801 19.1436 li
35.5801 18.751 li
35.7696 18.3584 li
cp
34.8213 18.751 mo
35.1055 17.8672 li
35.3897 17.6709 li
35.2012 18.2598 li
35.0118 18.5538 li
34.8213 18.751 li
cp
34.0626 18.4551 mo
34.1563 18.2598 li
34.252 18.1612 li
34.252 18.4551 li
34.1563 18.751 li
34.0626 18.4551 li
cp
32.3545 29.9415 mo
32.4483 29.5489 li
32.4483 29.3526 li
32.544 29.254 li
32.7334 29.254 li
32.9229 29.6465 li
32.8292 29.7442 li
32.544 29.9415 li
32.4483 30.0391 li
32.3545 29.9415 li
cp
29.3174 37.1065 mo
29.3174 35.8301 li
29.5079 35.2422 li
29.6983 35.2422 li
29.792 35.045 li
29.8877 34.9483 li
29.9805 35.045 li
30.0772 35.1426 li
29.8877 35.3399 li
29.5079 35.3399 li
29.6026 35.6338 li
29.792 36.0274 li
29.8877 36.3223 li
29.8877 36.7139 li
29.792 37.0098 li
29.6026 37.3047 li
29.2237 37.795 li
29.3174 37.1065 li
cp
28.084 36.6153 mo
28.6543 36.8126 li
28.9395 36.8126 li
28.7481 36.9092 li
28.4639 36.9092 li
27.8936 36.8126 li
27.9893 36.7139 li
28.084 36.6153 li
cp
28.6543 35.2422 mo
28.2745 35.1426 li
28.3692 35.045 li
28.5586 35.045 li
28.6543 35.1426 li
28.6543 35.2422 li
cp
28.8438 35.4385 mo
28.6543 35.4385 li
28.3692 35.5372 li
28.2745 35.3399 li
28.5586 35.3399 li
28.8438 35.4385 li
cp
28.7481 33.4737 mo
28.7481 33.5733 li
28.6543 33.4737 li
28.7481 33.4737 li
cp
27.9893 22.9717 mo
27.6104 22.9717 li
27.5157 22.7754 li
27.3243 22.7754 li
27.42 22.4805 li
27.7051 22.7754 li
27.8936 22.7754 li
27.9893 22.9717 li
cp
29.0333 24.5411 mo
29.0333 24.1485 li
29.3174 24.9346 li
29.4122 25.4258 li
29.4122 25.8184 li
29.2237 25.8184 li
29.0333 25.0342 li
29.0333 24.5411 li
cp
28.8438 24.5411 mo
28.6543 24.6407 li
28.3692 24.6407 li
28.3692 24.5411 li
28.8438 24.5411 li
cp
28.4639 23.8555 mo
28.4639 23.7569 li
28.6543 23.7569 li
28.7481 23.8555 li
28.5586 23.9532 li
28.4639 23.8555 li
cp
28.8438 24.1485 mo
28.6543 24.2471 li
28.4639 24.2471 li
28.4639 24.1485 li
28.8438 24.1485 li
cp
27.9893 24.7374 mo
28.084 24.1485 li
28.1797 24.1485 li
28.2745 24.3458 li
28.1797 24.4434 li
28.1797 24.5411 li
28.084 24.7374 li
27.9893 24.7374 li
cp
30.4561 30.0391 mo
30.5508 30.0391 li
30.6475 29.9415 li
30.7413 30.1377 li
30.7413 30.335 li
30.6475 30.335 li
30.4561 30.1377 li
30.4561 30.0391 li
cp
30.2666 29.7442 mo
30.2666 29.6465 li
30.3614 29.7442 li
30.6475 29.4502 li
30.6475 29.6465 li
30.5508 29.7442 li
30.2666 29.7442 li
cp
29.9805 28.3702 mo
30.2666 28.3702 li
30.3379 28.4444 li
30.4561 28.4688 li
30.3614 28.4688 li
30.3379 28.4444 li
29.9805 28.3702 li
cp
30.0772 28.6641 mo
30.1719 28.6641 li
30.2666 28.7637 li
30.1719 29.0586 li
29.9805 28.8624 li
29.9805 28.7637 li
30.0772 28.6641 li
cp
29.128 30.0391 mo
28.9395 30.0391 li
29.128 29.9415 li
29.3174 29.9415 li
29.2237 30.0391 li
29.128 30.0391 li
cp
28.4639 35.8301 mo
28.4639 35.7325 li
28.9395 35.7325 li
28.7481 35.8301 li
28.4639 35.8301 li
cp
28.9395 36.42 mo
28.7481 36.5176 li
28.1797 36.5176 li
28.1797 36.3223 li
28.9395 36.42 li
cp
28.6543 36.125 mo
28.3692 36.2237 li
28.4639 36.0274 li
29.0333 36.0274 li
29.0333 36.125 li
28.6543 36.125 li
cp
30.4561 35.5372 mo
30.3614 35.6338 li
30.1719 35.7325 li
30.0772 35.8301 li
29.9805 35.7325 li
29.8877 35.5372 li
29.9805 35.5372 li
30.0772 35.3399 li
30.1719 35.2422 li
30.3614 35.2422 li
30.5508 35.4385 li
30.4561 35.5372 li
cp
30.7413 35.8301 mo
30.4561 36.0274 li
30.1719 36.125 li
30.0772 36.125 li
30.0772 36.0274 li
30.4561 35.9288 li
30.5508 35.8301 li
30.7413 35.8301 li
cp
30.7413 35.6338 mo
30.6475 35.5372 li
30.7413 35.5372 li
30.7413 35.6338 li
cp
31.0245 37.0098 mo
30.9307 37.0098 li
30.836 37.1065 li
30.6475 37.1065 li
30.4561 37.0098 li
30.1719 36.9092 li
30.2666 36.8126 li
30.3614 36.8126 li
30.5508 36.9092 li
30.9307 36.8126 li
31.0245 37.0098 li
cp
30.9307 36.42 mo
30.6475 36.5176 li
30.2666 36.6153 li
30.1719 36.42 li
30.5508 36.3223 li
30.6475 36.2237 li
30.836 36.125 li
30.9307 36.2237 li
30.9307 36.42 li
cp
29.792 37.5977 mo
29.8877 37.4991 li
29.8877 37.4014 li
30.0772 37.5977 li
30.2666 37.6963 li
30.3614 37.795 li
30.4561 37.8916 li
30.0772 37.8916 li
29.792 37.5977 li
cp
29.6983 38.3829 mo
29.6983 38.4825 li
29.4122 38.2852 li
29.2237 38.1876 li
29.2237 37.9903 li
29.3174 37.9903 li
29.4122 38.1876 li
29.6026 38.2852 li
29.6983 38.3829 li
cp
29.4122 37.8916 mo
29.5079 37.795 li
29.9805 38.1876 li
29.6983 38.0879 li
29.4122 37.8916 li
cp
30.5508 37.3047 mo
30.9307 37.3047 li
30.836 37.4014 li
30.7413 37.5977 li
30.3614 37.4014 li
29.9805 37.3047 li
30.0772 37.2051 li
30.1719 37.2051 li
30.5508 37.3047 li
cp
31.1211 37.795 mo
31.3116 37.795 li
31.5 37.8916 li
31.6885 38.2852 li
31.7852 38.6778 li
31.7852 38.8741 li
31.6885 39.0704 li
31.5958 38.3829 li
31.5 38.2852 li
31.3116 38.3829 li
31.1211 38.3829 li
31.1211 37.795 li
cp
30.7413 32.7872 mo
30.4561 32.8858 li
30.1719 32.9834 li
29.8877 33.2793 li
30.3614 33.8672 li
30.7413 34.4561 li
30.6475 34.1612 li
30.4561 33.8672 li
29.9805 33.2793 li
30.1719 33.0831 li
30.3614 32.9834 li
30.5508 32.9834 li
30.7413 33.0831 li
30.9307 33.1807 li
31.1211 33.1807 li
31.3116 33.2793 li
31.4053 33.377 li
31.3116 33.5733 li
31.2149 33.5733 li
31.1211 33.4737 li
30.9307 33.377 li
30.836 33.377 li
30.9307 33.8672 li
30.7413 33.6719 li
30.5508 33.6719 li
30.5508 33.8672 li
30.6475 34.0645 li
31.0245 34.1612 li
31.2149 34.2598 li
31.3116 34.3575 li
31.3116 34.5547 li
31.2149 34.751 li
31.5 34.751 li
31.5958 34.6534 li
31.5958 34.4561 li
31.5 34.3575 li
31.5 34.2598 li
31.4053 34.1612 li
31.0245 34.0645 li
31.1211 33.8672 li
31.1211 33.7686 li
31.5 33.7686 li
31.5958 33.4737 li
31.5958 33.2793 li
31.5 33.1807 li
31.6885 33.0831 li
31.7852 32.9834 li
32.0694 33.377 li
32.2588 33.4737 li
32.4483 33.4737 li
32.544 33.377 li
32.544 33.2793 li
32.6387 33.1807 li
32.7334 33.1807 li
32.8292 33.2793 li
32.8292 33.4737 li
32.7334 33.6719 li
32.7334 33.9659 li
33.0186 33.9659 li
32.9229 34.1612 li
32.7334 34.2598 li
32.6387 34.3575 li
32.6387 34.5547 li
32.7334 34.6534 li
32.7334 34.8497 li
32.6387 34.9483 li
32.4483 35.3399 li
32.544 35.5372 li
32.4483 35.7325 li
32.2588 35.7325 li
31.9747 35.5372 li
31.6885 35.5372 li
31.6885 35.2422 li
31.5958 34.9483 li
31.4053 34.8497 li
31.2149 34.8497 li
31.4053 35.1426 li
31.4053 35.5372 li
31.2149 35.6338 li
31.0245 35.7325 li
31.0245 35.5372 li
30.836 35.3399 li
30.7413 35.3399 li
30.6475 35.2422 li
30.6475 35.045 li
30.5508 34.8497 li
30.4561 34.9483 li
30.2666 35.045 li
30.1719 34.751 li
30.1719 34.5547 li
30.2666 34.4561 li
30.2666 34.3575 li
30.1719 34.1612 li
29.9805 34.0645 li
29.6983 34.3575 li
29.6983 34.5547 li
29.6026 34.751 li
29.4122 34.9483 li
29.3174 35.1426 li
29.128 35.2422 li
28.9395 35.1426 li
28.8438 35.045 li
28.8438 34.9483 li
28.9395 34.8497 li
29.0333 34.751 li
29.128 34.751 li
29.128 34.4561 li
28.9395 34.2598 li
28.9395 34.0645 li
29.0333 33.9659 li
29.2237 33.1807 li
29.5079 33.1807 li
29.6983 33.0831 li
29.8877 32.296 li
30.1719 32.296 li
30.4561 32.3946 li
30.7413 32.4932 li
30.9307 32.4932 li
31.0245 32.5918 li
31.1211 32.7872 li
31.0245 32.9834 li
30.836 32.9834 li
30.836 32.7872 li
30.7413 32.7872 li
cp
29.6026 29.3526 mo
29.5079 29.254 li
29.4122 29.3526 li
29.3174 29.4502 li
29.3174 29.6465 li
29.2237 29.5489 li
29.0333 29.6465 li
28.6543 29.9415 li
28.5586 29.5489 li
28.3692 29.3526 li
28.4639 29.1553 li
28.5586 29.0586 li
28.7481 28.959 li
28.8438 28.7637 li
28.9395 28.8624 li
29.0333 28.8624 li
29.0333 29.1553 li
29.4122 29.1553 li
29.6026 28.959 li
29.792 28.3702 li
29.792 28.0762 li
29.8877 28.0762 li
29.792 28.5674 li
29.792 29.0586 li
29.6983 29.1553 li
29.6026 29.3526 li
cp
29.5079 29.8438 mo
29.5079 29.5489 li
29.6026 29.5489 li
29.6026 29.6465 li
29.6983 29.6465 li
29.6983 29.7442 li
29.5079 29.8438 li
cp
29.8877 29.5489 mo
29.8877 29.4502 li
30.0772 29.254 li
30.1719 29.254 li
30.0772 29.5489 li
30.0772 29.7442 li
30.1719 29.9415 li
30.0772 30.0391 li
29.9805 29.9415 li
29.9805 29.6465 li
29.8877 29.5489 li
cp
30.0772 30.4317 mo
30.0772 30.335 li
30.3614 30.335 li
30.3614 30.5303 li
30.1719 30.5303 li
30.1719 30.4317 li
30.0772 30.4317 li
cp
30.836 26.8975 mo
31.2149 26.8008 li
31.6885 26.8008 li
31.8809 26.8975 li
32.1651 27.1915 li
32.1651 27.3877 li
31.5958 27.586 li
31.2149 27.6827 li
31.0245 27.586 li
30.9307 27.4864 li
30.836 27.586 li
31.0245 27.7813 li
31.2149 27.878 li
31.4053 27.9786 li
31.4053 28.2725 li
31.0245 28.2725 li
30.836 28.1739 li
30.5508 28.2725 li
30.4561 28.1739 li
29.8877 27.878 li
29.5079 27.586 li
29.5079 27.2911 li
29.6983 26.9961 li
29.9805 26.6036 li
30.0772 26.4073 li
30.2666 26.3086 li
30.4561 26.3086 li
30.6475 26.4073 li
30.4561 26.9961 li
30.836 26.8975 li
cp
30.2666 20.7139 mo
30.1719 21.2042 li
30.0772 21.3038 li
29.9805 21.1055 li
30.1719 20.7139 li
30.2666 20.7139 li
cp
29.128 21.1055 mo
29.6983 20.6163 li
30.3614 20.2227 li
30.4561 20.419 li
30.3614 20.5176 li
30.1719 20.6163 li
29.9805 20.6163 li
29.8877 20.7139 li
29.8877 20.9102 li
29.792 21.1055 li
29.8877 21.3038 li
29.9805 21.5967 li
29.6983 21.9903 li
29.5079 22.3819 li
29.4122 22.8731 li
29.5079 23.3643 li
29.5079 22.8731 li
29.6026 22.6758 li
29.9805 22.0889 li
30.3614 21.4004 li
30.5508 20.6163 li
30.5508 19.8311 li
30.3614 19.4376 li
30.2666 19.045 li
30.2666 18.2598 li
30.5508 17.9649 li
30.7413 17.8672 li
30.9307 17.8672 li
31.3116 18.0626 li
31.6885 17.9649 li
32.0694 17.7686 li
32.4483 17.6709 li
31.5 18.1612 li
31.3116 18.0626 li
31.0245 18.0626 li
30.7413 17.9649 li
30.5508 18.0626 li
30.3614 18.2598 li
30.3614 18.751 li
30.4561 19.045 li
30.5508 19.4376 li
30.7413 19.8311 li
30.836 20.3213 li
30.6475 21.3038 li
30.3614 21.6954 li
30.1719 22.0889 li
29.8877 22.3819 li
29.6983 22.7754 li
29.6026 23.168 li
29.6026 23.7569 li
29.3174 23.3643 li
29.0333 23.0694 li
28.8438 22.6758 li
28.8438 22.1856 li
29.128 21.1055 li
cp
29.128 19.8311 mo
29.2237 19.8311 li
29.128 19.9278 li
29.0333 19.8311 li
29.128 19.8311 li
cp
29.0333 19.2413 mo
29.2227 19.2413 li
29.2227 19.3409 li
29.0333 19.3409 li
29.0333 19.2413 li
cp
29.3174 20.3213 mo
29.128 20.3213 li
29.2237 20.2227 li
29.3174 20.3213 li
cp
29.4122 19.3399 mo
29.4122 19.2413 li
29.5079 19.1436 li
29.6026 19.2413 li
29.6026 19.3399 li
29.4122 19.3399 li
cp
29.5079 19.7325 mo
29.6983 19.7325 li
29.6026 19.8311 li
29.5079 19.8311 li
29.5079 19.7325 li
cp
29.9805 19.1436 mo
29.9805 19.3399 li
29.792 19.2413 li
29.792 19.1436 li
29.9805 19.1436 li
cp
32.1651 17.4747 mo
31.9747 17.5733 li
31.6885 17.6709 li
31.1211 17.5733 li
30.5508 17.376 li
30.0772 17.0821 li
30.3614 16.9834 li
30.6475 17.0821 li
31.1211 17.1807 li
31.6885 17.376 li
32.1651 17.4747 li
cp
32.8292 18.5538 mo
32.6387 18.4551 li
32.3545 18.1612 li
32.4483 17.9649 li
32.6387 17.9649 li
33.0186 18.5538 li
32.8292 18.5538 li
cp
31.3116 18.6514 mo
31.5 18.6514 li
31.5958 18.751 li
31.8809 19.1436 li
31.5 18.9473 li
31.3116 18.6514 li
cp
30.9307 18.8487 mo
31.0245 18.751 li
31.1211 18.751 li
31.2149 18.8487 li
31.3116 19.045 li
31.4053 19.2413 li
31.5 19.3399 li
30.9307 18.8487 li
cp
30.836 19.1436 mo
30.9307 19.3399 li
31.1211 19.4376 li
31.1211 19.5352 li
30.9307 19.5352 li
30.6475 18.8487 li
30.836 19.1436 li
cp
30.4561 18.4551 mo
30.5508 18.2598 li
30.7413 18.1612 li
30.9307 18.1612 li
31.1211 18.2598 li
30.836 18.4551 li
30.5508 18.5538 li
30.4561 18.4551 li
cp
32.1651 18.8487 mo
32.2588 19.045 li
31.8809 18.8487 li
31.5958 18.5538 li
31.7852 18.3584 li
32.0694 18.6514 li
32.1651 18.8487 li
cp
32.6387 18.751 mo
32.4483 18.751 li
32.3545 18.6514 li
31.9747 18.3584 li
32.0694 18.2598 li
32.2588 18.1612 li
32.6387 18.751 li
cp
33.5879 18.6514 mo
33.5879 18.8487 li
33.3975 19.2413 li
33.2081 19.4376 li
33.1133 19.4376 li
32.9229 19.3399 li
32.7334 19.045 li
32.8292 19.045 li
32.9229 18.9473 li
33.0186 18.9473 li
33.1133 19.2413 li
33.2081 19.2413 li
33.2081 18.8487 li
33.3975 18.751 li
33.5879 18.6514 li
cp
33.0186 16.7872 mo
32.1651 16.6885 li
31.7852 16.5918 li
31.4053 16.3936 li
31.2149 16.3936 li
31.1211 16.2959 li
31.5 16.1006 li
31.7852 16.1006 li
32.0694 16.1983 li
32.4483 16.3936 li
32.7334 16.5918 li
33.0186 16.7872 li
cp
31.2149 15.2178 mo
31.9747 15.2178 li
32.6387 15.1182 li
33.0186 15.0206 li
33.3028 14.8243 li
33.8721 14.9219 li
34.4424 14.9219 li
35.4854 14.5293 li
35.1055 14.8243 li
35.0118 14.9219 li
34.9151 15.1182 li
34.252 15.2178 li
33.8721 15.2178 li
33.4922 15.3145 li
33.0186 15.6104 li
33.3975 16.002 li
33.6827 16.1006 li
34.6309 16.1006 li
34.3458 16.1983 li
34.0626 16.3936 li
33.7774 16.6885 li
33.4922 16.8858 li
32.0694 15.9034 li
31.4053 15.9034 li
31.1211 16.1006 li
30.836 16.2959 li
30.9307 16.4922 li
31.1211 16.5918 li
31.5958 16.7872 li
31.9747 16.9834 li
33.3028 16.9834 li
33.0186 17.2774 li
32.6387 17.5733 li
32.6387 17.376 li
31.8809 17.1807 li
31.2149 16.8858 li
30.836 16.7872 li
30.5508 16.6885 li
30.1719 16.7872 li
29.792 16.8858 li
30.5508 15.2178 li
31.2149 15.2178 li
cp
31.6885 14.9219 mo
32.544 14.9219 li
32.1651 15.0206 li
31.6885 15.0206 li
30.7413 14.9219 li
30.7413 14.7256 li
31.6885 14.9219 li
cp
33.2081 13.253 mo
33.2081 14.0391 li
33.1133 14.5293 li
32.9229 14.334 li
32.8292 14.1377 li
32.7334 13.7442 li
32.8292 13.1553 li
33.0186 12.5665 li
33.2081 13.253 li
cp
33.5879 14.334 mo
33.3975 14.2354 li
33.3975 14.0391 li
33.4922 13.8428 li
33.4922 13.6456 li
33.7774 13.253 li
34.1563 12.8614 li
33.9668 13.6456 li
33.5879 14.334 li
cp
35.8643 14.8243 mo
35.2012 15.0206 li
36.0547 14.4307 li
36.3389 14.4307 li
36.1485 14.628 li
35.8643 14.8243 li
cp
35.4854 15.8057 mo
34.9151 15.8057 li
34.3458 15.9034 li
33.8721 15.9034 li
33.5879 15.8057 li
33.3975 15.6104 li
33.8721 15.4131 li
34.3458 15.4131 li
34.9151 15.5108 li
35.4854 15.8057 li
cp
35.0118 15.3145 mo
35.7696 15.1182 li
35.6758 15.2178 li
35.6758 15.3145 li
35.961 15.6104 li
35.8643 15.9034 li
35.6758 15.8057 li
35.4854 15.6104 li
35.0118 15.3145 li
cp
35.295 12.3702 mo
35.7696 12.5665 li
36.2442 12.9581 li
36.5293 13.4493 li
36.7178 14.0391 li
36.2442 13.7442 li
35.8643 13.3516 li
35.295 12.3702 li
cp
37.4766 12.7627 mo
37.4766 12.9581 li
37.4395 13.0167 li
37.3829 13.253 li
37.003 13.9395 li
37.003 13.7442 li
37.0987 13.6456 li
37.2881 13.253 li
37.4395 13.0167 li
37.4766 12.8614 li
37.3829 12.4678 li
37.4766 12.7627 li
cp
40.7042 10.3086 mo
41.0831 10.5049 li
41.5577 10.6026 li
42.127 10.6026 li
42.4112 10.4073 li
42.6016 10.1124 li
42.6954 10.7999 li
42.7911 11.1915 li
42.8868 11.4874 li
42.6954 11.2901 li
42.4112 11.0948 li
42.0323 10.7999 li
40.6084 10.5049 li
40.5127 10.5049 li
41.0831 11.1915 li
41.8428 11.7803 li
41.3672 11.9776 li
40.9893 12.0762 li
40.6084 12.2725 li
40.2295 12.5665 li
40.3243 12.0762 li
40.3243 11.4874 li
40.1338 10.9952 li
39.7549 10.6026 li
39.6592 10.6026 li
39.7549 10.7999 li
39.7549 11.1915 li
39.4708 11.0948 li
39.1856 11.0948 li
38.6163 11.2901 li
37.9512 11.3887 li
37.668 11.3887 li
37.3829 11.2901 li
37.7618 11.584 li
38.2374 11.584 li
38.711 11.4874 li
39.0918 11.3887 li
39.5655 11.3887 li
39.376 11.584 li
39.1856 11.6827 li
38.711 11.879 li
38.2374 11.7803 li
38.0469 11.6827 li
37.7618 11.584 li
38.1416 11.879 li
39.0918 12.0762 li
39.5655 11.7803 li
39.376 12.4678 li
39.376 13.1553 li
38.6163 12.3702 li
37.668 11.9776 li
37.5723 11.879 li
37.4766 11.6827 li
37.4766 11.584 li
37.3829 11.3887 li
37.3829 11.7803 li
37.2881 11.1915 li
38.1416 11.0948 li
38.9004 10.7999 li
39.6592 10.4073 li
40.3243 9.91407 li
40.7042 10.3086 li
cp
41.4629 9.81739 mo
41.9366 9.91407 li
42.3165 10.1124 li
42.0323 10.3086 li
41.6524 10.3086 li
40.9893 10.21 li
40.7042 10.0127 li
40.5127 9.81739 li
41.4629 9.81739 li
cp
44.3096 11.1915 mo
44.3096 11.2901 li
44.0235 12.7627 li
43.9307 12.4678 li
43.9307 11.584 li
44.1202 10.8975 li
44.2139 10.3086 li
44.4043 10.7012 li
44.3096 10.9952 li
44.3096 11.1915 li
cp
42.9805 10.8975 mo
42.7911 10.4073 li
42.7911 9.81739 li
43.171 10.21 li
43.3614 10.7012 li
43.4551 11.1915 li
43.5508 11.7803 li
43.171 11.3887 li
42.9805 10.8975 li
cp
42.8868 13.9395 mo
42.8868 13.3516 li
43.0762 12.3702 li
43.171 12.5665 li
43.2657 12.8614 li
43.3614 13.3516 li
43.2657 13.8428 li
43.0762 14.334 li
42.9805 14.1377 li
42.8868 13.9395 li
cp
42.3165 14.5293 mo
42.0323 14.2354 li
41.4629 13.3516 li
41.9366 13.5479 li
42.3165 13.8428 li
42.9805 14.628 li
42.6954 14.628 li
42.3165 14.5293 li
cp
41.1788 15.2178 mo
41.3672 14.4307 li
41.2735 13.9395 li
40.9893 13.3516 li
41.2735 13.1553 li
41.7471 14.2354 li
42.0323 14.628 li
42.3165 14.7256 li
42.5059 14.8243 li
41.7471 15.2178 li
40.8936 15.6104 li
41.1788 15.2178 li
cp
40.419 15.1182 mo
40.5127 14.628 li
40.7042 14.0391 li
40.9893 13.5479 li
41.0831 14.2354 li
41.0831 14.628 li
40.9893 15.0206 li
40.7042 15.4131 li
40.6084 15.6104 li
40.419 15.7081 li
40.419 15.1182 li
cp
41.7471 11.3887 mo
41.2735 11.1915 li
40.8936 10.7999 li
41.3672 10.8975 li
41.7471 10.9952 li
42.127 11.1915 li
42.5059 11.4874 li
42.6016 11.584 li
42.127 11.584 li
41.7471 11.3887 li
cp
42.4112 11.879 mo
42.6016 11.879 li
42.7911 11.7803 li
42.8868 11.879 li
42.7911 12.8614 li
42.6954 13.7442 li
42.127 13.3516 li
41.4629 13.0577 li
41.4629 12.9581 li
41.6524 12.7627 li
41.6524 12.6651 li
42.0323 11.879 li
42.4112 11.879 li
cp
40.9893 12.2725 mo
41.7471 11.9776 li
41.5577 12.3702 li
41.3672 12.6651 li
41.0831 12.9581 li
40.7042 13.1553 li
39.9454 13.3516 li
40.419 12.7627 li
40.9893 12.2725 li
cp
39.6592 12.4678 mo
39.9454 11.4874 li
39.9454 11.1915 li
40.1338 11.7803 li
40.1338 12.2725 li
39.9454 12.8614 li
39.6592 13.3516 li
39.5655 12.8614 li
39.6592 12.4678 li
cp
40.1338 15.0206 mo
39.9454 14.628 li
39.5655 14.334 li
39.2803 14.0391 li
38.8057 13.8428 li
39.2803 13.6456 li
39.7549 13.5479 li
40.3243 13.5479 li
40.7989 13.4493 li
40.7042 13.6456 li
40.5127 13.9395 li
40.3243 14.334 li
40.1338 15.0206 li
cp
39.9454 15.7081 mo
39.7549 15.5108 li
39.4708 15.0206 li
39.2803 14.5293 li
38.9952 14.0391 li
39.4708 14.334 li
39.7549 14.7256 li
40.0401 15.2178 li
40.2295 15.7081 li
40.2295 15.8057 li
39.9454 15.7081 li
cp
38.0469 15.7081 mo
38.2374 15.5108 li
38.5206 15.1182 li
38.5206 14.5293 li
38.3311 13.9395 li
38.711 13.8428 li
38.9952 14.4307 li
39.2803 15.3145 li
39.7549 15.8057 li
40.0401 15.9034 li
39.9454 16.002 li
38.9004 15.9034 li
37.8575 15.8057 li
38.0469 15.7081 li
cp
37.5723 15.4131 mo
37.668 15.1182 li
38.1416 14.2354 li
38.2374 14.5293 li
38.2374 14.8243 li
38.1416 15.1182 li
37.668 15.6104 li
37.668 15.7081 li
37.5723 15.6104 li
37.5723 15.4131 li
cp
37.8575 12.2725 mo
38.6163 12.6651 li
38.9004 12.9581 li
39.0918 13.3516 li
38.8057 13.3516 li
38.5206 13.1553 li
37.9512 12.5665 li
37.8575 12.2725 li
cp
37.5723 12.5665 mo
37.5723 12.0762 li
37.7618 12.4678 li
38.0469 12.9581 li
38.3311 13.3516 li
38.5206 13.4493 li
38.8057 13.5479 li
38.9952 13.5479 li
38.0469 13.7442 li
37.668 13.9395 li
37.1934 14.1377 li
37.2881 13.9395 li
37.668 13.3516 li
37.668 13.0577 li
37.5723 12.5665 li
cp
37.3829 15.8057 mo
36.9092 15.8057 li
36.4336 15.9034 li
36.5293 15.6104 li
36.7178 15.3145 li
37.003 14.7256 li
37.4766 14.2354 li
38.1416 13.9395 li
37.8575 14.334 li
37.5723 14.8243 li
37.3829 15.2178 li
37.2881 15.5108 li
37.3829 15.8057 li
cp
44.2139 9.52247 mo
44.6885 9.81739 li
44.7833 10.1124 li
44.7833 10.4073 li
44.5948 11.584 li
44.7833 12.1729 li
44.1202 13.3516 li
43.7403 14.7256 li
43.171 14.7256 li
43.171 14.5293 li
43.2657 14.334 li
43.4551 14.0391 li
43.5508 13.5479 li
43.5508 13.0577 li
43.4551 12.5665 li
43.171 12.1729 li
43.0762 11.9776 li
43.0762 11.6827 li
43.171 11.7803 li
43.2657 11.879 li
43.6446 12.0762 li
43.9307 12.9581 li
44.2139 13.1553 li
44.3096 12.5665 li
44.4981 11.7803 li
44.5948 10.9952 li
44.4981 10.6026 li
44.4981 10.21 li
44.3096 9.91407 li
44.1202 9.52247 li
44.1202 10.0127 li
44.0235 10.4073 li
43.7403 11.2901 li
43.6446 10.7012 li
43.4551 10.21 li
43.0762 9.81739 li
42.6016 9.42383 li
42.5059 9.52247 li
42.5059 9.71973 li
42.6016 9.81739 li
42.6016 9.91407 li
41.5577 9.62208 li
40.7042 9.71973 li
41.3672 9.42383 li
42.127 9.32715 li
43.7403 9.13086 li
43.9307 9.42383 li
44.2139 9.52247 li
cp
45.3526 9.62208 mo
44.878 9.52247 li
44.4981 9.42383 li
44.1202 9.22852 li
45.0694 9.22852 li
45.7325 9.52247 li
45.3526 9.62208 li
cp
45.6377 10.9952 mo
45.2579 11.584 li
45.1641 11.584 li
45.2579 11.1915 li
45.2579 10.7012 li
45.1641 10.3086 li
44.9737 9.91407 li
45.2579 9.91407 li
45.4483 9.81739 li
45.9219 9.62208 li
45.9219 10.5049 li
45.8272 10.7999 li
45.6377 10.9952 li
cp
44.7833 11.7803 mo
44.7833 11.584 li
44.9737 10.8975 li
44.9737 10.3086 li
45.0694 10.7012 li
45.0694 11.1915 li
44.9737 11.584 li
44.878 12.0762 li
44.7833 11.7803 li
cp
44.6885 12.9581 mo
44.0235 14.7256 li
43.9307 14.7256 li
43.9307 14.4307 li
44.3096 13.5479 li
44.6885 12.7627 li
45.1641 11.9776 li
45.7325 11.2901 li
45.1641 12.0762 li
44.6885 12.9581 li
cp
45.9219 12.7627 mo
45.4483 13.1553 li
44.9737 13.3516 li
45.1641 12.8614 li
45.543 12.4678 li
46.3965 11.6827 li
46.4913 11.6827 li
46.2071 12.2725 li
45.9219 12.7627 li
cp
33.1133 12.2725 mo
33.4922 12.1729 li
33.8721 12.0762 li
34.7266 11.879 li
35.5801 11.7803 li
36.3389 11.3887 li
36.8126 11.2901 li
37.003 11.1915 li
37.1934 11.1915 li
37.1934 12.4678 li
37.0987 13.0577 li
37.003 13.3516 li
36.9092 13.6456 li
36.7178 13.253 li
36.6241 12.9581 li
36.5293 12.7627 li
36.1485 12.4678 li
35.7696 12.2725 li
35.295 12.1729 li
34.9151 11.9776 li
34.9151 12.1729 li
35.1055 12.3702 li
35.2012 12.5665 li
35.3897 13.0577 li
35.7696 13.6456 li
36.1485 14.0391 li
36.4336 14.1377 li
36.7178 14.2354 li
36.1485 15.1182 li
36.0547 15.0206 li
36.3389 14.7256 li
36.5293 14.4307 li
36.6241 14.2354 li
36.1485 14.2354 li
35.7696 14.4307 li
35.5801 14.334 li
35.4854 14.334 li
35.3594 14.3497 li
35.0118 14.5293 li
34.4424 14.7256 li
34.1563 14.7256 li
33.8721 14.628 li
34.7266 14.4307 li
35.3594 14.3497 li
35.3897 14.334 li
35.4854 14.334 li
35.5801 14.2354 li
34.9151 14.2354 li
34.3458 14.334 li
34.3458 14.2354 li
34.4424 14.1377 li
34.5362 14.1377 li
34.6309 14.0391 li
34.4424 14.0391 li
34.252 14.1377 li
34.1563 14.2354 li
33.9668 14.2354 li
33.7774 14.334 li
33.6827 14.4307 li
34.252 13.4493 li
34.3458 12.9581 li
34.3458 12.3702 li
33.8721 12.8614 li
33.5879 13.0577 li
33.4922 13.253 li
33.1133 12.2725 li
cp
32.544 12.5665 mo
32.9229 12.3702 li
32.8292 12.8614 li
32.6387 13.4493 li
32.6387 14.0391 li
32.7334 14.334 li
32.9229 14.628 li
32.7334 14.628 li
32.544 14.334 li
32.3545 13.9395 li
32.1651 13.6456 li
31.7852 13.4493 li
31.7852 13.5479 li
31.9747 13.7442 li
32.544 14.628 li
32.4483 14.7256 li
32.2588 14.7256 li
32.0694 14.5293 li
31.9747 14.2354 li
31.6885 13.7442 li
31.6885 13.8428 li
31.7852 14.2354 li
31.8809 14.5293 li
31.9747 14.7256 li
31.5 14.7256 li
30.9307 14.5293 li
31.2149 14.0391 li
31.5 13.6456 li
32.1651 12.8614 li
32.544 12.5665 li
cp
28.4639 15.8057 mo
28.6543 15.6104 li
29.2237 16.002 li
29.128 16.002 li
29.0333 16.1006 li
28.2745 16.1006 li
28.4639 15.8057 li
cp
29.0333 12.5665 mo
29.0333 13.1553 li
28.9395 13.6456 li
28.3692 14.628 li
28.3692 14.0391 li
28.4639 13.5479 li
29.0333 12.5665 li
cp
27.7051 11.3887 mo
27.9893 11.3887 li
28.2745 11.584 li
29.0333 12.3702 li
28.4639 12.1729 li
27.9893 11.9776 li
27.5157 11.6827 li
27.0411 11.2901 li
27.7051 11.3887 li
cp
29.2237 18.3584 mo
29.3174 17.9649 li
29.5079 17.6709 li
29.6026 17.2774 li
30.0772 17.5733 li
30.5508 17.7686 li
30.1719 18.1612 li
29.9805 18.4551 li
29.9805 18.751 li
29.6026 18.8487 li
29.4122 18.8487 li
29.3174 18.6514 li
29.2237 18.3584 li
cp
28.1797 22.0889 mo
28.1797 21.9903 li
28.4639 22.0889 li
28.7481 22.1856 li
28.6543 22.2842 li
28.3692 22.2842 li
28.1797 22.0889 li
cp
27.6104 35.1426 mo
27.6104 34.8497 li
27.5157 34.751 li
27.6104 34.751 li
27.6104 34.6534 li
28.084 34.751 li
28.4639 34.8497 li
28.2745 34.8497 li
28.1797 34.9483 li
28.084 35.3399 li
28.2745 35.9288 li
27.9893 36.0274 li
27.8936 36.0274 li
27.7989 35.8301 li
27.7051 35.5372 li
27.7051 35.3399 li
27.6104 35.1426 li
cp
29.2237 38.8741 mo
29.128 38.9717 li
29.128 38.7764 li
29.2237 38.8741 li
cp
29.0333 38.4825 mo
28.6543 38.5792 li
29.0333 38.1876 li
29.2237 38.4825 li
29.4122 38.6778 li
29.2237 38.6778 li
29.0333 38.4825 li
cp
36.0547 45.0567 mo
36.1485 44.96 li
36.3389 44.96 li
36.3389 45.0567 li
36.2442 45.1563 li
36.0547 45.0567 li
cp
35.961 45.5499 mo
36.1485 45.5499 li
36.1485 45.6475 li
35.961 45.7461 li
35.8643 45.7461 li
35.961 45.5499 li
cp
35.5801 44.7637 mo
35.5801 44.6661 li
35.8643 44.6661 li
35.7696 44.7637 li
35.5801 44.7637 li
cp
35.5801 45.4502 mo
35.3897 45.3526 li
35.5801 45.2549 li
35.7696 45.2549 li
35.7696 45.3526 li
35.5801 45.4502 li
cp
35.3897 45.8438 mo
35.5801 45.8438 li
35.6758 45.9424 li
35.5801 46.0411 li
35.3897 46.1387 li
35.2012 45.9424 li
35.3897 45.8438 li
cp
35.0118 43.8799 mo
35.3897 43.8799 li
35.2012 43.9786 li
35.0118 43.8799 li
cp
35.2012 44.1749 mo
35.3897 44.3711 li
35.2012 44.4698 li
35.1055 44.4698 li
34.9151 44.3711 li
35.0118 44.2735 li
35.2012 44.1749 li
cp
35.0118 45.1563 mo
34.9151 45.0567 li
35.0118 44.96 li
35.295 44.96 li
35.1055 45.0567 li
35.0118 45.1563 li
cp
34.8213 45.7461 mo
34.8213 45.6475 li
34.9151 45.5499 li
35.1055 45.6475 li
35.0118 45.7461 li
34.8213 45.7461 li
cp
34.1563 45.8438 mo
34.3458 45.7461 li
34.4424 45.9424 li
34.1563 45.9424 li
34.1563 45.8438 li
cp
33.8721 45.0567 mo
33.6827 44.96 li
33.8721 44.8614 li
33.9668 44.8614 li
34.1563 44.96 li
34.1563 45.0567 li
33.8721 45.0567 li
cp
33.7774 45.6475 mo
33.6827 45.5499 li
33.8721 45.4502 li
33.9668 45.5499 li
34.0626 45.7461 li
33.9668 45.6475 li
33.7774 45.6475 li
cp
33.6827 46.2374 mo
33.4922 46.1387 li
33.5879 46.0411 li
33.6827 46.0411 li
33.7774 46.1387 li
33.8721 46.1387 li
33.7774 46.2374 li
33.6827 46.2374 li
cp
33.2081 45.7461 mo
33.3028 45.7461 li
33.3975 45.8438 li
33.3975 45.9424 li
33.3028 45.9424 li
33.1133 45.7461 li
33.2081 45.7461 li
cp
33.3028 45.1563 mo
33.3975 45.1563 li
33.5879 45.2549 li
33.4922 45.3526 li
33.3975 45.3526 li
33.1133 45.2549 li
33.3028 45.1563 li
cp
33.3975 44.4698 mo
33.4922 44.4698 li
33.5879 44.5674 li
33.4922 44.6661 li
33.3975 44.6661 li
33.3028 44.7637 li
33.2081 44.6661 li
33.2081 44.5674 li
33.3028 44.5674 li
33.3975 44.4698 li
cp
33.5879 44.0762 mo
33.3028 44.1749 li
33.4922 43.9786 li
33.7774 43.9786 li
33.5879 44.0762 li
cp
34.252 44.0762 mo
34.3458 43.8799 li
34.5362 43.8799 li
34.8213 43.9786 li
34.7266 44.0762 li
34.6309 44.0762 li
34.4424 44.1749 li
34.3458 44.1749 li
34.252 44.0762 li
cp
34.5362 44.5674 mo
34.6309 44.5674 li
34.7266 44.6661 li
34.7266 44.7637 li
34.252 44.7637 li
34.252 44.6661 li
34.5362 44.5674 li
cp
34.3458 45.3526 mo
34.4424 45.2549 li
34.6309 45.2549 li
34.6309 45.3526 li
34.3458 45.3526 li
cp
34.6309 46.1387 mo
34.9151 46.1387 li
34.9151 46.2374 li
34.7266 46.334 li
34.6309 46.334 li
34.5362 46.2374 li
34.6309 46.1387 li
cp
33.7774 43.8799 mo
33.9668 43.6846 li
33.9668 43.7823 li
33.8721 43.8799 li
33.7774 43.8799 li
cp
33.8721 44.2735 mo
34.1563 44.1749 li
34.252 44.2735 li
33.9668 44.3711 li
33.6827 44.4698 li
33.8721 44.2735 li
cp
32.9229 44.4698 mo
32.7334 44.4698 li
32.7334 44.3711 li
32.8292 44.3711 li
33.0186 44.2735 li
33.1133 44.2735 li
32.9229 44.4698 li
cp
32.8292 44.96 mo
32.6387 44.96 li
32.8292 44.8614 li
32.9229 44.7637 li
33.0186 44.8614 li
33.0186 44.96 li
32.8292 44.96 li
cp
32.544 45.3526 mo
32.8292 45.3526 li
33.0186 45.5499 li
32.9229 45.6475 li
32.7334 45.6475 li
32.6387 45.5499 li
32.544 45.4502 li
32.544 45.3526 li
cp
32.3545 44.1749 mo
32.4483 44.0762 li
32.6387 43.9786 li
32.6387 44.0762 li
32.544 44.1749 li
32.3545 44.1749 li
cp
32.544 44.5674 mo
32.3545 44.6661 li
32.2588 44.7637 li
32.1651 44.6661 li
32.3545 44.5674 li
32.544 44.5674 li
cp
32.2588 45.0567 mo
32.4483 45.0567 li
32.544 45.1563 li
32.4483 45.2549 li
32.1651 45.2549 li
32.0694 45.1563 li
32.2588 45.0567 li
cp
31.7852 44.96 mo
31.5958 44.7637 li
31.7852 44.6661 li
31.9747 44.6661 li
32.0694 44.7637 li
32.0694 44.8614 li
31.7852 44.96 li
cp
31.5958 45.2549 mo
31.7852 45.1563 li
31.7852 45.2549 li
31.9747 45.4502 li
31.8809 45.5499 li
31.5958 45.4502 li
31.4053 45.2549 li
31.5958 45.2549 li
cp
31.1211 44.96 mo
31.2149 44.96 li
31.3116 44.8614 li
31.4053 44.96 li
31.5 45.0567 li
31.4053 45.1563 li
31.3116 45.1563 li
31.1211 45.0567 li
31.1211 44.96 li
cp
30.9307 44.5674 mo
31.0245 44.6661 li
31.1211 44.7637 li
30.9307 44.7637 li
30.836 44.6661 li
30.9307 44.5674 li
cp
31.7852 44.3711 mo
31.8809 44.2735 li
32.0694 44.2735 li
32.0694 44.3711 li
31.9747 44.3711 li
31.6885 44.4698 li
31.4053 44.6661 li
31.3116 44.6661 li
31.2149 44.5674 li
31.4053 44.4698 li
31.6885 44.4698 li
31.7852 44.3711 li
cp
31.3116 44.2735 mo
31.0245 44.2735 li
31.2149 44.1749 li
31.6885 43.9786 li
31.3116 44.2735 li
cp
30.6475 43.9786 mo
30.9307 43.585 li
31.2149 43.292 li
31.6885 42.9971 li
32.1651 42.9971 li
31.9747 43.0948 li
31.8809 43.1934 li
31.6885 43.4874 li
31.4053 43.7823 li
31.2149 43.7823 li
31.4053 43.4874 li
31.2149 43.585 li
31.0245 43.7823 li
30.9307 43.8799 li
30.6475 43.9786 li
cp
30.6475 44.3711 mo
30.7413 44.4698 li
30.5508 44.3711 li
30.6475 44.3711 li
cp
30.836 43.3887 mo
31.0245 42.8985 li
31.3116 42.6036 li
31.5 42.5059 li
31.7852 42.4073 li
32.1651 42.5059 li
32.544 42.7032 li
32.6387 42.8985 li
32.3545 42.8985 li
32.0694 42.7032 li
31.7852 42.6036 li
31.6885 42.6036 li
31.5 42.7032 li
31.2149 42.9971 li
31.0245 43.1934 li
30.6475 43.7823 li
30.836 43.3887 li
cp
30.7413 42.3096 mo
30.7413 42.212 li
30.836 42.1124 li
31.1211 42.0157 li
31.3116 42.0157 li
31.4053 42.1124 li
31.4053 42.212 li
31.1211 42.4073 li
30.9307 42.4073 li
30.7413 42.3096 li
cp
30.2666 42.5059 mo
30.3614 42.212 li
30.5508 42.1124 li
30.6475 42.0157 li
30.5508 42.4073 li
30.3614 42.8008 li
30.2666 42.5059 li
cp
30.3614 43.1934 mo
30.4561 42.8008 li
30.6475 42.6036 li
30.836 42.5059 li
30.5508 42.9971 li
30.4561 43.292 li
30.4561 43.4874 li
30.3614 43.1934 li
cp
36.4336 35.045 mo
36.4336 34.8497 li
36.5293 34.8497 li
36.4336 35.045 li
cp
35.0118 33.2793 mo
35.0118 33.5733 li
34.9151 33.6719 li
34.8213 33.6719 li
34.8213 33.377 li
34.9151 33.1807 li
35.0118 33.2793 li
cp
36.5293 19.6329 mo
36.3389 19.9278 li
36.3389 20.3213 li
36.6241 20.5176 li
36.9092 20.5176 li
37.003 20.3213 li
37.1934 20.1241 li
37.2881 20.3213 li
37.1934 20.5176 li
36.9092 20.7139 li
36.7178 20.8126 li
36.6241 20.9102 li
35.2012 20.9102 li
35.3897 20.6163 li
35.3897 20.419 li
35.1055 20.1241 li
34.9151 20.1241 li
34.8213 20.0264 li
34.8213 19.8311 li
34.5362 19.5352 li
34.3458 19.4376 li
34.1563 19.4376 li
33.8721 19.6329 li
33.7774 19.8311 li
33.5879 19.9278 li
33.3975 19.9278 li
33.1133 20.1241 li
32.8292 20.419 li
32.8292 20.6163 li
33.0186 21.0079 li
33.2081 21.1055 li
33.3028 21.2042 li
33.1133 21.6954 li
33.0186 21.8917 li
33.0186 22.1856 li
32.9229 22.1856 li
32.8292 21.9903 li
32.6387 21.8917 li
32.544 21.8917 li
32.544 21.794 li
31.8809 21.794 li
31.6885 21.8917 li
31.4053 22.0889 li
31.1211 22.0889 li
30.9307 22.1856 li
30.6475 22.1856 li
30.4561 22.2842 li
30.3614 22.2842 li
30.2666 22.4805 li
30.2666 22.7754 li
30.0772 22.8731 li
29.9805 23.168 li
30.2666 23.168 li
30.3614 23.3643 li
30.2666 23.5606 li
30.2666 23.8555 li
30.3614 23.9532 li
30.6475 24.0518 li
30.7413 24.2471 li
30.7413 24.3458 li
30.836 24.4434 li
30.836 25.0342 li
30.9307 25.1299 li
31.0245 25.2295 li
31.2149 25.1299 li
31.3116 25.1299 li
31.2149 25.3282 li
31.2149 25.4258 li
31.3116 25.8184 li
31.4053 25.9161 li
31.5958 25.9161 li
31.7852 26.0137 li
32.0694 26.3086 li
32.2588 26.3086 li
32.3545 26.212 li
32.3545 26.1133 li
32.4483 25.9161 li
32.4483 25.8184 li
32.7334 26.4073 li
32.9229 26.5059 li
33.2081 26.4073 li
32.8292 27.7813 li
33.0186 27.9786 li
33.1133 28.2725 li
33.3028 28.7637 li
33.3975 29.254 li
33.6827 29.7442 li
33.9668 30.1377 li
34.7266 30.5303 li
35.0118 30.8252 li
35.2012 30.8252 li
35.3897 30.9219 li
35.7696 30.7276 li
35.961 30.5303 li
35.961 31.709 li
35.8643 31.9043 li
35.5801 32.1006 li
35.295 32.1993 li
35.1055 32.3946 li
34.7266 32.9834 li
34.6309 33.377 li
34.3458 33.6719 li
34.7266 33.8672 li
35.0118 33.8672 li
35.295 33.6719 li
35.4854 33.5733 li
35.4854 33.6719 li
35.5801 33.7686 li
35.5801 32.7872 li
35.6758 32.3946 li
35.5801 32.3946 li
35.2012 33.377 li
35.2012 33.2793 li
35.1055 33.0831 li
35.0118 32.8858 li
35.2012 32.6885 li
35.3897 32.3946 li
35.7696 32.1993 li
35.8643 32.5918 li
36.4336 33.1807 li
36.8126 33.2793 li
36.9092 33.377 li
36.9092 33.5733 li
36.8126 33.8672 li
36.8126 34.6534 li
36.9092 34.8497 li
36.8126 34.9483 li
36.5293 35.5372 li
36.5293 35.3399 li
36.6241 35.1426 li
36.6241 34.6534 li
36.5293 34.3575 li
36.5293 34.0645 li
36.6241 33.8672 li
36.6241 33.377 li
36.4336 33.9659 li
36.3389 34.5547 li
36.4336 34.6534 li
36.2442 34.8497 li
36.1485 35.045 li
35.961 35.5372 li
35.961 35.1426 li
36.1485 34.8497 li
36.2442 34.0645 li
36.4336 33.2793 li
36.1485 33.6719 li
36.1485 34.0645 li
36.0547 34.4561 li
35.961 34.9483 li
35.6758 35.5372 li
35.5801 35.3399 li
35.5801 35.2422 li
35.6758 34.9483 li
35.8643 34.5547 li
35.961 34.0645 li
35.961 33.0831 li
35.8643 33.1807 li
35.8643 33.377 li
35.7696 33.7686 li
35.7696 34.1612 li
35.5801 34.4561 li
35.1055 34.8497 li
35.2012 34.5547 li
35.3897 34.3575 li
35.5801 34.0645 li
35.5801 33.7686 li
35.4854 33.8672 li
35.4854 33.9659 li
35.3897 34.0645 li
35.295 34.1612 li
35.0118 34.5547 li
34.9151 34.751 li
34.9151 35.045 li
35.2012 35.045 li
35.295 34.9483 li
35.4854 34.751 li
35.6758 34.6534 li
35.4854 35.1426 li
35.3897 35.3399 li
35.3897 35.6338 li
35.5801 35.8301 li
35.5801 35.9288 li
35.7696 35.8301 li
35.8643 35.7325 li
35.961 35.7325 li
36.0547 35.8301 li
36.3389 35.1426 li
36.3389 35.6338 li
36.4336 35.7325 li
36.6241 35.7325 li
36.7178 35.6338 li
36.6241 35.5372 li
36.8126 35.3399 li
36.6241 36.7139 li
36.6241 37.3047 li
36.7178 37.9903 li
36.8126 38.3829 li
36.5293 40.4434 li
36.6241 41.2305 li
36.5293 41.4268 li
36.5293 41.7208 li
36.6241 42.212 li
36.6241 43.6846 li
36.5293 44.2735 li
36.5293 44.3711 li
36.6241 44.4698 li
36.6241 44.5674 li
36.9092 43.1934 li
37.003 41.918 li
37.003 40.543 li
37.0987 39.169 li
37.1934 39.5626 li
37.4766 39.8545 li
37.5723 39.3653 li
37.5723 38.9717 li
37.668 37.9903 li
37.668 37.8916 li
37.7618 37.8916 li
37.8575 37.795 li
37.7618 37.795 li
37.668 37.5977 li
37.7618 37.4991 li
37.668 36.6153 li
37.668 35.7325 li
37.7618 35.6338 li
38.2374 35.6338 li
38.3311 35.8301 li
38.2374 35.9288 li
38.1416 36.2237 li
37.9512 36.5176 li
37.8575 36.9092 li
37.7618 37.5977 li
37.8575 37.795 li
38.0469 37.5977 li
38.1416 37.3047 li
38.3311 36.8126 li
38.3311 36.6153 li
38.4258 36.42 li
38.6163 36.0274 li
38.711 36.2237 li
38.711 36.8126 li
38.4258 37.5977 li
38.4258 37.9903 li
38.0469 39.5626 li
38.1416 39.3653 li
38.2374 39.0704 li
38.4258 38.5792 li
38.4258 39.4629 li
38.2374 40.4434 li
38.3311 40.4434 li
38.0469 42.7032 li
37.8575 44.8614 li
37.1934 44.7637 li
36.9092 44.6661 li
36.5293 44.7637 li
36.5293 44.5674 li
36.4336 44.4698 li
36.2442 44.5674 li
36.1485 44.5674 li
36.0547 44.4698 li
36.0547 44.3711 li
36.1485 44.2735 li
36.2442 44.2735 li
36.2442 44.1749 li
36.1485 44.0762 li
35.961 44.0762 li
35.6758 44.1749 li
35.3897 44.0762 li
35.5801 43.9786 li
35.7696 43.8799 li
35.4854 43.6846 li
35.2012 43.585 li
34.5362 43.6846 li
34.1563 43.8799 li
34.1563 43.585 li
34.252 43.3887 li
34.1563 43.4874 li
33.9668 43.585 li
33.6827 43.3887 li
33.3028 43.292 li
33.4922 43.4874 li
33.6827 43.585 li
33.7774 43.585 li
32.9229 43.9786 li
32.8292 43.8799 li
33.0186 43.6846 li
33.0186 43.585 li
33.1133 43.4874 li
33.2081 43.4874 li
33.1133 43.3887 li
32.7334 43.585 li
32.544 43.6846 li
32.2588 43.6846 li
32.0694 43.8799 li
31.6885 43.8799 li
31.8809 43.585 li
32.1651 43.3887 li
32.8292 43.0948 li
32.8292 42.8008 li
32.9229 42.9971 li
32.9229 43.0948 li
33.0186 43.1934 li
33.3028 43.1934 li
33.3028 43.0948 li
33.0186 42.8985 li
32.9229 42.8008 li
32.8292 42.6036 li
32.6387 42.4073 li
32.3545 42.212 li
32.0694 42.1124 li
31.6885 42.1124 li
31.5958 41.918 li
31.4053 41.7208 li
31.0245 41.7208 li
31.2149 41.6221 li
31.5 41.5254 li
31.9747 41.5254 li
32.2588 41.7208 li
32.4483 41.8194 li
32.8292 42.212 li
32.7334 41.8194 li
32.544 41.4268 li
32.3545 41.1319 li
32.0694 41.0352 li
31.4053 41.0352 li
31.0245 41.1319 li
30.6475 41.4268 li
30.3614 41.7208 li
30.1719 42.1124 li
30.1719 42.212 li
29.8877 41.3272 li
29.6983 40.9356 li
29.6026 40.543 li
29.4122 39.6592 li
29.5079 39.9551 li
29.5079 40.0518 li
29.6983 40.1504 li
29.792 40.0518 li
29.792 39.8545 li
29.8877 39.7579 li
29.6983 39.7579 li
29.6026 40.0518 li
29.6026 39.8545 li
29.5079 39.7579 li
29.5079 39.5626 li
29.4122 39.4629 li
29.4122 39.2676 li
29.3174 39.169 li
29.8877 39.169 li
29.9805 39.3653 li
30.0772 39.4629 li
30.0772 39.5626 li
30.2666 39.5626 li
30.1719 39.3653 li
30.0772 39.2676 li
29.792 39.0704 li
29.6026 39.0704 li
29.792 38.6778 li
30.3614 38.2852 li
30.7413 38.1876 li
30.836 37.9903 li
30.9307 38.2852 li
30.9307 38.4825 li
31.2149 38.7764 li
31.3116 38.6778 li
31.4053 38.5792 li
31.5 38.5792 li
31.5 39.4629 li
31.7852 39.3653 li
31.8809 39.169 li
32.0694 38.5792 li
31.8809 37.9903 li
31.5958 37.795 li
31.4053 37.5977 li
31.1211 37.5977 li
31.2149 37.4014 li
31.5958 37.4014 li
31.7852 37.3047 li
31.8809 37.1065 li
31.9747 36.7139 li
32.0694 36.5176 li
32.1651 36.42 li
32.2588 36.5176 li
32.3545 36.7139 li
32.2588 37.0098 li
32.3545 37.3047 li
32.544 37.4014 li
32.6387 37.4014 li
32.8292 37.3047 li
32.9229 37.3047 li
33.0186 37.1065 li
33.2081 36.8126 li
33.2081 36.6153 li
33.3028 36.5176 li
33.3975 36.6153 li
33.5879 36.7139 li
33.5879 37.1065 li
33.3975 37.4014 li
33.3028 37.5977 li
33.3975 37.795 li
33.5879 37.8916 li
33.7774 37.8916 li
33.9668 37.9903 li
34.0626 38.0879 li
34.0626 38.3829 li
33.8721 38.6778 li
33.4922 39.0704 li
33.2081 38.9717 li
33.0186 38.7764 li
33.0186 38.5792 li
33.1133 38.2852 li
33.2081 38.1876 li
33.3028 38.0879 li
33.3975 38.1876 li
33.4922 38.2852 li
33.4922 38.4825 li
33.3975 38.5792 li
33.3975 38.6778 li
33.5879 38.6778 li
33.6827 38.5792 li
33.7774 38.1876 li
33.5879 37.9903 li
33.3975 37.8916 li
33.1133 37.9903 li
32.8292 38.2852 li
32.8292 38.3829 li
32.7334 38.7764 li
32.9229 39.0704 li
33.2081 39.2676 li
33.3975 39.2676 li
33.5879 39.169 li
33.8721 38.9717 li
34.0626 38.7764 li
34.252 38.3829 li
34.252 37.9903 li
34.0626 37.8916 li
33.8721 37.795 li
33.6827 37.795 li
33.4922 37.5977 li
33.7774 37.1065 li
33.8721 36.8126 li
33.7774 36.6153 li
33.5879 36.42 li
33.4922 36.42 li
33.1133 36.5176 li
32.9229 36.7139 li
32.7334 37.1065 li
32.544 37.3047 li
32.4483 37.1065 li
32.544 37.0098 li
32.6387 36.9092 li
32.544 36.7139 li
32.544 36.42 li
32.3545 36.2237 li
32.0694 36.2237 li
31.8809 36.42 li
31.6885 36.7139 li
31.5958 36.8126 li
31.5958 37.0098 li
31.4053 37.2051 li
31.3116 37.2051 li
31.3116 36.5176 li
31.2149 36.2237 li
31.1211 36.0274 li
31.2149 35.8301 li
31.3116 35.8301 li
31.6885 35.7325 li
31.8809 35.7325 li
32.1651 35.9288 li
32.3545 36.0274 li
32.7334 36.0274 li
32.7334 35.2422 li
32.9229 35.1426 li
33.1133 34.9483 li
33.1133 34.8497 li
33.0186 34.6534 li
32.9229 34.6534 li
32.9229 34.5547 li
33.3028 34.1612 li
33.2081 33.9659 li
33.0186 33.7686 li
32.9229 33.7686 li
33.0186 33.6719 li
33.1133 33.4737 li
33.2081 33.377 li
33.1133 33.2793 li
32.7334 33.0831 li
32.6387 32.9834 li
32.4483 33.0831 li
32.3545 33.1807 li
32.1651 33.1807 li
32.1651 33.0831 li
31.8809 32.7872 li
31.6885 32.7872 li
31.5958 32.8858 li
31.4053 32.9834 li
31.3116 32.6885 li
31.1211 32.296 li
30.836 32.296 li
30.2666 32.1006 li
29.8877 32.1006 li
29.8877 32.1993 li
29.6983 32.1006 li
29.5079 32.1006 li
29.6983 32.1993 li
29.6026 32.296 li
29.6026 32.4932 li
29.5079 32.5918 li
29.4122 32.5918 li
29.5079 31.2168 li
29.5079 30.5303 li
29.792 30.5303 li
29.8877 30.7276 li
29.9805 30.8252 li
30.3614 30.8252 li
30.6475 30.5303 li
30.836 30.4317 li
30.9307 30.4317 li
30.9307 30.2364 li
31.0245 30.0391 li
30.836 29.8438 li
30.836 29.6465 li
30.9307 29.4502 li
30.7413 29.1553 li
30.836 28.8624 li
30.836 28.6641 li
30.7413 28.4688 li
30.836 28.4688 li
30.836 28.5674 li
31.1211 28.8624 li
31.3116 28.959 li
31.6885 29.0586 li
31.5958 29.5489 li
31.6885 29.9415 li
31.8809 30.1377 li
31.9747 30.2364 li
32.0694 30.2364 li
32.2588 30.8252 li
32.6387 31.2168 li
32.9229 31.3165 li
33.2081 31.3165 li
33.7774 30.7276 li
33.7774 30.1377 li
33.6827 29.8438 li
33.5879 29.7442 li
33.4922 29.8438 li
33.3028 29.9415 li
33.5879 30.2364 li
33.5879 30.627 li
33.4922 30.7276 li
33.3975 30.9219 li
33.2081 31.0206 li
33.0186 31.0206 li
32.9229 30.9219 li
32.544 30.7276 li
32.4483 30.5303 li
32.4483 30.335 li
32.6387 30.2364 li
32.7334 30.1377 li
32.8292 30.4317 li
32.9229 30.627 li
33.1133 30.7276 li
33.2081 30.7276 li
33.4922 30.627 li
33.4922 30.335 li
33.3028 30.0391 li
33.2081 30.1377 li
33.1133 30.1377 li
33.3028 30.335 li
33.3028 30.4317 li
33.2081 30.5303 li
33.1133 30.5303 li
32.9229 30.2364 li
32.9229 30.1377 li
33.0186 29.9415 li
33.2081 29.8438 li
32.9229 29.254 li
32.7334 29.0586 li
32.6387 29.0586 li
32.4483 29.1553 li
32.2588 29.4502 li
32.2588 29.6465 li
32.1651 29.9415 li
31.9747 29.7442 li
31.8809 29.5489 li
32.0694 29.1553 li
32.0694 28.959 li
31.8809 28.8624 li
31.7852 28.7637 li
31.5958 28.6641 li
31.4053 28.6641 li
31.2149 28.5674 li
31.6885 28.5674 li
31.7852 28.3702 li
31.6885 28.0762 li
31.6885 27.878 li
31.7852 27.878 li
31.8809 27.7813 li
32.1651 27.6827 li
32.4483 27.4864 li
32.4483 27.0948 li
32.1651 26.8008 li
31.5 26.5059 li
31.3116 26.5059 li
31.1211 26.6036 li
30.7413 26.7012 li
30.836 26.5059 li
30.836 26.3086 li
30.9307 26.212 li
30.7413 26.0137 li
30.2666 25.9161 li
30.3614 25.4258 li
30.2666 24.9346 li
30.0772 24.5411 li
29.792 24.1485 li
29.792 23.8555 li
29.8877 23.5606 li
29.792 23.2667 li
29.8877 22.9717 li
30.0772 22.5782 li
30.4561 22.1856 li
30.6475 21.6954 li
30.836 21.4004 li
31.0245 21.0079 li
31.0245 20.2227 li
31.5 20.5176 li
31.5958 20.3213 li
31.5958 20.2227 li
31.6885 20.2227 li
31.8809 20.3213 li
32.0694 20.5176 li
32.1651 21.0079 li
32.1651 21.1055 li
32.0694 21.3038 li
31.9747 21.4004 li
31.8809 21.5967 li
31.6885 21.6954 li
31.5 21.794 li
31.0245 21.8917 li
31.1211 21.9903 li
31.3116 21.9903 li
31.6885 21.8917 li
31.9747 21.6954 li
32.3545 21.1055 li
32.3545 20.5176 li
32.1651 20.3213 li
31.8809 19.9278 li
31.5 20.1241 li
31.4053 20.1241 li
31.2149 20.0264 li
31.0245 20.0264 li
31.0245 19.9278 li
32.544 19.1436 li
32.6387 19.4376 li
32.7334 19.5352 li
32.9229 19.6329 li
33.1133 19.6329 li
33.3975 19.5352 li
33.6827 19.1436 li
33.7774 18.9473 li
33.7774 18.4551 li
33.9668 18.3584 li
33.8721 18.751 li
34.0626 18.9473 li
34.1563 18.9473 li
34.252 18.8487 li
34.3458 18.6514 li
34.4424 18.3584 li
34.4424 17.9649 li
35.1055 17.5733 li
34.9151 17.8672 li
34.7266 18.2598 li
34.6309 18.9473 li
34.7266 18.9473 li
34.9151 18.8487 li
35.2012 18.5538 li
35.3897 18.2598 li
35.4854 17.8672 li
35.4854 17.4747 li
35.6758 17.9649 li
35.3897 18.4551 li
35.3897 19.045 li
35.4854 19.6329 li
35.7696 20.2227 li
35.8643 20.5176 li
35.961 20.2227 li
36.0547 19.8311 li
36.2442 19.1436 li
36.2442 19.045 li
36.5293 19.6329 li
cp
36.9092 20.1241 mo
36.8126 20.3213 li
36.6241 20.3213 li
36.5293 20.2227 li
36.5293 19.9278 li
36.6241 19.7325 li
36.8126 19.9278 li
36.9092 20.1241 li
cp
36.8126 18.9473 mo
37.0987 19.1436 li
37.4766 19.5352 li
37.668 20.1241 li
37.3829 20.0264 li
37.0987 19.8311 li
36.6241 19.3399 li
36.9092 19.4376 li
36.8126 19.3399 li
36.7178 19.1436 li
36.5293 18.9473 li
36.8126 18.9473 li
cp
34.5362 20.5176 mo
34.7266 20.419 li
35.0118 20.419 li
35.0118 20.8126 li
34.6309 21.0079 li
34.252 20.9102 li
33.6827 20.9102 li
33.4922 21.1055 li
33.2081 20.9102 li
33.0186 20.6163 li
33.0186 20.419 li
33.2081 20.2227 li
33.3975 20.2227 li
33.4922 20.3213 li
33.6827 20.3213 li
33.7774 20.2227 li
33.8721 19.9278 li
33.9668 19.7325 li
34.3458 19.7325 li
34.5362 19.8311 li
34.5362 20.0264 li
34.4424 20.2227 li
34.4424 20.3213 li
34.5362 20.5176 li
cp
35.4854 21.4991 mo
35.6758 21.4991 li
35.7696 21.6954 li
35.8643 21.794 li
35.8643 22.0889 li
35.5801 22.0889 li
35.295 21.8917 li
35.0118 21.5967 li
34.9151 21.5967 li
35.1055 22.0889 li
35.2012 22.2842 li
35.1055 22.5782 li
35.2012 22.6758 li
34.9151 22.9717 li
34.5362 22.9717 li
34.3458 22.6758 li
34.3458 22.5782 li
34.252 22.4805 li
34.0626 22.3819 li
33.9668 22.1856 li
34.252 22.1856 li
34.252 22.0889 li
34.0626 21.8917 li
33.8721 21.794 li
33.6827 21.794 li
33.6827 22.2842 li
33.7774 22.4805 li
33.5879 22.5782 li
33.3975 22.4805 li
33.3028 22.3819 li
33.2081 21.8917 li
33.3028 21.5967 li
33.3975 21.4004 li
33.4922 21.3038 li
33.6827 21.2042 li
33.7774 21.1055 li
33.9668 21.0079 li
34.1563 21.1055 li
34.3458 21.2042 li
34.6309 21.2042 li
34.8213 21.1055 li
35.1055 21.1055 li
35.4854 21.4991 li
cp
35.961 22.0889 mo
36.0547 21.9903 li
36.3389 22.3819 li
36.5293 23.3643 li
36.4336 23.8555 li
36.0547 24.0518 li
35.961 23.5606 li
35.961 23.2667 li
35.5801 23.0694 li
35.3897 23.168 li
35.2012 23.168 li
35.1055 23.0694 li
35.295 22.8731 li
35.295 22.1856 li
35.5801 22.2842 li
35.961 22.2842 li
35.961 22.0889 li
cp
35.7696 23.8555 mo
35.6758 23.9532 li
35.5801 24.1485 li
35.3897 24.0518 li
35.295 23.9532 li
35.2012 23.6583 li
35.295 23.4629 li
35.4854 23.2667 li
35.6758 23.3643 li
35.7696 23.5606 li
35.7696 23.8555 li
cp
35.0118 23.4629 mo
35.0118 23.6583 li
34.9151 23.6583 li
34.8213 23.4629 li
34.8213 23.168 li
34.9151 23.168 li
35.0118 23.2667 li
35.0118 23.4629 li
cp
34.6309 23.4629 mo
34.3458 23.4629 li
34.3458 23.0694 li
34.5362 23.168 li
34.6309 23.168 li
34.6309 23.4629 li
cp
32.9229 23.168 mo
32.8292 23.0694 li
32.8292 22.9717 li
32.7334 22.9717 li
32.7334 23.168 li
32.6387 23.3643 li
32.544 23.2667 li
32.544 22.4805 li
32.4483 22.3819 li
32.2588 22.3819 li
32.2588 22.9717 li
32.3545 23.3643 li
32.2588 23.6583 li
32.1651 23.4629 li
31.7852 23.8555 li
31.7852 23.7569 li
31.6885 23.6583 li
31.5 23.7569 li
31.4053 23.9532 li
31.3116 23.9532 li
31.2149 23.8555 li
31.3116 23.6583 li
31.2149 23.5606 li
31.0245 23.6583 li
30.9307 23.6583 li
30.9307 23.4629 li
31.0245 23.2667 li
31.1211 22.9717 li
31.2149 22.7754 li
31.2149 22.6758 li
31.0245 22.5782 li
30.9307 22.6758 li
30.836 22.8731 li
30.7413 23.2667 li
30.5508 23.2667 li
30.4561 23.0694 li
30.3614 22.9717 li
30.2666 22.9717 li
30.4561 22.7754 li
30.6475 22.6758 li
30.6475 22.5782 li
30.5508 22.4805 li
30.5508 22.3819 li
31.0245 22.3819 li
31.1211 22.1856 li
31.2149 22.1856 li
31.4053 22.2842 li
31.9747 21.9903 li
32.4483 21.9903 li
32.6387 22.0889 li
32.7334 22.2842 li
32.7334 22.3819 li
32.9229 22.7754 li
33.0186 23.168 li
32.9229 23.168 li
cp
32.8292 24.1485 mo
32.9239 24.1485 li
32.9239 24.2471 li
32.8292 24.2471 li
32.8292 24.1485 li
cp
32.544 23.7569 mo
32.544 23.6583 li
32.7334 23.6583 li
32.7334 23.7569 li
32.6387 23.8555 li
32.544 23.7569 li
cp
32.1651 24.0518 mo
32.3545 24.0518 li
32.3545 24.1504 li
32.1651 24.1504 li
32.1651 24.0518 li
cp
31.9747 25.5235 mo
31.9747 25.3282 li
32.0694 25.3282 li
32.1651 25.4258 li
32.1651 25.6221 li
31.9747 25.5235 li
cp
31.9747 26.0137 mo
31.9747 25.9161 li
32.1651 25.9161 li
32.1651 26.0137 li
32.0694 26.1133 li
31.9747 26.1133 li
31.9747 26.0137 li
cp
31.4053 24.4434 mo
31.5 24.3458 li
31.5958 24.3458 li
31.6885 24.4434 li
31.6885 24.6407 li
31.5 24.6407 li
31.4053 24.4434 li
cp
30.9307 24.837 mo
30.9307 24.7374 li
31.1211 24.837 li
31.1211 24.9346 li
31.0245 25.0342 li
30.9307 24.9346 li
30.9307 24.837 li
cp
30.7413 23.7569 mo
30.6475 23.8555 li
30.4561 23.6583 li
30.5508 23.5606 li
30.6475 23.6583 li
30.836 23.6583 li
30.836 23.7569 li
30.7413 23.7569 li
cp
30.836 24.0518 mo
31.0245 24.0518 li
31.1211 24.1485 li
31.1211 24.2471 li
31.0245 24.3458 li
30.9307 24.3458 li
30.836 24.2471 li
30.836 24.0518 li
cp
31.5958 25.2295 mo
31.5 25.1299 li
31.5 25.0342 li
31.5958 25.0342 li
31.7852 25.1299 li
31.6885 25.2295 li
31.5958 25.2295 li
cp
31.5958 25.6221 mo
31.6885 25.6221 li
31.6885 25.8184 li
31.5 25.8184 li
31.4053 25.7198 li
31.4053 25.6221 li
31.5958 25.6221 li
cp
33.0186 24.6407 mo
33.2081 24.7374 li
33.3975 25.4258 li
33.3975 25.8184 li
33.3028 26.1133 li
33.1133 26.212 li
32.9229 26.212 li
32.7334 26.0137 li
32.6387 25.8184 li
32.8292 25.7198 li
32.7334 25.6221 li
32.544 25.6221 li
32.4483 25.5235 li
32.3545 25.3282 li
32.544 25.3282 li
32.544 25.2295 li
32.0694 24.9346 li
31.8809 24.7374 li
31.7852 24.4434 li
31.7852 24.3458 li
31.8809 24.1485 li
31.8809 24.0518 li
31.9747 24.0518 li
31.9747 24.2471 li
32.0694 24.3458 li
32.0694 24.5411 li
31.9747 24.6407 li
32.0694 24.7374 li
32.0694 24.6407 li
32.1651 24.6407 li
32.2588 24.5411 li
32.4483 24.7374 li
32.7334 24.837 li
32.9229 25.0342 li
32.9229 25.2295 li
33.0186 25.1299 li
33.0186 24.837 li
32.7334 24.5411 li
32.3545 24.3458 li
32.8292 24.4434 li
33.0186 24.6407 li
cp
33.5879 25.9161 mo
33.5879 25.4258 li
33.6827 25.3282 li
33.6827 25.8184 li
33.5879 26.3086 li
33.3975 26.8008 li
33.2081 27.3877 li
33.3028 26.8975 li
33.4922 26.4073 li
33.5879 25.9161 li
cp
33.7774 26.4073 mo
33.5879 27.0948 li
33.4922 27.4864 li
33.3028 27.7813 li
33.2081 27.7813 li
33.7774 26.4073 li
cp
33.9668 26.8008 mo
33.7774 27.586 li
33.4922 28.3702 li
33.3975 28.3702 li
33.3975 28.0762 li
33.9668 26.8008 li
cp
34.0626 27.586 mo
34.1563 27.1915 li
34.1563 27.586 li
34.0626 28.0762 li
33.6827 28.959 li
33.5879 28.6641 li
33.6827 28.4688 li
33.7774 28.0762 li
34.0626 27.586 li
cp
34.3458 27.7813 mo
34.1563 28.5674 li
33.7774 29.254 li
33.8721 28.8624 li
34.0626 28.4688 li
34.3458 27.7813 li
cp
34.6309 27.878 mo
34.5362 28.8624 li
34.3458 29.3526 li
34.1563 29.7442 li
34.0626 29.7442 li
34.0626 29.6465 li
34.6309 27.878 li
cp
34.9151 28.7637 mo
34.7266 29.3526 li
34.5362 29.8438 li
34.6309 29.9415 li
34.5362 30.0391 li
34.4424 30.0391 li
34.4424 30.1377 li
34.3458 30.1377 li
34.3458 30.0391 li
34.252 29.9415 li
34.3458 29.8438 li
34.3458 29.7442 li
34.4424 29.6465 li
34.5362 29.6465 li
34.6309 29.1553 li
34.9151 28.7637 li
cp
35.2012 28.7637 mo
35.295 28.1739 li
35.3897 28.1739 li
35.2012 29.3526 li
34.8213 30.5303 li
34.6309 30.335 li
35.0118 29.3526 li
35.2012 28.7637 li
cp
35.5801 28.6641 mo
35.4854 29.6465 li
35.4854 30.2364 li
35.295 30.7276 li
35.1055 30.7276 li
35.0118 30.627 li
35.295 30.1377 li
35.3897 29.5489 li
35.5801 28.6641 li
cp
35.7696 28.3702 mo
35.8643 28.5674 li
35.961 29.1553 li
35.961 30.335 li
35.5801 30.5303 li
35.7696 29.5489 li
35.7696 28.4688 li
35.5801 28.1739 li
35.7696 28.3702 li
cp
35.7696 27.7813 mo
35.961 28.0762 li
36.0547 28.3702 li
35.6758 27.9786 li
35.7696 27.7813 li
cp
35.961 27.4864 mo
36.0547 27.4864 li
36.0547 27.7813 li
35.961 27.6827 li
35.961 27.4864 li
cp
36.3389 32.7872 mo
36.0547 32.4932 li
35.961 32.296 li
35.961 32.1006 li
36.0547 32.1006 li
36.1485 32.3946 li
36.3389 32.7872 li
cp
36.6241 32.1993 mo
36.6241 31.9043 li
36.7178 31.709 li
37.0987 31.4131 li
37.1934 31.4131 li
37.1934 31.5127 li
37.0987 31.5127 li
37.0987 31.9043 li
37.003 31.709 li
36.9092 31.8067 li
37.003 32.1993 li
37.0987 32.4932 li
36.9092 32.296 li
36.7178 32.001 li
36.7178 32.1006 li
36.8126 32.5918 li
37.003 33.0831 li
36.5293 32.5918 li
36.2442 32.001 li
36.2442 31.8067 li
36.3389 31.709 li
36.4336 31.8067 li
36.4336 32.1993 li
36.6241 32.1993 li
cp
36.2442 30.7276 mo
36.2442 29.8438 li
36.7178 30.335 li
37.0987 30.8252 li
37.1934 30.627 li
37.0987 30.4317 li
36.8126 30.0391 li
36.6241 29.9415 li
36.5293 29.7442 li
36.6241 29.7442 li
36.8126 29.8438 li
36.8126 29.7442 li
36.6241 29.1553 li
36.3389 28.4688 li
36.5293 28.4688 li
36.5293 28.2725 li
36.6241 28.3702 li
36.6241 28.4688 li
36.7178 28.6641 li
37.003 28.959 li
37.1934 29.254 li
37.2881 29.6465 li
37.4766 30.0391 li
37.4766 30.1377 li
37.668 30.1377 li
37.5723 30.0391 li
37.5723 29.9415 li
37.668 29.8438 li
37.668 30.1377 li
37.7618 30.335 li
37.8575 30.1377 li
37.8575 29.9415 li
38.2374 29.7442 li
37.8575 30.4317 li
37.9512 30.5303 li
38.0469 30.4317 li
38.0469 31.709 li
38.1416 32.8858 li
38.4258 35.4385 li
37.5723 35.2422 li
37.4766 34.3575 li
37.5723 33.377 li
37.668 32.4932 li
37.668 31.5127 li
37.7618 30.9219 li
37.7618 30.4317 li
37.668 30.4317 li
37.4766 30.8252 li
37.3829 32.001 li
37.3829 35.4385 li
37.4766 35.7325 li
37.4766 36.9092 li
37.5723 37.3047 li
37.5723 37.5977 li
37.4766 37.6963 li
37.2881 37.795 li
37.0987 38.1876 li
37.1934 38.5792 li
37.2881 38.5792 li
37.3829 38.3829 li
37.2881 38.2852 li
37.2881 38.0879 li
37.4766 38.0879 li
37.3829 39.3653 li
37.0987 38.4825 li
37.003 37.9903 li
37.003 35.2422 li
37.1934 32.9834 li
37.3829 30.8252 li
37.2881 31.1192 li
37.003 31.3165 li
36.5293 31.5127 li
36.5293 31.4131 li
36.3389 31.5127 li
36.1485 31.709 li
36.2442 30.7276 li
cp
36.2442 28.7637 mo
36.6241 29.5489 li
36.3389 29.5489 li
36.2442 29.3526 li
36.3389 29.0586 li
36.2442 28.7637 li
cp
36.3389 27.2911 mo
36.4336 27.2911 li
36.4336 28.2715 li
36.3389 28.2715 li
36.3389 27.2911 li
cp
37.3829 28.2725 mo
37.3829 29.254 li
37.4766 29.5489 li
37.4766 29.6465 li
37.1934 28.959 li
36.7178 28.2725 li
37.0987 28.4688 li
37.0987 27.4864 li
37.2881 27.6827 li
37.3829 27.878 li
37.2881 28.0762 li
37.2881 28.3702 li
37.3829 28.2725 li
cp
36.5293 27.3877 mo
36.8126 27.4864 li
37.003 26.212 li
37.3829 24.9346 li
37.4766 24.7374 li
37.7618 24.6407 li
37.7618 25.0342 li
37.5723 25.1299 li
37.4766 25.3282 li
37.4766 26.7012 li
37.3829 27.0948 li
37.2881 27.2911 li
37.003 27.2911 li
36.9092 27.4864 li
36.9092 27.6827 li
37.003 28.0762 li
36.6241 28.0762 li
36.6241 28.1739 li
36.5293 27.7813 li
36.5293 27.3877 li
cp
36.5293 26.8008 mo
36.7178 26.8008 li
36.7178 26.9961 li
36.6241 27.0948 li
36.5293 26.8975 li
36.5293 26.8008 li
cp
36.8126 26.4073 mo
36.8126 26.6036 li
36.6241 26.4073 li
36.8126 26.4073 li
cp
36.8126 25.9161 mo
36.9092 26.0137 li
36.9092 26.1133 li
36.8126 26.0137 li
36.8126 25.9161 li
cp
37.003 25.6221 mo
37.003 25.7198 li
36.9092 25.7198 li
37.003 25.6221 li
cp
38.1416 24.4434 mo
38.0469 24.5411 li
37.9512 24.5411 li
37.9512 24.4434 li
38.0469 24.2471 li
38.1416 24.1485 li
38.3311 24.0518 li
38.4258 23.8555 li
38.2374 23.7569 li
38.4258 23.5606 li
38.5206 23.8555 li
38.8057 24.4434 li
38.8057 25.1299 li
38.9004 25.2295 li
38.9004 26.0137 li
38.8057 26.1133 li
38.8057 25.2295 li
38.6163 24.9346 li
38.6163 25.6221 li
38.711 25.9161 li
38.6163 26.3086 li
38.6163 25.8184 li
38.5206 25.6221 li
38.5206 25.9161 li
38.3311 27.0948 li
38.3311 26.4073 li
38.1416 26.9961 li
38.2374 27.2911 li
38.2374 27.4864 li
38.0469 27.9786 li
37.9512 28.4688 li
37.8575 29.0586 li
37.668 29.6465 li
37.5723 29.4502 li
37.5723 29.254 li
37.7618 28.4688 li
37.668 28.2725 li
37.668 28.0762 li
37.5723 27.7813 li
37.5723 27.3877 li
37.7618 26.8008 li
37.9512 26.1133 li
38.0469 25.7198 li
38.0469 25.3282 li
37.9512 25.3282 li
37.668 26.1133 li
37.668 25.7198 li
37.7618 25.2295 li
37.9512 24.837 li
38.2374 24.5411 li
38.1416 24.4434 li
cp
38.2374 23.168 mo
38.2374 23.0694 li
38.3311 22.8731 li
38.4258 22.8731 li
38.5206 22.9717 li
38.6163 23.168 li
38.2374 23.168 li
cp
38.9952 22.2842 mo
39.0918 22.1856 li
39.0918 22.2842 li
38.9952 22.2842 li
cp
37.8575 22.8731 mo
37.9512 22.5782 li
38.2374 22.2842 li
38.6163 21.6954 li
39.376 20.9102 li
39.7549 21.0079 li
40.1338 21.2042 li
40.3243 21.2042 li
40.419 21.3038 li
39.9454 21.6954 li
39.7549 21.9903 li
39.7549 22.2842 li
39.4708 22.8731 li
39.4708 23.168 li
39.5655 23.168 li
39.6592 23.9532 li
39.4708 23.9532 li
39.376 23.8555 li
39.376 23.7569 li
39.5655 23.7569 li
39.5655 23.5606 li
39.4708 23.5606 li
39.2803 23.7569 li
39.2803 24.1485 li
39.6592 24.2471 li
39.8497 24.2471 li
40.0401 24.1485 li
40.1338 24.1485 li
40.2295 24.0518 li
40.1338 24.2471 li
40.2295 24.3458 li
39.5655 24.7374 li
39.2803 25.0342 li
39.1856 25.4258 li
39.0918 25.4258 li
39.0918 24.9346 li
38.9004 24.5411 li
38.9004 23.8555 li
38.9952 23.6583 li
38.8057 23.0694 li
38.711 22.5782 li
39.1856 22.4805 li
39.5655 22.1856 li
39.4708 21.9903 li
39.376 21.794 li
39.0918 21.5967 li
38.9004 21.5967 li
38.711 21.6954 li
38.8057 21.794 li
38.711 21.8917 li
38.8057 21.9903 li
38.711 22.1856 li
38.6163 22.2842 li
38.6163 22.4805 li
38.4258 22.3819 li
38.3311 22.4805 li
38.2374 22.4805 li
38.3311 22.5782 li
38.4258 22.5782 li
38.4258 22.6758 li
37.8575 22.8731 li
cp
39.376 20.419 mo
40.1338 20.419 li
40.3243 20.6163 li
40.2295 21.1055 li
40.0401 20.9102 li
39.7549 20.9102 li
39.4708 20.7139 li
39.4708 20.419 li
39.376 20.5176 li
39.2803 20.6163 li
39.2803 20.7139 li
39.1856 20.7139 li
39.0918 20.5176 li
39.376 20.419 li
cp
40.8936 21.2042 mo
40.9893 21.3038 li
41.1788 21.6954 li
41.1788 21.8917 li
41.2735 21.6954 li
41.2735 21.4991 li
41.4629 21.4004 li
41.5577 21.5967 li
41.5577 21.794 li
41.4629 21.5967 li
41.3672 21.6954 li
41.5577 22.0889 li
41.6524 22.4805 li
41.6524 22.8731 li
41.5577 23.2667 li
41.5577 22.6758 li
41.4629 22.2842 li
41.2735 22.0889 li
41.4629 22.6758 li
41.4629 23.0694 li
41.3672 23.3643 li
41.2735 23.4629 li
41.3672 23.168 li
41.3672 22.8731 li
41.2735 22.5782 li
41.0831 22.3819 li
41.1788 22.6758 li
41.1788 23.3643 li
41.0831 23.5108 li
41.0831 23.5606 li
41.0352 23.586 li
40.9893 23.6583 li
40.9893 24.1485 li
41.1788 24.2471 li
41.4629 24.2471 li
41.4629 24.5411 li
41.1788 24.2471 li
40.8936 24.1485 li
40.7989 24.2471 li
40.6084 24.0518 li
40.7042 23.8555 li
40.8936 23.6583 li
41.0352 23.586 li
41.0831 23.5108 li
41.0831 22.9717 li
40.8936 22.5782 li
40.9893 22.9717 li
40.8936 23.2667 li
40.7989 22.8731 li
40.7989 23.2667 li
40.7042 23.4629 li
40.6084 23.5606 li
40.6084 23.2667 li
40.5127 22.8731 li
40.5127 23.4629 li
40.419 24.0518 li
40.419 24.1485 li
40.5127 24.2471 li
40.7042 24.5411 li
40.6084 24.4434 li
40.419 24.4434 li
40.3243 24.3458 li
40.3243 24.2471 li
40.419 23.8555 li
40.419 23.0694 li
40.5127 22.7754 li
40.5127 22.6758 li
40.3243 22.8731 li
40.3243 22.9717 li
40.1338 23.7569 li
40.0401 23.8555 li
39.8497 23.9532 li
39.8497 23.2667 li
39.9454 22.8731 li
40.1338 22.5782 li
40.0401 22.5782 li
39.9454 22.6758 li
40.1338 22.3819 li
40.3243 22.2842 li
40.5127 22.1856 li
40.5127 22.0889 li
40.0401 22.2842 li
40.1338 22.0889 li
40.2295 21.9903 li
40.5127 21.794 li
40.3243 21.794 li
40.0401 21.8917 li
40.1338 21.794 li
40.2295 21.5967 li
40.6084 21.4991 li
40.7989 21.5967 li
40.9893 21.6954 li
40.9893 21.4991 li
40.7989 21.4004 li
40.6084 21.2042 li
40.5127 21.1055 li
40.8936 21.2042 li
cp
41.4629 24.7374 mo
41.5577 24.7374 li
41.5577 24.836 li
41.4629 24.836 li
41.4629 24.7374 li
cp
41.7471 24.3458 mo
41.7471 23.9532 li
41.9366 23.9532 li
41.9366 24.3458 li
41.8428 24.4434 li
41.7471 24.4434 li
41.7471 24.3458 li
cp
42.0323 24.9346 mo
41.9366 25.0342 li
41.9366 24.837 li
42.0323 24.9346 li
cp
42.6954 26.212 mo
42.6954 26.3086 li
42.6016 26.4073 li
42.5059 26.4073 li
42.5059 26.212 li
42.6016 26.1133 li
42.6954 26.212 li
cp
42.7911 26.7012 mo
42.5059 26.8975 li
42.5059 26.7012 li
42.6954 26.5059 li
42.6954 26.6036 li
42.7911 26.7012 li
cp
42.8868 27.0948 mo
42.7911 27.2911 li
42.4112 27.586 li
42.6016 27.1915 li
42.8868 26.8975 li
42.8868 27.0948 li
cp
42.9805 27.7813 mo
42.8868 27.878 li
42.7911 27.9786 li
42.6954 27.9786 li
42.6954 27.878 li
42.6202 27.8018 li
42.5772 27.8301 li
42.4112 28.1739 li
42.127 28.3702 li
42.2217 28.0762 li
42.5059 27.878 li
42.5772 27.8301 li
42.6016 27.7813 li
42.6202 27.8018 li
42.7911 27.6827 li
42.8868 27.3877 li
42.9805 27.3877 li
42.9805 27.7813 li
cp
43.0762 28.1739 mo
43.0762 28.3702 li
42.8868 28.5674 li
42.5059 28.8624 li
42.5059 28.5674 li
42.6954 28.3702 li
43.0762 28.0762 li
43.0762 28.1739 li
cp
43.171 29.6465 mo
43.0762 29.8438 li
42.6954 30.1377 li
42.2217 30.335 li
41.7471 30.5303 li
41.8428 30.335 li
42.4112 30.0391 li
43.0762 29.3526 li
43.171 29.6465 li
cp
43.2657 30.8252 mo
43.171 30.9219 li
43.171 30.627 li
43.2657 30.627 li
43.2657 30.8252 li
cp
43.3614 32.1006 mo
43.2657 32.1993 li
43.171 32.296 li
43.0762 32.1993 li
43.171 32.1006 li
43.2657 32.001 li
43.3614 32.001 li
43.3614 32.1006 li
cp
43.4551 33.0831 mo
43.2657 33.4737 li
42.8868 33.6719 li
42.8868 33.4737 li
43.0762 33.2793 li
43.2657 33.1807 li
43.4551 33.0831 li
cp
43.171 37.4014 mo
42.3165 38.0879 li
41.4629 38.5792 li
41.5577 38.1876 li
42.0323 37.9903 li
42.4112 37.795 li
43.2657 37.2051 li
43.171 37.4014 li
cp
43.5508 41.1319 mo
43.5508 41.2305 li
43.4551 41.3272 li
43.3614 41.3272 li
43.5508 40.9356 li
43.5508 41.1319 li
cp
42.7911 43.6846 mo
42.6016 43.6846 li
42.4112 43.7823 li
42.3165 43.7823 li
42.127 43.8799 li
42.7911 43.4874 li
42.7911 43.6846 li
cp
42.9805 43.8799 mo
43.171 43.6846 li
43.3614 43.6846 li
42.9805 43.8799 li
cp
43.171 44.2735 mo
42.9805 44.4698 li
42.9805 44.2735 li
43.3614 44.1749 li
43.171 44.2735 li
cp
42.9805 44.8614 mo
42.8868 44.8614 li
42.8868 44.7637 li
43.171 44.7637 li
42.9805 44.8614 li
cp
43.0762 45.7461 mo
43.4551 45.7461 li
43.2657 45.9424 li
42.6954 45.9424 li
43.0762 45.7461 li
cp
43.5508 45.3526 mo
43.6446 45.3526 li
43.6446 45.4502 li
43.4551 45.4502 li
43.5508 45.3526 li
cp
43.7403 45.8438 mo
44.2139 45.8438 li
43.9307 46.0411 li
43.6446 46.0411 li
43.6446 45.9424 li
43.7403 45.8438 li
cp
44.4981 46.0411 mo
44.878 46.0411 li
44.7833 46.2374 li
44.5948 46.2374 li
44.3096 46.1387 li
44.4981 46.0411 li
cp
45.0694 46.2374 mo
45.1641 46.1387 li
45.543 46.2374 li
45.2579 46.334 li
45.0694 46.334 li
45.0694 46.2374 li
cp
45.2579 45.6475 mo
45.3526 45.6475 li
45.2579 45.7461 li
45.2579 45.6475 li
cp
45.7325 45.6475 mo
45.9219 45.6475 li
46.3018 45.4502 li
46.3965 45.5499 li
46.4913 45.5499 li
46.3018 45.8438 li
46.1124 45.9424 li
45.9219 46.0411 li
45.8272 45.9424 li
45.7325 45.8438 li
45.6377 45.8438 li
45.543 45.7461 li
45.7325 45.6475 li
cp
44.0235 46.629 mo
43.6446 46.629 li
43.834 46.4327 li
44.2139 46.5313 li
44.0235 46.629 li
cp
45.4483 47.7081 mo
45.543 47.6104 li
45.7325 47.7081 li
45.4483 47.9053 li
45.0694 47.9053 li
45.4483 47.7081 li
cp
44.9737 46.8252 mo
45.0694 46.7266 li
45.2579 46.7266 li
45.543 46.8252 li
45.4483 46.9229 li
45.2579 46.9229 li
44.9737 46.8252 li
cp
44.878 47.5127 mo
45.0694 47.3155 li
45.1641 47.4151 li
45.3526 47.4151 li
45.0694 47.7081 li
44.878 47.8067 li
44.6885 47.7081 li
44.878 47.5127 li
cp
44.4043 46.7266 mo
44.4981 46.629 li
44.6885 46.629 li
44.5948 46.7266 li
44.4043 46.7266 li
cp
44.0235 47.5127 mo
44.1202 47.4151 li
44.2139 47.3155 li
44.3096 47.2188 li
44.7833 47.3155 li
44.4043 47.6104 li
44.2139 47.7081 li
43.9307 47.6104 li
44.0235 47.5127 li
cp
43.6446 47.2188 mo
43.834 47.1202 li
44.0235 47.1202 li
43.6446 47.4151 li
43.4551 47.5127 li
43.3614 47.5127 li
43.171 47.4151 li
43.6446 47.2188 li
cp
42.9805 47.0215 mo
43.4551 47.0215 li
43.0762 47.3155 li
42.8868 47.4151 li
42.6016 47.3155 li
42.9805 47.0215 li
cp
43.171 46.5313 mo
42.7911 46.5313 li
42.9805 46.4327 li
43.171 46.334 li
43.3614 46.334 li
43.171 46.5313 li
cp
42.127 46.5313 mo
42.0323 46.4327 li
42.3165 46.2374 li
42.4112 46.1387 li
42.6954 46.2374 li
42.6016 46.334 li
42.5059 46.334 li
42.3165 46.5313 li
42.127 46.5313 li
cp
42.127 46.9229 mo
42.5059 46.9229 li
42.3165 47.0215 li
42.127 47.2188 li
41.8428 47.2188 li
42.127 46.9229 li
cp
41.5577 46.8252 mo
41.7471 46.629 li
41.9366 46.7266 li
41.6524 47.0215 li
41.3672 47.1202 li
41.1788 47.1202 li
41.5577 46.8252 li
cp
41.0831 46.629 mo
41.3672 46.629 li
41.1788 46.8252 li
41.0831 46.7266 li
41.0831 46.629 li
cp
41.8428 46.1387 mo
42.0323 46.1387 li
41.8428 46.334 li
41.6524 46.4327 li
41.4629 46.4327 li
41.7471 46.2374 li
41.8428 46.1387 li
cp
41.6524 43.6846 mo
41.7481 43.6846 li
41.7481 43.7833 li
41.6524 43.7833 li
41.6524 43.6846 li
cp
42.6016 44.1749 mo
42.127 44.3711 li
42.0323 44.3711 li
42.0323 44.2735 li
42.4112 44.0762 li
42.7911 43.7823 li
42.7911 44.0762 li
42.6016 44.1749 li
cp
42.6954 44.4698 mo
42.6954 44.5674 li
42.5059 44.6661 li
42.2217 44.7637 li
42.0323 44.8614 li
41.9366 44.8614 li
41.9366 44.7637 li
42.7911 44.2735 li
42.6954 44.4698 li
cp
42.4112 45.1563 mo
42.127 45.2549 li
41.9366 45.3526 li
42.3165 44.96 li
42.7911 44.7637 li
42.7911 44.8614 li
42.4112 45.1563 li
cp
42.6016 45.7461 mo
42.5059 45.8438 li
42.2217 45.9424 li
41.8428 45.9424 li
41.8428 45.8438 li
42.4112 45.8438 li
42.6016 45.7461 li
cp
42.4112 45.5499 mo
42.7911 45.0567 li
42.6016 45.3526 li
42.4112 45.5499 li
cp
42.2217 43.3887 mo
42.7911 43.0948 li
42.6954 43.292 li
42.6016 43.3887 li
42.127 43.4874 li
42.2217 43.3887 li
cp
42.0323 41.0352 mo
42.5059 40.9356 li
42.127 41.2305 li
41.6524 41.2305 li
42.0323 41.0352 li
cp
41.5577 39.4629 mo
41.1788 39.6592 li
41.2735 39.7579 li
41.3672 39.7579 li
41.1788 39.8545 li
40.8936 39.8545 li
41.0831 39.7579 li
41.0831 39.6592 li
40.9893 39.5626 li
41.1788 39.4629 li
41.3672 39.3653 li
41.6524 39.3653 li
41.8428 39.2676 li
43.171 38.4825 li
43.0762 38.8741 li
42.9805 38.9717 li
42.7911 39.0704 li
42.6016 39.0704 li
42.4112 39.3653 li
42.2217 39.4629 li
41.9366 39.5626 li
41.7471 39.6592 li
41.5577 39.4629 li
cp
40.6084 40.2481 mo
40.7042 40.2481 li
41.5577 40.0518 li
41.6524 40.1504 li
41.6524 40.3467 li
41.1788 40.4434 li
40.7042 40.543 li
40.6084 40.3467 li
40.6084 40.2481 li
cp
40.6084 40.0518 mo
40.7989 40.0518 li
40.7042 40.1504 li
40.5127 40.1504 li
40.6084 40.0518 li
cp
40.5127 39.8545 mo
40.6084 39.7579 li
40.7042 39.8545 li
40.5127 39.9551 li
40.3243 39.9551 li
40.5127 39.8545 li
cp
40.419 39.5626 mo
40.419 39.6592 li
40.0401 39.6592 li
40.0401 39.5626 li
40.1338 39.4629 li
40.3243 39.4629 li
40.419 39.5626 li
cp
43.0762 42.0157 mo
43.171 41.918 li
43.2657 41.8194 li
43.4551 41.7208 li
43.4551 41.8194 li
43.3614 41.918 li
43.0762 42.0157 li
cp
43.2657 42.4073 mo
43.0762 42.5059 li
43.0762 42.4073 li
43.171 42.3096 li
43.3614 42.212 li
43.3614 42.3096 li
43.2657 42.4073 li
cp
43.0762 43.292 mo
43.171 43.1934 li
43.3614 43.0948 li
43.3614 43.1934 li
43.2657 43.292 li
43.0762 43.3887 li
43.0762 43.292 li
cp
42.7911 39.5626 mo
42.7911 39.3653 li
42.8868 39.2676 li
42.9805 39.2676 li
42.9805 39.4629 li
42.8868 39.6592 li
42.6016 39.8545 li
42.5059 39.8545 li
42.6954 39.4629 li
42.6954 39.5626 li
42.7911 39.5626 li
cp
42.2217 39.9551 mo
42.127 40.1504 li
41.9366 40.1504 li
41.8428 40.0518 li
41.8428 39.9551 li
42.0323 39.8545 li
42.3165 39.7579 li
42.2217 39.9551 li
cp
42.3165 40.3467 mo
42.5059 40.2481 li
42.8868 40.0518 li
42.8868 40.2481 li
42.3165 40.543 li
42.3165 40.3467 li
cp
42.6954 41.4268 mo
42.6016 41.4268 li
42.4112 41.3272 li
43.0762 41.1319 li
42.9805 41.3272 li
42.8868 41.3272 li
42.6954 41.4268 li
cp
42.4112 41.8194 mo
42.127 41.8194 li
42.127 41.7208 li
42.7911 41.8194 li
42.4112 41.8194 li
cp
42.7911 42.7032 mo
42.7911 42.8985 li
42.6016 42.9971 li
42.127 43.0948 li
42.2217 42.8985 li
42.4112 42.8008 li
42.7911 42.7032 li
cp
42.2217 42.7032 mo
42.2217 42.5059 li
42.7911 42.212 li
42.127 42.212 li
42.127 42.1124 li
42.5059 42.0157 li
42.7911 41.918 li
42.7911 42.4073 li
42.2217 42.7032 li
cp
39.376 37.4014 mo
39.4708 37.3047 li
39.6592 37.2051 li
40.1338 37.2051 li
39.8497 37.4014 li
39.6592 37.4014 li
39.376 37.4991 li
39.376 37.4014 li
cp
39.8497 36.9092 mo
39.8497 37.1065 li
39.376 37.1065 li
39.7549 36.8126 li
39.8497 36.9092 li
cp
39.5655 36.7139 mo
39.376 36.8126 li
39.376 36.7139 li
39.5655 36.6153 li
39.6592 36.6153 li
39.5655 36.5176 li
39.2803 36.5176 li
39.2803 36.42 li
39.376 36.42 li
39.4708 36.3223 li
39.5655 36.2237 li
39.6592 36.42 li
39.7549 36.7139 li
39.5655 36.7139 li
cp
39.2803 36.0274 mo
39.376 36.0274 li
39.4708 36.125 li
39.376 36.2237 li
39.1856 36.2237 li
39.2803 36.0274 li
cp
39.1856 35.8301 mo
39.2803 35.8301 li
39.2803 35.9288 li
39.0918 35.9288 li
39.1856 35.8301 li
cp
39.1856 35.5372 mo
39.1856 35.6338 li
38.9952 35.6338 li
39.1856 35.5372 li
cp
38.8057 37.1065 mo
38.9004 37.1065 li
38.9004 37.2061 li
38.8057 37.2061 li
38.8057 37.1065 li
cp
38.711 37.5977 mo
38.711 37.4014 li
38.8057 37.4014 li
38.9004 37.4991 li
38.9004 37.5977 li
38.711 37.5977 li
cp
38.711 37.795 mo
38.9004 37.795 li
38.9004 37.9903 li
38.8057 37.8916 li
38.711 37.9903 li
38.6163 37.795 li
38.711 37.795 li
cp
38.711 32.9834 mo
38.9004 32.9834 li
39.0918 32.8858 li
39.2803 32.8858 li
39.376 32.9834 li
39.0918 33.1807 li
38.8057 33.2793 li
38.711 33.2793 li
38.8057 33.1807 li
38.711 32.9834 li
cp
38.8057 32.3946 mo
38.9952 32.3946 li
39.1856 32.5918 li
38.8057 32.7872 li
38.711 32.6885 li
38.6163 32.4932 li
38.8057 32.3946 li
cp
42.2217 25.3282 mo
41.9366 25.4258 li
41.9366 25.3282 li
42.2217 25.0342 li
42.3165 25.0342 li
42.4112 25.1299 li
42.2217 25.3282 li
cp
42.2217 26.212 mo
42.2217 26.1133 li
42.3165 25.9161 li
42.5059 25.7198 li
42.5059 25.9161 li
42.2217 26.212 li
cp
42.2217 26.5059 mo
42.4112 26.4073 li
42.4112 26.5059 li
42.2217 26.7012 li
42.2217 26.5059 li
cp
41.8428 26.5059 mo
41.8428 26.3086 li
41.9366 26.212 li
41.9366 26.5059 li
41.8428 26.5059 li
cp
41.6524 27.1915 mo
41.6524 26.9961 li
41.8428 26.8008 li
41.8428 26.9961 li
41.6524 27.1915 li
cp
41.9366 27.9786 mo
41.7471 28.0762 li
41.8428 27.878 li
41.9366 27.7813 li
42.0323 27.7813 li
41.9366 27.9786 li
cp
42.2217 28.959 mo
42.0323 29.1553 li
41.5577 29.4502 li
41.6524 29.254 li
41.8428 29.0586 li
42.2217 28.7637 li
42.2217 28.959 li
cp
42.127 29.5489 mo
42.4112 29.3526 li
42.7911 29.0586 li
43.0762 28.7637 li
43.0762 29.1553 li
42.7911 29.3526 li
42.6954 29.254 li
42.6016 29.4502 li
42.3165 29.6465 li
41.8428 29.9415 li
42.127 29.5489 li
cp
41.4629 30.1377 mo
41.4629 29.9415 li
41.5577 29.9415 li
41.8428 29.7442 li
41.7471 29.8438 li
41.7471 30.0391 li
41.4629 30.1377 li
cp
43.171 34.0645 mo
42.7911 34.3575 li
42.8868 34.0645 li
42.9805 33.9659 li
43.2657 33.7686 li
43.3614 33.6719 li
43.3614 33.8672 li
43.171 34.0645 li
cp
43.2657 34.4561 mo
43.0762 34.6534 li
42.6954 34.9483 li
42.7911 34.751 li
42.9805 34.5547 li
43.3614 34.2598 li
43.2657 34.4561 li
cp
42.8868 35.4385 mo
42.5059 35.7325 li
42.5059 35.5372 li
42.6016 35.4385 li
42.7911 35.2422 li
43.0762 35.045 li
43.3614 34.8497 li
43.3614 35.045 li
42.8868 35.4385 li
cp
43.2657 36.0274 mo
43.2657 36.125 li
43.171 36.125 li
43.2657 36.0274 li
cp
43.171 35.8301 mo
42.8868 36.0274 li
42.2217 36.42 li
42.3165 36.3223 li
42.4112 36.125 li
42.6016 35.9288 li
43.171 35.5372 li
43.2657 35.5372 li
43.171 35.8301 li
cp
42.3165 37.3047 mo
42.6954 37.0098 li
43.171 36.5176 li
43.171 36.8126 li
42.5059 37.4014 li
42.127 37.6963 li
41.7471 37.8916 li
41.9366 37.4014 li
42.3165 37.3047 li
cp
42.127 36.9092 mo
42.2217 36.7139 li
42.5059 36.5176 li
42.8868 36.3223 li
43.0762 36.2237 li
42.6016 36.7139 li
42.0323 37.1065 li
42.127 36.9092 li
cp
40.8936 36.125 mo
42.0323 35.7325 li
42.0323 35.8301 li
41.7471 36.0274 li
41.4629 36.125 li
40.8936 36.2237 li
40.8936 36.125 li
cp
41.3672 35.5372 mo
42.127 35.2422 li
42.127 35.5372 li
40.7989 35.9288 li
40.7042 35.9288 li
40.6084 35.8301 li
41.3672 35.5372 li
cp
41.2735 35.1426 mo
42.2217 34.751 li
42.127 34.9483 li
41.2735 35.2422 li
40.3243 35.5372 li
40.2295 35.4385 li
41.2735 35.1426 li
cp
40.9893 34.8497 mo
42.2217 34.3575 li
42.127 34.4561 li
41.9366 34.5547 li
41.5577 34.751 li
40.0401 35.2422 li
39.7549 35.1426 li
40.9893 34.8497 li
cp
38.9004 34.8497 mo
38.9004 34.3575 li
38.9952 34.2598 li
39.376 34.2598 li
39.7549 34.1612 li
40.5127 33.8672 li
40.5127 34.1612 li
39.7549 34.3575 li
38.9952 34.6534 li
38.9952 34.751 li
39.0918 34.8497 li
39.8497 34.6534 li
40.6084 34.4561 li
40.7042 34.5547 li
40.3243 34.6534 li
39.9454 34.8497 li
39.5655 34.9483 li
39.0918 34.8497 li
38.9004 34.8497 li
cp
38.9004 35.045 mo
38.9952 35.045 li
39.0918 35.1426 li
38.9952 35.2422 li
38.9952 35.3399 li
38.9004 35.3399 li
38.9004 35.045 li
cp
38.8057 33.5733 mo
38.8057 33.377 li
39.1856 33.377 li
39.376 33.2793 li
39.5655 33.4737 li
38.8057 33.5733 li
cp
40.7042 31.4131 mo
41.4629 31.1192 li
41.3672 31.3165 li
41.2735 31.4131 li
40.9893 31.6094 li
40.2295 31.8067 li
40.0401 31.709 li
40.7042 31.4131 li
cp
40.5127 30.335 mo
40.3243 30.627 li
40.1338 30.7276 li
40.2295 30.5303 li
40.3243 30.4317 li
40.5127 30.335 li
cp
40.7042 29.9415 mo
40.6084 30.0391 li
40.419 30.1377 li
40.5127 29.7442 li
40.7042 29.5489 li
40.7042 29.9415 li
cp
40.9893 30.7276 mo
40.8936 30.9219 li
40.7989 31.0206 li
40.3243 31.2168 li
40.419 31.0206 li
40.6084 30.8252 li
40.9893 30.7276 li
cp
41.1788 28.4688 mo
40.9893 28.6641 li
41.0831 28.3702 li
41.1788 28.2725 li
41.2735 28.2725 li
41.1788 28.4688 li
cp
41.4629 30.7276 mo
41.3672 30.7276 li
41.0831 30.8252 li
41.0831 30.7276 li
41.1788 30.627 li
41.2735 30.7276 li
41.3672 30.627 li
41.2735 30.627 li
41.2735 30.5303 li
41.3672 30.5303 li
41.4629 30.4317 li
41.6524 30.4317 li
41.6524 30.5303 li
41.5577 30.7276 li
41.4629 30.627 li
41.4629 30.7276 li
cp
42.4112 31.3165 mo
42.3165 31.4131 li
42.2217 31.5127 li
40.8936 32.1006 li
40.7042 32.001 li
40.8936 31.9043 li
40.9893 31.9043 li
41.0831 31.8067 li
41.8428 31.5127 li
42.5059 31.1192 li
42.6954 31.2168 li
42.5059 31.2168 li
42.4112 31.3165 li
cp
41.9366 32.3946 mo
41.5577 32.5918 li
41.5577 32.4932 li
42.5059 31.709 li
42.4112 31.9043 li
42.3165 32.1993 li
41.9366 32.3946 li
cp
41.1788 32.296 mo
41.7471 31.9043 li
41.4629 32.1993 li
41.2735 32.296 li
41.1788 32.296 li
cp
39.7549 32.8858 mo
39.6592 32.7872 li
40.1338 32.5918 li
40.6084 32.4932 li
40.7042 32.5918 li
40.2295 32.7872 li
39.7549 32.8858 li
cp
39.9454 33.1807 mo
40.419 32.9834 li
40.8936 32.6885 li
41.0831 32.7872 li
41.1788 32.7872 li
40.6084 33.0831 li
39.9454 33.2793 li
39.9454 33.1807 li
cp
41.9366 33.377 mo
41.7471 33.4737 li
41.1788 33.8672 li
40.7989 33.9659 li
40.8936 33.8672 li
41.0831 33.6719 li
41.4629 33.5733 li
41.9366 33.377 li
cp
41.9366 33.0831 mo
41.7471 33.1807 li
41.2735 33.2793 li
40.8936 33.377 li
40.7989 33.5733 li
40.5127 33.5733 li
40.3243 33.6719 li
40.1338 33.6719 li
40.1338 33.5733 li
40.8936 33.2793 li
41.6524 32.8858 li
42.0323 32.8858 li
41.9366 32.6885 li
42.0323 32.5918 li
42.2217 32.4932 li
42.2217 32.7872 li
42.127 32.9834 li
41.9366 33.0831 li
cp
41.4629 29.3526 mo
41.4629 29.4502 li
41.3672 29.6465 li
41.0831 29.7442 li
41.1788 29.4502 li
41.2735 29.3526 li
41.4629 29.3526 li
cp
41.8428 28.4688 mo
41.8428 28.5674 li
41.7471 28.6641 li
41.4629 28.8624 li
41.5577 28.5674 li
41.8428 28.4688 li
cp
41.5577 27.6827 mo
41.3672 27.878 li
41.3672 27.7813 li
41.4629 27.6827 li
41.5577 27.4864 li
41.6524 27.4864 li
41.5577 27.6827 li
cp
40.7989 29.3526 mo
40.8936 29.0586 li
40.8936 28.959 li
40.9893 28.8624 li
40.9893 29.1553 li
40.7989 29.3526 li
cp
40.9893 30.2364 mo
41.2735 30.0391 li
41.1788 30.2364 li
41.0831 30.335 li
40.7989 30.4317 li
40.7989 30.2364 li
40.9893 30.2364 li
cp
39.6592 32.296 mo
40.0401 32.1993 li
40.2295 32.1993 li
39.7549 32.3946 li
39.5655 32.4932 li
39.2803 32.3946 li
39.6592 32.296 li
cp
39.376 31.5127 mo
39.4708 31.3165 li
39.6592 31.2168 li
39.9454 31.0206 li
39.6592 31.3165 li
39.376 31.5127 li
cp
38.9004 31.6094 mo
39.0918 31.5127 li
38.9952 31.6094 li
38.9004 31.6094 li
cp
39.0918 31.8067 mo
39.2803 31.8067 li
39.4708 31.709 li
39.5655 31.5127 li
39.6592 31.5127 li
39.6592 31.709 li
39.5655 31.709 li
39.7549 31.9043 li
39.2803 32.1006 li
39.0918 32.1006 li
38.9004 31.9043 li
39.0918 31.8067 li
cp
38.9004 32.1006 mo
38.8057 32.1993 li
38.6163 32.1993 li
38.6163 31.9043 li
38.8057 31.9043 li
38.9004 32.1006 li
cp
38.9004 36.7139 mo
38.9004 36.9092 li
38.8057 36.9092 li
38.8057 36.8126 li
38.9004 36.7139 li
cp
38.8057 34.0645 mo
38.8057 33.7686 li
39.376 33.7686 li
39.7549 33.6719 li
39.8497 33.7686 li
39.376 33.9659 li
38.9004 34.0645 li
38.8057 34.0645 li
cp
43.0762 32.6885 mo
43.3614 32.4932 li
43.3614 32.6885 li
43.2657 32.7872 li
42.9805 33.0831 li
42.9805 32.8858 li
43.0762 32.6885 li
cp
42.9805 30.335 mo
42.6954 30.5303 li
42.127 31.0206 li
41.5577 31.3165 li
41.6524 31.1192 li
41.7471 31.0206 li
42.0323 30.8252 li
42.7911 30.4317 li
43.171 30.0391 li
42.9805 30.335 li
cp
43.2657 31.6094 mo
43.2657 31.8067 li
43.171 31.8067 li
43.171 31.709 li
43.2657 31.6094 li
cp
43.171 31.3165 mo
43.171 31.1192 li
43.2657 31.1192 li
43.2657 31.2168 li
43.171 31.3165 li
cp
42.2217 26.9961 mo
42.2217 27.1915 li
42.127 27.2911 li
42.127 27.0948 li
42.2217 26.9961 li
cp
42.127 25.7198 mo
41.9366 25.9161 li
41.9366 25.8184 li
42.127 25.7198 li
42.3165 25.5235 li
42.4112 25.4258 li
42.4112 25.5235 li
42.3165 25.6221 li
42.127 25.7198 li
cp
40.8936 24.5411 mo
40.8936 24.3458 li
41.0831 24.3458 li
41.0831 24.4434 li
40.9893 24.5411 li
40.8936 24.5411 li
cp
40.9893 24.6407 mo
41.2735 24.6407 li
41.1788 24.7374 li
40.7989 24.7374 li
40.8936 24.6407 li
40.9893 24.6407 li
cp
38.6163 23.2667 mo
38.8057 23.5606 li
38.8057 23.7569 li
38.711 23.8555 li
38.711 23.5606 li
38.6163 23.2667 li
cp
38.5206 27.2911 mo
38.5206 26.8975 li
38.6163 27.3877 li
38.5206 27.2911 li
cp
38.4258 30.0391 mo
38.6163 29.7442 li
39.5655 29.254 li
39.6592 29.1553 li
39.6592 29.0586 li
39.376 29.0586 li
39.376 28.4688 li
39.4708 27.9786 li
39.5655 27.586 li
39.8497 27.0948 li
39.8497 27.4864 li
39.9454 27.9786 li
40.0401 27.878 li
40.1338 27.586 li
40.1338 27.2911 li
40.0401 26.7012 li
40.1338 26.212 li
40.2295 25.9161 li
40.419 25.7198 li
40.3243 25.6221 li
40.1338 25.7198 li
39.8497 26.3086 li
39.7549 26.7012 li
39.5655 27.0948 li
39.376 27.2911 li
39.1856 27.6827 li
39.0918 28.3702 li
38.9004 28.959 li
38.711 29.3526 li
38.5206 29.5489 li
37.8575 29.5489 li
37.9512 29.4502 li
38.0469 29.254 li
38.0469 28.8624 li
38.1416 28.3702 li
38.1416 28.2725 li
38.2374 28.0762 li
38.3311 27.6827 li
38.3311 27.3877 li
38.4258 27.6827 li
38.2374 28.4688 li
38.4258 28.2725 li
38.5206 28.0762 li
38.711 27.0948 li
38.8057 26.5059 li
38.8057 26.8975 li
38.9004 27.2911 li
38.9952 26.9961 li
39.0918 26.8008 li
39.0918 26.5059 li
39.1856 26.212 li
40.0401 24.9346 li
39.0918 25.9161 li
39.0918 25.7198 li
39.2803 25.6221 li
39.376 25.5235 li
39.4708 25.3282 li
39.5655 25.2295 li
39.9454 24.837 li
40.3243 24.5411 li
40.419 24.6407 li
40.5127 24.6407 li
40.5127 24.7374 li
40.3243 24.7374 li
40.419 24.837 li
40.6084 24.9346 li
40.9893 25.0342 li
41.3672 25.0342 li
41.5577 25.1299 li
41.6524 25.2295 li
41.4629 25.2295 li
41.2735 25.1299 li
40.6084 25.1299 li
40.419 25.3282 li
40.9893 25.3282 li
41.2735 25.4258 li
41.5577 25.6221 li
41.3672 25.5235 li
41.1788 25.4258 li
40.6084 25.4258 li
40.7042 25.6221 li
40.8936 25.6221 li
41.1788 25.7198 li
41.2735 25.9161 li
41.3672 26.212 li
41.3672 26.8008 li
41.1788 27.4864 li
40.8936 28.1739 li
40.6084 28.7637 li
40.419 29.4502 li
40.1338 30.0391 li
39.6592 30.627 li
39.1856 31.1192 li
38.6163 31.4131 li
38.5206 31.3165 li
38.5206 30.627 li
38.4258 30.0391 li
cp
38.9004 38.6778 mo
38.6163 38.6778 li
38.711 38.4825 li
38.9004 38.4825 li
38.9004 38.6778 li
cp
38.4258 43.0948 mo
38.711 43.0948 li
38.711 43.1934 li
38.4258 43.1934 li
38.2374 43.292 li
38.2374 43.0948 li
38.4258 43.0948 li
cp
38.8057 42.7032 mo
38.6163 42.8985 li
38.2374 42.9971 li
38.2374 42.7032 li
38.8057 42.7032 li
cp
38.5206 42.4073 mo
38.711 42.4073 li
38.6163 42.5059 li
38.4258 42.6036 li
38.3311 42.6036 li
38.3311 42.4073 li
38.5206 42.4073 li
cp
38.4258 42.0157 mo
38.8057 42.0157 li
38.8057 42.1124 li
38.3311 42.212 li
38.3311 42.1124 li
38.4258 42.0157 li
cp
38.6163 41.6221 mo
38.8057 41.6221 li
38.8057 41.7208 li
38.6163 41.8194 li
38.3311 41.918 li
38.3311 41.6221 li
38.6163 41.6221 li
cp
38.6163 41.2305 mo
38.9004 41.2305 li
38.8057 41.4268 li
38.4258 41.4268 li
38.4258 41.2305 li
38.6163 41.2305 li
cp
38.5206 40.837 mo
38.9004 40.837 li
38.711 41.0352 li
38.5206 41.0352 li
38.4258 41.1319 li
38.4258 40.9356 li
38.5206 40.837 li
cp
38.5206 40.543 mo
38.6163 40.4434 li
38.8057 40.4434 li
38.8057 40.543 li
38.711 40.6397 li
38.4258 40.6397 li
38.5206 40.543 li
cp
38.8057 40.0518 mo
38.9004 40.1504 li
38.8057 40.2481 li
38.4258 40.2481 li
38.5206 40.1504 li
38.5206 40.0518 li
38.8057 40.0518 li
cp
38.711 39.7579 mo
38.9004 39.6592 li
38.8057 39.8545 li
38.5206 39.8545 li
38.5206 39.7579 li
38.711 39.7579 li
cp
38.6163 39.0704 mo
38.6163 38.8741 li
38.9004 38.8741 li
38.9004 38.9717 li
38.8057 39.0704 li
38.6163 39.0704 li
cp
38.5206 39.2676 mo
38.9004 39.2676 li
38.9004 39.4629 li
38.5206 39.4629 li
38.5206 39.2676 li
cp
38.4258 43.585 mo
38.2374 43.6846 li
38.0469 43.585 li
38.1416 43.4874 li
38.711 43.4874 li
38.4258 43.585 li
cp
39.6592 46.4327 mo
39.4708 46.334 li
39.4073 46.2696 li
38.9004 45.9424 li
39.0918 45.9424 li
39.4073 46.2696 li
39.6592 46.4327 li
cp
39.6592 46.2374 mo
39.376 45.8438 li
39.5655 45.9424 li
39.7549 46.1387 li
39.6592 46.2374 li
cp
38.711 45.7461 mo
38.0469 45.3526 li
38.2374 45.3526 li
38.4258 45.4502 li
38.711 45.7461 li
cp
38.6163 45.4502 mo
38.5206 45.3526 li
38.6163 45.3526 li
38.711 45.4502 li
38.6163 45.4502 li
cp
38.6163 44.8614 mo
38.711 44.96 li
38.6163 44.96 li
38.3311 45.0567 li
38.0469 45.0567 li
37.9512 44.96 li
37.9512 44.8614 li
38.6163 44.8614 li
cp
38.0469 44.4698 mo
38.711 44.4698 li
38.711 44.5674 li
38.1416 44.5674 li
38.0469 44.6661 li
38.0469 44.4698 li
cp
38.711 44.1749 mo
38.2374 44.1749 li
38.1416 44.2735 li
38.0469 44.1749 li
38.0469 44.0762 li
38.4258 44.0762 li
38.711 44.1749 li
cp
38.4258 43.9786 mo
38.1416 43.9786 li
38.0469 43.7823 li
38.711 43.7823 li
38.711 43.9786 li
38.4258 43.9786 li
cp
38.9952 46.629 mo
38.9952 46.7266 li
38.6163 46.5313 li
38.4258 46.4327 li
38.2374 46.2374 li
37.668 45.8438 li
37.668 45.6475 li
37.7618 45.6475 li
38.3311 46.1387 li
38.9952 46.629 li
cp
39.6592 47.1202 mo
39.6592 47.2188 li
39.4708 47.1202 li
39.2803 47.0215 li
39.2803 46.9229 li
39.5655 47.0215 li
39.6592 47.1202 li
cp
39.6592 46.7266 mo
39.6592 46.8252 li
37.7618 45.4502 li
37.7618 45.3526 li
37.8575 45.3526 li
38.8057 46.1387 li
39.6592 46.7266 li
cp
40.0401 37.8916 mo
39.9454 37.9903 li
39.6592 37.9903 li
40.0401 37.8916 li
cp
39.9454 37.6963 mo
39.7549 37.795 li
39.5655 37.795 li
39.5655 37.6963 li
39.6592 37.5977 li
40.5127 37.5977 li
40.5127 37.4991 li
40.6084 37.2051 li
40.3243 37.2051 li
40.2295 37.1065 li
39.9454 36.7139 li
39.7549 36.3223 li
39.5655 36.0274 li
39.1856 35.3399 li
39.5655 35.5372 li
39.5655 35.7325 li
40.3243 36.42 li
40.7042 36.6153 li
41.1788 36.6153 li
41.5577 36.42 li
41.9366 36.42 li
41.8428 37.0098 li
41.6524 37.5977 li
41.1788 38.8741 li
42.3165 38.4825 li
42.7911 38.0879 li
43.171 37.6963 li
43.171 37.9903 li
43.0762 38.1876 li
42.7911 38.3829 li
42.4112 38.5792 li
42.127 38.8741 li
40.8936 39.4629 li
40.6084 39.3653 li
40.5127 39.169 li
40.3243 38.1876 li
40.0401 37.6963 li
39.9454 37.6963 li
cp
41.8428 42.1124 mo
41.7471 42.1124 li
41.8428 42.0157 li
41.8428 42.1124 li
cp
41.0831 46.334 mo
41.0831 46.2374 li
41.1788 46.2374 li
41.2735 46.334 li
41.0831 46.334 li
cp
45.9219 46.9229 mo
46.0176 47.0215 li
45.8272 47.2188 li
45.6377 47.2188 li
45.543 47.1202 li
45.7325 46.9229 li
45.9219 46.9229 li
cp
46.586 47.8067 mo
46.4913 48.004 li
45.9219 48.004 li
46.0176 47.9053 li
46.2071 47.8067 li
46.586 47.8067 li
cp
46.3018 47.2188 mo
46.586 47.2188 li
46.3018 47.4151 li
46.2071 47.5127 li
46.0176 47.4151 li
46.3018 47.2188 li
cp
46.4913 46.8252 mo
46.3018 46.8252 li
46.2071 46.7266 li
46.3018 46.629 li
46.7764 46.629 li
46.4913 46.8252 li
cp
47.3448 47.4151 mo
47.251 47.5127 li
46.6807 47.5127 li
46.9649 47.4151 li
47.3448 47.4151 li
cp
47.1553 47.0215 mo
46.7764 47.0215 li
47.0606 46.8252 li
47.251 46.7266 li
47.4395 46.8252 li
47.1553 47.0215 li
cp
49.3379 47.0215 mo
49.2432 47.0215 li
49.0538 46.8252 li
49.3379 47.0215 li
cp
49.0538 47.7081 mo
48.8643 47.6104 li
48.959 47.5127 li
49.1475 47.4151 li
49.2432 47.5127 li
49.2432 47.6104 li
49.1475 47.6104 li
49.0538 47.7081 li
cp
48.7686 48.1006 mo
49.1475 48.1006 li
48.959 48.2979 li
48.7686 48.2979 li
48.6749 48.1993 li
48.7686 48.1006 li
cp
48.3897 47.8067 mo
48.4854 47.8067 li
48.5782 47.9053 li
48.6749 47.9053 li
48.5782 48.004 li
48.4854 48.004 li
48.293 47.9053 li
48.3897 47.8067 li
cp
48.6749 46.7266 mo
48.6749 46.629 li
48.7686 46.7266 li
48.6749 46.7266 li
cp
48.293 47.2188 mo
48.4854 47.1202 li
48.7686 47.2188 li
48.4854 47.4151 li
48.3897 47.4151 li
48.1993 47.3155 li
48.293 47.2188 li
cp
48.0108 47.7081 mo
47.6299 47.7081 li
47.7256 47.6104 li
47.8194 47.6104 li
48.0108 47.7081 li
cp
47.9151 47.2188 mo
47.5362 47.2188 li
47.6299 47.0215 li
47.8194 46.9229 li
48.1993 47.0215 li
47.9151 47.2188 li
cp
49.5264 47.7081 mo
49.7178 47.8067 li
49.6231 47.9053 li
49.5264 47.9053 li
49.4336 48.004 li
49.3379 48.004 li
49.2432 47.9053 li
49.4336 47.8067 li
49.5264 47.7081 li
cp
49.6231 47.2188 mo
49.7178 47.1202 li
49.8126 47.2188 li
49.7178 47.3155 li
49.6231 47.3155 li
49.6231 47.2188 li
cp
50.001 47.4151 mo
50.2862 47.4151 li
50.0967 47.5127 li
50.001 47.6104 li
49.9073 47.6104 li
50.001 47.4151 li
cp
50.4766 48.1006 mo
50.7608 48.1006 li
50.5723 48.1993 li
50.4766 48.2979 li
50.3819 48.2979 li
50.4766 48.1006 li
cp
50.793 47.6436 mo
50.8555 47.6104 li
50.9512 47.6104 li
50.793 47.6436 li
50.667 47.7081 li
50.4766 47.7081 li
50.793 47.6436 li
cp
51.2354 47.6104 mo
51.4249 47.6104 li
51.5206 47.7081 li
51.5206 47.8067 li
51.3301 47.8067 li
51.2354 47.9053 li
51.046 47.8067 li
51.2354 47.6104 li
cp
51.6153 47.9053 mo
51.709 47.8067 li
51.8047 47.9053 li
51.709 48.004 li
51.5206 48.004 li
51.6153 47.9053 li
cp
51.6153 47.3155 mo
51.709 47.4151 li
51.6153 47.4151 li
51.6153 47.3155 li
cp
29.6026 48.004 mo
29.6983 47.9053 li
30.0772 47.9053 li
30.1719 47.8067 li
30.2666 47.9053 li
29.5079 48.1006 li
29.6026 48.004 li
cp
29.6983 47.5127 mo
30.0772 47.5127 li
29.6983 47.6104 li
29.4122 47.6104 li
29.6983 47.5127 li
cp
29.2237 47.3155 mo
29.128 47.2188 li
29.4122 47.1202 li
29.6983 47.1202 li
29.6983 47.2188 li
29.6026 47.2188 li
29.4122 47.3155 li
29.2237 47.3155 li
cp
28.9395 46.8252 mo
29.3174 46.8252 li
29.128 46.9229 li
29.0333 46.9229 li
28.9395 46.8252 li
cp
28.5586 48.2979 mo
28.7481 48.1993 li
28.7481 48.3956 li
28.4639 48.2979 li
28.5586 48.2979 li
cp
27.7989 48.3956 mo
27.9893 48.2979 li
28.2745 48.2979 li
27.7989 48.3956 li
cp
28.5586 47.9053 mo
28.6543 47.9053 li
28.6543 48.1006 li
28.3692 48.004 li
28.5586 47.9053 li
cp
27.8936 2.25879 mo
28.1797 2.0625 li
28.4639 1.76856 li
28.2745 2.16114 li
27.9893 2.55274 li
27.7051 2.74903 li
27.3243 2.84864 li
27.8936 2.25879 li
cp
29.4122 1.76856 mo
29.792 2.0625 li
30.4561 2.74903 li
29.9805 2.65235 li
29.5079 2.35743 li
29.128 2.0625 li
28.9395 1.66895 li
29.4122 1.76856 li
cp
29.128 1.27735 mo
29.3174 1.08106 li
29.792 0.981446 li
30.2666 0.884766 li
30.7413 0.688477 li
30.5508 1.08106 li
30.1719 1.27735 li
29.6026 1.27735 li
29.0333 1.47364 li
29.128 1.27735 li
cp
36.1485 2.16114 mo
36.3389 1.86719 li
36.6241 1.57129 li
36.9092 1.37598 li
38.1416 0.884766 li
37.9512 1.27735 li
37.7618 1.57129 li
37.4766 1.76856 li
37.1934 1.86719 li
36.5293 2.16114 li
36.2442 2.35743 li
35.961 2.55274 li
36.1485 2.16114 li
cp
38.6163 3.92774 mo
38.8057 2.74903 li
38.9004 3.24024 li
38.9952 3.83008 li
38.9004 4.41895 li
38.711 5.10645 li
38.5206 4.51661 li
38.6163 3.92774 li
cp
35.0118 4.32032 mo
35.5801 4.61426 li
36.5293 5.4004 li
35.8643 5.30079 li
35.3897 5.00782 li
34.9151 4.61426 li
34.5362 4.22168 li
35.0118 4.32032 li
cp
47.9151 2.45508 mo
47.7256 1.9629 li
47.8194 1.37598 li
47.8194 1.47364 li
48.0108 1.86719 li
48.293 3.04395 li
48.1993 3.43555 li
48.1045 2.94532 li
47.9151 2.45508 li
cp
51.5206 5.69336 mo
51.5206 5.10645 li
51.6153 4.61426 li
51.8047 5.10645 li
51.8047 5.69336 li
51.709 6.28321 li
51.5206 6.77344 li
51.5206 5.69336 li
cp
49.9073 15.1182 mo
50.0967 14.9219 li
50.8555 14.5293 li
52.2793 14.5293 li
51.8995 14.8243 li
51.4249 15.0206 li
51.4249 15.1182 li
51.3301 15.0206 li
51.046 15.2178 li
50.2862 15.2178 li
49.8126 15.3145 li
49.9073 15.1182 li
cp
52.2793 16.3936 mo
52.4698 16.4922 li
52.754 16.6885 li
52.375 16.6885 li
51.9942 16.5918 li
51.3301 16.1006 li
52.2793 16.3936 li
cp
51.8047 17.376 mo
52.2793 17.6709 li
52.6573 18.0626 li
52.9424 18.5538 li
52.4698 18.3584 li
51.9942 17.9649 li
51.6153 17.5733 li
51.3301 17.1807 li
51.8047 17.376 li
cp
51.5206 20.5176 mo
51.5206 21.0079 li
51.3301 21.8917 li
51.1407 22.0889 li
51.1407 22.1856 li
51.046 22.1856 li
51.046 21.1055 li
51.1407 20.5176 li
51.3301 20.0264 li
51.5206 20.5176 li
cp
51.9942 19.4376 mo
52.2793 20.2227 li
52.375 20.9102 li
52.1836 20.6163 li
51.9942 20.2227 li
51.9942 19.4376 li
cp
50.7608 19.045 mo
50.6895 19.045 li
50.667 19.0723 li
50.667 19.2413 li
50.5723 19.4376 li
50.4766 19.7325 li
50.3819 19.9278 li
49.9073 20.5176 li
49.9073 20.0264 li
50.1934 19.6329 li
50.667 19.0723 li
50.667 19.045 li
50.6895 19.045 li
50.8555 18.8487 li
50.7608 19.045 li
cp
48.1993 19.7325 mo
48.293 20.0264 li
48.3897 20.5176 li
48.1993 21.5967 li
48.0108 21.4004 li
47.9151 21.2042 li
47.9151 20.6163 li
48.0108 20.1241 li
48.1045 19.5352 li
48.1993 19.7325 li
cp
44.0235 16.1006 mo
44.6885 16.1983 li
44.9737 16.2959 li
45.2579 16.4922 li
44.5948 16.4922 li
44.2139 16.3936 li
43.9307 16.1983 li
44.0235 16.1006 li
cp
36.4336 17.4747 mo
36.7178 17.4747 li
36.9092 17.5733 li
36.9092 17.4747 li
37.2881 17.5733 li
36.9092 17.6709 li
36.6241 17.7686 li
36.2442 17.7686 li
35.961 17.5733 li
36.4336 17.4747 li
cp
37.3829 18.1612 mo
37.668 18.0626 li
38.0469 18.1612 li
37.9512 18.2598 li
37.9512 18.3584 li
37.668 18.3584 li
37.2881 18.4551 li
36.8126 18.3584 li
37.3829 18.1612 li
cp
26.9473 35.3409 mo
26.9473 35.1426 li
27.0411 35.045 li
27.2305 35.045 li
27.3243 35.2422 li
27.2305 35.4385 li
27.0411 35.6338 li
27.0411 36.2237 li
27.2305 36.3223 li
27.1368 36.42 li
27.0411 36.42 li
26.9473 36.3223 li
26.9473 36.3213 li
26.9473 35.3409 li
cp
26.9473 26.8946 mo
26.9473 26.8975 li
27.0411 27.7813 li
27.0411 28.8624 li
26.9473 28.959 li
26.9473 29.7471 li
26.9473 26.8946 li
cp
26.9473 23.7569 mo
27.2305 23.7569 li
27.2305 23.8555 li
27.1368 24.0518 li
26.9473 24.1485 li
26.9473 24.1495 li
26.9473 23.7569 li
cp
26.9473 17.1553 mo
27.2305 17.6709 li
26.9473 18.2598 li
26.9473 17.1553 li
cp
26.9473 0.00292969 mo
26.9473 0 li
27.1368 0.295899 li
27.2305 0.688477 li
27.42 1.08106 li
27.5157 1.66895 li
27.42 2.16114 li
27.3243 2.55274 li
27.6104 2.25879 li
27.8936 1.9629 li
28.2745 1.76856 li
28.6543 1.66895 li
28.8438 1.27735 li
29.0333 1.08106 li
29.3174 0.884766 li
29.6983 0.786133 li
30.3614 0.688477 li
30.6475 0.589844 li
30.9307 0.392579 li
30.9307 0.786133 li
30.7413 1.08106 li
30.4561 1.27735 li
30.0772 1.47364 li
29.4122 1.57129 li
29.792 1.86719 li
30.2666 2.16114 li
30.9307 2.94532 li
30.7413 3.04395 li
30.5508 3.04395 li
30.0772 2.94532 li
29.6983 2.74903 li
29.3174 2.45508 li
29.0333 2.16114 li
28.7481 1.76856 li
28.2745 2.65235 li
27.8936 2.94532 li
27.7051 3.04395 li
27.42 3.04395 li
27.1368 3.14161 li
26.9473 3.33887 li
26.9473 3.43555 li
27.0411 3.63477 li
27.1368 3.53516 li
27.3243 3.43555 li
27.5157 3.43555 li
27.7051 3.33887 li
27.9893 3.43555 li
28.3692 3.53516 li
28.5586 3.63477 li
28.8438 3.83008 li
29.0333 3.92774 li
29.128 3.83008 li
29.3174 3.73145 li
29.6983 3.43555 li
30.0772 3.33887 li
30.5508 3.33887 li
30.9307 3.43555 li
31.3116 3.63477 li
31.8809 4.0254 li
32.1651 4.12403 li
32.1651 3.53516 li
32.544 2.35743 li
32.6387 1.76856 li
32.8292 1.86719 li
32.9229 1.9629 li
33.2081 2.55274 li
33.2081 2.94532 li
33.1133 3.14161 li
32.7334 3.53516 li
32.4483 3.92774 li
33.8721 3.33887 li
33.8721 3.04395 li
33.6827 2.74903 li
33.3028 2.35743 li
32.9229 1.86719 li
32.8292 1.57129 li
32.8292 1.27735 li
32.9229 0.981446 li
32.9229 0.786133 li
33.0186 0.688477 li
33.1133 0.884766 li
33.3028 1.08106 li
34.0626 1.47364 li
34.252 1.66895 li
34.3458 1.86719 li
34.4424 2.16114 li
34.4424 2.45508 li
34.1563 3.04395 li
34.4424 3.04395 li
34.7266 2.16114 li
34.8213 1.66895 li
34.9151 1.27735 li
35.2012 0.981446 li
35.5801 0.688477 li
35.8643 0.589844 li
36.0547 0.589844 li
36.1485 0.491211 li
35.961 1.27735 li
35.6758 1.9629 li
35.5801 2.25879 li
35.3897 2.55274 li
34.9151 2.94532 li
35.3897 2.84864 li
35.6758 2.74903 li
35.8643 2.65235 li
35.8643 2.16114 li
36.0547 1.76856 li
36.3389 1.47364 li
36.7178 1.17969 li
37.0987 0.981446 li
37.5723 0.884766 li
38.0469 0.786133 li
38.4258 0.688477 li
38.0469 1.37598 li
37.5723 2.0625 li
37.2881 2.35743 li
37.003 2.45508 li
37.7618 3.04395 li
38.0469 3.53516 li
38.2374 3.92774 li
38.5206 3.04395 li
38.711 2.55274 li
38.711 2.0625 li
39.0918 2.74903 li
39.2803 3.53516 li
39.2803 4.32032 li
39.1856 4.61426 li
39.0918 5.00782 li
38.9004 5.20411 li
38.6163 5.20411 li
38.4258 5.10645 li
38.3311 4.90918 li
38.2374 4.61426 li
38.1416 4.51661 li
37.9512 4.41895 li
38.1416 4.41895 li
37.9512 3.83008 li
37.1934 2.84864 li
36.9092 2.74903 li
36.6241 2.65235 li
36.2442 2.65235 li
35.961 2.74903 li
35.6758 2.94532 li
35.3897 3.04395 li
36.6241 3.43555 li
36.3389 3.73145 li
36.0547 3.83008 li
35.4854 4.0254 li
34.8213 3.92774 li
34.252 3.83008 li
34.6309 4.0254 li
35.1055 4.12403 li
35.5801 4.32032 li
35.961 4.51661 li
36.4336 5.00782 li
37.003 5.49805 li
36.5293 5.59766 li
36.1485 5.59766 li
35.8643 5.49805 li
35.4854 5.4004 li
35.2012 5.20411 li
34.7266 4.71192 li
34.252 4.12403 li
34.6309 5.10645 li
34.6309 5.69336 li
34.5362 6.28321 li
34.3458 6.28321 li
33.9668 5.89161 li
33.7774 5.59766 li
33.6827 5.20411 li
33.6827 4.71192 li
33.5879 4.71192 li
33.2081 5.30079 li
32.9229 5.49805 li
32.6387 5.49805 li
33.3028 5.69336 li
33.5879 5.89161 li
33.8721 6.08692 li
34.0626 6.28321 li
34.1563 6.4795 li
34.5362 6.87305 li
35.0118 5.98926 li
35.0118 5.79297 li
35.2012 5.89161 li
35.8643 5.89161 li
37.003 6.28321 li
37.4766 6.77344 li
37.4766 5.69336 li
37.3829 5.69336 li
37.1934 5.59766 li
37.003 5.49805 li
37.003 5.4004 li
36.5293 4.81153 li
35.961 4.22168 li
35.961 4.12403 li
36.7178 4.22168 li
37.3829 4.51661 li
38.0469 4.90918 li
38.2374 5.20411 li
38.5206 5.49805 li
38.1416 5.69336 li
37.9512 5.79297 li
37.668 5.89161 li
37.9512 6.18458 li
38.1416 6.57911 li
38.0469 6.57911 li
38.0469 6.67676 li
38.1416 6.67676 li
38.3311 6.4795 li
38.6163 6.28321 li
39.1856 6.28321 li
39.5655 6.38184 li
39.9454 6.57911 li
40.3243 6.87305 li
40.7042 7.06934 li
40.2295 7.06934 li
39.8497 7.167 li
39.376 7.26563 li
38.9952 7.26563 li
38.9952 8.04981 li
38.9004 8.34571 li
38.8057 8.542 li
40.419 8.542 li
40.0401 8.9336 li
39.6592 9.22852 li
39.0918 9.42383 li
38.9004 9.42383 li
38.6163 9.32715 li
38.4258 9.32715 li
38.1416 9.03223 li
37.9512 9.03223 li
37.4766 9.52247 li
37.003 9.91407 li
37.7618 10.0127 li
38.4258 9.91407 li
39.1856 9.62208 li
39.8497 9.22852 li
40.3243 8.9336 li
40.8936 8.73829 li
42.127 8.542 li
43.2657 8.44336 li
43.9307 8.34571 li
44.4981 8.14942 li
44.9737 7.8545 li
45.4483 7.65723 li
45.9219 7.36329 li
46.3965 6.97071 li
46.3018 6.57911 li
46.3965 6.18458 li
46.586 5.59766 li
46.9649 5.00782 li
47.0606 4.71192 li
47.0606 4.32032 li
46.6807 4.22168 li
46.3018 3.92774 li
45.6377 3.43555 li
45.6377 3.33887 li
46.2071 3.33887 li
46.4913 3.43555 li
46.8711 3.43555 li
46.4913 2.94532 li
46.2071 2.45508 li
46.0176 1.9629 li
45.9219 1.37598 li
46.0176 1.37598 li
46.2071 1.57129 li
46.3965 1.76856 li
47.3448 2.55274 li
47.5362 2.74903 li
47.6299 3.04395 li
47.7256 3.53516 li
47.8194 4.12403 li
48.0108 4.22168 li
48.0108 3.73145 li
47.9151 3.33887 li
47.7256 2.45508 li
47.5362 1.66895 li
47.6299 1.17969 li
47.8194 0.786133 li
48.0108 1.37598 li
48.293 1.9629 li
48.4854 2.55274 li
48.5782 2.94532 li
48.4854 3.24024 li
48.1045 4.61426 li
48.0108 4.61426 li
48.0108 4.32032 li
47.251 4.41895 li
47.4395 4.71192 li
47.5362 5.10645 li
47.3448 5.89161 li
47.1553 6.18458 li
46.9649 6.38184 li
47.0606 6.4795 li
47.251 6.18458 li
47.7256 5.59766 li
48.1045 4.90918 li
48.4854 4.12403 li
48.959 3.53516 li
48.7686 3.24024 li
48.6749 2.84864 li
48.6749 0.688477 li
49.4336 1.66895 li
49.6231 2.16114 li
49.6231 2.84864 li
49.5264 3.04395 li
50.0967 2.65235 li
50.8555 2.55274 li
51.6153 2.55274 li
52.2793 2.45508 li
52.375 2.25879 li
52.4698 2.25879 li
52.754 2.0625 li
52.6573 2.35743 li
52.5645 2.55274 li
52.2793 3.04395 li
51.8995 3.43555 li
51.8047 3.33887 li
51.709 3.53516 li
51.5206 3.63477 li
51.046 3.83008 li
50.7608 4.32032 li
50.5723 4.51661 li
50.3819 4.71192 li
50.0967 4.71192 li
49.8126 4.61426 li
49.2432 4.51661 li
49.2432 5.4004 li
49.1475 5.69336 li
49.4336 5.49805 li
49.8126 5.49805 li
50.5723 5.4004 li
50.9512 6.18458 li
50.9512 6.87305 li
50.8555 8.04981 li
51.3301 7.26563 li
51.2354 6.77344 li
51.2354 6.18458 li
51.3301 5.10645 li
51.6153 4.0254 li
51.8047 4.71192 li
52.0889 5.89161 li
51.9942 6.18458 li
51.4249 7.36329 li
51.1407 7.8545 li
50.5723 8.63965 li
50.0967 8.9336 li
50.667 8.83594 li
51.3301 8.83594 li
52.5645 8.9336 li
53.1329 8.9336 li
52.754 9.13086 li
52.2793 9.22852 li
51.6153 9.52247 li
50.8555 9.71973 li
50.1934 9.62208 li
49.8126 9.52247 li
49.2432 9.22852 li
48.6749 9.52247 li
49.3379 9.52247 li
49.8126 9.71973 li
50.9512 10.1124 li
51.1407 10.1124 li
51.2354 10.21 li
51.2354 10.9952 li
51.046 11.2901 li
50.9512 11.6827 li
51.5206 11.584 li
52.0889 11.6827 li
52.5645 11.7803 li
53.1329 11.879 li
51.9942 12.4678 li
51.046 12.4678 li
50.5723 12.1729 li
50.3819 12.1729 li
50.1934 12.3702 li
50.2862 12.4678 li
50.667 12.4678 li
50.9512 12.5665 li
51.709 13.0577 li
52.0889 13.253 li
52.4698 13.3516 li
52.2793 13.5479 li
51.8995 13.6456 li
51.2354 13.6456 li
50.667 13.5479 li
50.0967 13.253 li
49.5264 12.8614 li
48.959 13.1553 li
48.3897 13.5479 li
49.7178 13.5479 li
50.8555 13.8428 li
50.3819 14.1377 li
49.7178 14.334 li
48.8643 14.4307 li
48.4854 14.334 li
48.0108 14.1377 li
47.9151 14.2354 li
47.8194 14.4307 li
47.5362 14.7256 li
48.5782 14.9219 li
49.6231 15.3145 li
49.8126 14.9219 li
50.0967 14.628 li
50.4766 14.4307 li
50.9512 14.334 li
51.4249 14.334 li
51.4249 14.4307 li
51.5206 14.4307 li
51.6153 14.334 li
52.5645 14.334 li
52.5645 14.4307 li
51.9942 15.0206 li
51.3301 15.3145 li
50.5723 15.5108 li
50.0967 15.5108 li
49.7178 15.4131 li
49.7178 15.5108 li
50.3819 15.7081 li
51.8995 16.1006 li
52.6573 16.3936 li
52.9424 16.6885 li
53.3233 16.6885 li
53.1329 16.8858 li
52.2793 16.8858 li
51.6153 16.5918 li
51.3301 16.3936 li
51.1407 16.1006 li
50.5723 15.9034 li
50.1934 15.8057 li
49.9073 15.8057 li
50.2862 16.1983 li
50.5723 16.5918 li
52.5645 17.4747 li
52.754 17.7686 li
53.0391 18.0626 li
53.6084 18.9473 li
53.3233 18.9473 li
52.5645 18.751 li
52.2793 18.6514 li
51.8995 18.3584 li
51.5206 17.9649 li
50.8555 17.0821 li
51.1407 17.8672 li
51.3301 18.6514 li
51.3301 18.751 li
51.8047 19.045 li
52.1836 19.3399 li
52.5645 19.7325 li
52.6573 20.0264 li
52.6573 21.1055 li
52.2793 21.1055 li
51.9942 20.9102 li
51.8047 20.1241 li
51.709 19.3399 li
51.6153 19.045 li
51.5206 18.9473 li
51.3301 18.9473 li
51.4249 19.8311 li
51.6153 20.3213 li
51.709 20.8126 li
51.6153 21.4004 li
51.5206 21.8917 li
51.1407 22.3819 li
50.9512 22.6758 li
50.667 22.7754 li
50.7608 22.3819 li
50.7608 20.8126 li
50.8555 20.419 li
50.9512 20.1241 li
51.3301 19.8311 li
51.1407 18.6514 li
51.046 18.4551 li
50.9512 18.6514 li
50.9512 19.3399 li
50.8555 19.8311 li
50.5723 20.2227 li
49.9073 20.9102 li
49.8126 20.9102 li
49.7178 20.5176 li
49.7178 19.9278 li
49.9073 19.6329 li
50.667 18.6514 li
50.8555 18.2598 li
50.9512 17.7686 li
50.667 17.1807 li
50.5723 16.9834 li
50.5723 17.6709 li
50.667 17.9649 li
50.5723 18.2598 li
50.3819 18.6514 li
50.0967 19.1436 li
49.6231 19.6329 li
49.6231 19.8311 li
49.3379 19.9278 li
49.1475 19.8311 li
48.7686 19.6329 li
48.1993 18.6514 li
48.0108 18.0626 li
47.8194 18.0626 li
47.8194 17.8672 li
47.7256 17.7686 li
47.9151 18.6514 li
48.1993 19.4376 li
48.5782 20.0264 li
48.5782 20.7139 li
48.4854 21.4004 li
48.293 22.0889 li
48.0108 21.794 li
47.8194 21.4991 li
47.7256 21.1055 li
47.7256 20.6163 li
47.8194 19.8311 li
48.0108 18.9473 li
47.7256 18.6514 li
47.5362 17.7686 li
47.1553 16.9834 li
45.7325 15.6104 li
45.1641 15.5108 li
44.5948 15.5108 li
43.9307 15.6104 li
43.3614 15.8057 li
43.5508 15.9034 li
43.7403 16.002 li
44.0235 16.002 li
44.4981 15.9034 li
44.6885 16.002 li
44.7833 16.002 li
45.2579 16.2959 li
45.7325 16.4922 li
45.6377 16.6885 li
44.4981 16.6885 li
43.9307 16.4922 li
43.4551 16.1983 li
43.3614 16.5918 li
43.3614 16.9834 li
43.9307 16.8858 li
44.2139 16.8858 li
44.4981 16.7872 li
44.4981 16.9834 li
44.1202 17.376 li
43.3614 17.9649 li
42.8868 18.1612 li
43.3614 18.1612 li
43.7403 18.2598 li
45.6377 19.2413 li
45.3526 19.3399 li
45.1641 19.4376 li
44.878 19.4376 li
44.5948 19.5352 li
44.0235 19.6329 li
43.4551 19.4376 li
42.5059 18.9473 li
42.4112 19.045 li
42.5059 19.6329 li
42.5059 20.1241 li
42.127 21.1055 li
41.9366 20.6163 li
41.8428 20.0264 li
41.8428 19.3399 li
41.9366 18.751 li
41.7471 18.6514 li
40.7989 17.9649 li
40.419 17.5733 li
40.0401 17.0821 li
36.9092 17.0821 li
35.7696 17.2774 li
35.6758 17.376 li
35.8643 17.4747 li
35.961 17.376 li
37.2881 17.376 li
37.5723 17.5733 li
36.7178 17.9649 li
36.0547 17.9649 li
35.8643 17.7686 li
35.8643 18.0626 li
35.961 18.2598 li
36.1485 18.4551 li
36.4336 18.3584 li
36.6241 18.2598 li
36.9092 18.1612 li
37.1934 17.9649 li
37.5723 17.9649 li
38.3311 18.1612 li
37.9512 18.4551 li
37.4766 18.6514 li
36.7178 18.6514 li
36.5293 18.5538 li
36.2442 18.5538 li
36.2442 18.6514 li
36.8126 18.751 li
37.3829 19.045 li
37.9512 18.6514 li
38.6163 18.6514 li
39.4708 19.045 li
39.0918 19.2413 li
38.6163 19.4376 li
38.1416 19.4376 li
37.668 19.3399 li
37.5723 19.2413 li
37.8575 19.2413 li
38.2374 19.3399 li
39.2803 19.045 li
39.1856 19.045 li
38.9952 18.9473 li
38.711 18.9473 li
38.1416 18.8487 li
37.7618 18.9473 li
37.4766 19.045 li
37.4766 19.2413 li
37.668 19.4376 li
37.668 19.6329 li
37.7618 20.2227 li
37.3829 20.2227 li
37.3829 20.419 li
37.2881 20.6163 li
36.9092 21.0079 li
36.8126 21.0079 li
36.9092 21.1055 li
37.1934 21.0079 li
37.5723 20.9102 li
37.8575 20.9102 li
38.2374 21.1055 li
38.1416 21.3038 li
38.0469 21.3038 li
37.7618 21.4004 li
37.4766 21.4004 li
37.8575 21.3038 li
37.9512 21.3038 li
37.8575 21.2042 li
37.668 21.1055 li
37.4766 21.1055 li
37.0987 21.2042 li
37.4766 21.4004 li
37.1934 21.4004 li
36.9092 21.3038 li
36.6241 21.1055 li
36.4336 21.1055 li
36.4336 21.0079 li
36.1485 21.1055 li
35.8643 21.1055 li
35.5801 21.0079 li
35.295 21.0079 li
35.295 21.1055 li
35.3897 21.2042 li
35.7696 21.4991 li
35.961 21.5967 li
36.4336 22.0889 li
36.6241 22.4805 li
36.7178 22.9717 li
36.8126 23.3643 li
36.7178 23.7569 li
36.5293 24.0518 li
36.2442 24.3458 li
35.8643 24.4434 li
35.3897 24.3458 li
35.0118 24.2471 li
34.6309 24.0518 li
34.252 23.9532 li
34.0626 24.1485 li
33.9668 24.3458 li
33.9668 24.837 li
34.1563 25.2295 li
34.5362 25.4258 li
34.6309 25.4258 li
34.7266 25.2295 li
34.7266 24.837 li
34.6309 24.6407 li
34.4424 24.5411 li
34.6309 24.5411 li
34.9151 24.837 li
34.9151 25.1299 li
34.8213 25.4258 li
34.7266 25.5235 li
34.3458 25.5235 li
34.1563 25.4258 li
33.8721 25.2295 li
33.6827 24.837 li
33.6827 24.4434 li
33.8721 24.1485 li
34.1563 23.8555 li
34.6309 23.8555 li
35.0118 24.0518 li
35.1055 24.0518 li
35.0118 23.8555 li
34.9151 23.8555 li
34.7266 23.7569 li
34.6309 23.6583 li
34.3458 23.6583 li
34.252 23.5606 li
34.1563 23.4629 li
34.252 23.3643 li
34.252 23.2667 li
34.0626 23.168 li
33.8721 22.9717 li
33.8721 22.8731 li
33.9668 22.8731 li
34.0626 22.9717 li
34.1563 23.0694 li
34.252 23.0694 li
34.252 22.8731 li
34.1563 22.7754 li
33.9668 22.4805 li
33.8721 22.5782 li
33.8721 22.6758 li
33.7774 22.7754 li
33.5879 22.7754 li
33.3975 22.6758 li
33.1133 22.4805 li
33.0186 22.5782 li
33.1133 22.6758 li
33.2081 22.9717 li
33.2081 23.168 li
33.1133 23.2667 li
33.0186 23.2667 li
32.8292 23.3643 li
32.9229 23.5606 li
32.9229 23.7569 li
33.1133 24.1485 li
33.0186 24.1485 li
33.1133 24.2471 li
33.0186 24.4434 li
33.2081 24.4434 li
33.3028 24.5411 li
33.4922 24.837 li
33.8721 25.6221 li
33.9668 25.9161 li
34.0626 26.1133 li
34.1563 26.212 li
34.252 26.212 li
34.3458 26.7012 li
34.5362 27.0948 li
34.8213 27.4864 li
35.2012 27.7813 li
35.295 27.9786 li
35.3897 27.9786 li
35.4854 27.878 li
35.4854 27.6827 li
36.1485 26.9961 li
36.5293 25.8184 li
36.7178 25.3282 li
37.0987 24.837 li
37.3829 24.5411 li
37.7618 24.3458 li
37.8575 24.1485 li
37.9512 24.0518 li
38.0469 23.8555 li
38.0469 23.5606 li
38.1416 23.4629 li
38.3311 23.3643 li
38.1416 23.3643 li
38.0469 23.2667 li
38.0469 23.0694 li
37.7618 23.0694 li
37.668 22.8731 li
37.9512 22.3819 li
38.3311 21.8917 li
38.4258 21.5967 li
38.5206 21.4004 li
38.8057 21.1055 li
39.0918 20.9102 li
38.9952 20.6163 li
38.9952 20.3213 li
39.376 20.2227 li
39.7549 20.1241 li
40.2295 20.2227 li
40.6084 20.419 li
40.5127 20.6163 li
40.6084 20.8126 li
40.7989 20.9102 li
41.0831 21.0079 li
41.2735 21.2042 li
41.5577 21.3038 li
41.8428 21.4991 li
41.7471 21.794 li
41.8428 22.0889 li
41.9366 22.2842 li
41.9366 22.5782 li
41.7471 23.3643 li
41.5577 23.6583 li
41.3672 23.7569 li
41.1788 23.8555 li
41.1788 24.0518 li
41.4629 23.9532 li
41.7471 23.7569 li
41.9366 23.6583 li
42.127 23.7569 li
42.2217 23.8555 li
42.2217 24.1485 li
42.127 24.3458 li
42.127 24.6407 li
42.2217 24.6407 li
42.6016 24.837 li
42.6954 24.9346 li
43.0762 26.212 li
43.3614 27.4864 li
43.5508 28.7637 li
43.5508 30.1377 li
43.834 30.9219 li
44.1202 33.2793 li
44.1202 35.3399 li
44.0235 37.2051 li
44.0235 38.5792 li
44.1202 39.8545 li
44.0235 40.1504 li
43.9307 40.3467 li
43.834 40.9356 li
43.834 41.5254 li
43.7403 42.1124 li
43.5508 43.4874 li
43.4551 44.7637 li
43.0762 44.96 li
42.9805 45.0567 li
42.8868 45.2549 li
42.9805 45.4502 li
43.0762 45.5499 li
43.2657 45.4502 li
43.4551 45.3526 li
43.4551 45.0567 li
43.5508 45.2549 li
43.6446 45.1563 li
43.7403 44.96 li
43.9307 44.4698 li
44.2139 43.8799 li
44.5948 43.4874 li
44.878 43.292 li
45.0694 43.292 li
44.7833 43.4874 li
44.4981 43.8799 li
44.2139 44.3711 li
43.9307 45.4502 li
44.2139 44.8614 li
44.5948 44.2735 li
45.0694 43.8799 li
45.3526 43.6846 li
45.6377 43.585 li
46.0176 43.585 li
46.3965 43.6846 li
46.4913 43.8799 li
46.4913 43.9786 li
46.3965 44.0762 li
46.1124 43.8799 li
45.8272 43.8799 li
45.2579 44.0762 li
44.878 44.2735 li
44.4981 44.6661 li
44.2139 45.0567 li
44.1202 45.4502 li
44.3096 45.4502 li
44.6885 44.7637 li
44.9737 44.4698 li
45.3526 44.2735 li
45.7325 44.1749 li
46.2071 44.1749 li
45.9219 44.3711 li
45.7325 44.3711 li
45.2579 44.5674 li
44.4043 45.4502 li
44.4981 45.5499 li
44.6885 45.5499 li
44.878 45.3526 li
45.3526 44.8614 li
45.6377 44.7637 li
45.9219 44.7637 li
45.543 44.8614 li
45.2579 45.0567 li
44.7833 45.5499 li
44.9737 45.6475 li
45.2579 45.5499 li
45.8272 45.0567 li
46.3965 44.6661 li
46.9649 44.4698 li
47.7256 44.4698 li
48.293 44.7637 li
48.3897 45.0567 li
48.293 45.1563 li
48.293 45.3526 li
48.0108 45.6475 li
47.7256 45.5499 li
47.6299 45.4502 li
47.5362 45.3526 li
47.5362 45.2549 li
47.7256 45.2549 li
47.9151 45.4502 li
48.0108 45.4502 li
48.0108 45.2549 li
47.6299 44.8614 li
47.0606 44.7637 li
46.4913 44.8614 li
46.0176 45.0567 li
45.543 45.4502 li
45.9219 45.3526 li
46.3965 45.3526 li
47.251 45.5499 li
46.6807 45.8438 li
46.4913 46.0411 li
46.3018 46.334 li
46.2071 46.4327 li
45.9219 46.4327 li
45.9219 46.2374 li
45.7325 46.334 li
45.543 46.4327 li
45.8272 46.5313 li
46.1124 46.5313 li
46.3965 46.4327 li
46.6807 46.2374 li
47.0606 46.0411 li
47.9151 45.7461 li
48.1993 45.7461 li
48.293 45.6475 li
49.4336 45.9424 li
49.8126 46.1387 li
50.3819 46.5313 li
50.3819 46.9229 li
50.2862 46.7266 li
50.1934 46.5313 li
50.1934 46.4327 li
50.0967 46.5313 li
50.0967 46.629 li
49.9073 46.5313 li
49.1475 46.334 li
48.3897 46.1387 li
47.251 46.1387 li
46.8711 46.334 li
47.7256 46.334 li
47.7256 46.4327 li
48.4854 46.4327 li
49.2432 46.5313 li
49.7178 46.8252 li
50.1934 47.1202 li
50.5723 47.0215 li
50.4766 47.2188 li
50.3819 47.2188 li
50.3819 47.3155 li
50.4766 47.4151 li
50.5723 47.4151 li
50.667 47.3155 li
51.5206 47.3155 li
51.5206 47.2188 li
51.4249 47.0215 li
50.8555 47.0215 li
50.9512 46.8252 li
51.2354 46.7266 li
50.667 46.1387 li
50.1934 45.7461 li
49.9551 45.6475 li
50.2862 45.7461 li
51.046 46.1387 li
51.4249 46.5313 li
51.5206 46.5313 li
51.8047 46.629 li
52.0889 46.629 li
51.8995 46.8252 li
51.6153 46.9229 li
51.709 47.0215 li
52.0889 46.8252 li
52.5645 46.8252 li
52.754 46.7266 li
53.2286 46.7266 li
53.7022 46.9229 li
53.7979 47.1202 li
53.8926 47.4151 li
53.5137 47.2188 li
53.0391 47.1202 li
52.6573 47.0215 li
52.1836 47.1202 li
52.0889 47.0215 li
51.9942 47.0215 li
51.9942 47.1202 li
52.1836 47.3155 li
52.2793 47.6104 li
52.4698 48.004 li
52.754 48.3956 li
52.6573 48.3956 li
52.4698 48.2979 li
52.375 48.1993 li
52.1836 48.1006 li
52.1836 48.2979 li
52.0889 48.4932 li
52.0889 48.5918 li
52.1836 48.7891 li
52.1836 49.4747 li
52.1143 49.6729 li
26.9473 49.6729 li
26.9473 48.7891 li
27.7051 48.7891 li
28.4639 48.6905 li
28.3692 48.5918 li
27.7989 48.6905 li
27.1368 48.6905 li
27.3243 48.5918 li
27.42 48.5918 li
27.7989 48.2979 li
28.084 48.004 li
28.3692 47.8067 li
28.5586 47.7081 li
28.7481 47.7081 li
28.7481 48.004 li
28.8438 48.1006 li
29.0333 48.2979 li
29.0333 48.5918 li
28.7481 48.5918 li
28.6543 48.6905 li
28.5586 48.7891 li
29.4122 48.7891 li
29.3174 48.2979 li
29.3174 47.8067 li
29.0333 47.5127 li
28.9395 47.3155 li
28.8438 46.9229 li
28.8438 46.629 li
28.9395 46.7266 li
29.4122 46.7266 li
29.8877 47.0215 li
30.1719 47.3155 li
30.9307 48.004 li
30.836 48.1006 li
30.7413 48.1006 li
30.6475 48.004 li
30.4561 48.004 li
30.2666 48.1993 li
30.0772 48.2979 li
29.6026 48.3956 li
29.6026 48.7891 li
30.3614 48.4932 li
31.1211 48.1993 li
30.836 48.4932 li
30.4561 48.7891 li
31.5 48.7891 li
31.8809 48.6905 li
31.9747 48.7891 li
35.8643 48.7891 li
35.8643 48.6905 li
35.6758 48.6905 li
34.8213 48.5918 li
33.9668 48.5918 li
33.1133 48.4932 li
32.2588 48.3956 li
34.6309 48.3956 li
35.8643 48.4932 li
36.4336 48.5918 li
37.003 48.7891 li
37.668 48.7891 li
36.2442 48.3956 li
35.4854 48.1993 li
34.7266 48.1993 li
34.5362 48.2979 li
34.3458 48.2979 li
34.0626 48.1006 li
33.6827 47.8067 li
33.3975 47.3155 li
33.1133 47.3155 li
32.8292 47.4151 li
32.544 47.6104 li
32.2588 47.6104 li
32.4483 47.4151 li
32.7334 47.3155 li
32.6387 47.2188 li
32.544 47.2188 li
32.2588 47.3155 li
32.0694 47.5127 li
31.7852 47.6104 li
31.4053 47.7081 li
31.9747 47.3155 li
32.4483 47.0215 li
32.4483 46.9229 li
32.3545 46.9229 li
32.1651 47.0215 li
31.8809 47.1202 li
31.4053 47.4151 li
31.1211 47.5127 li
30.9307 47.6104 li
30.6475 47.5127 li
30.4561 47.2188 li
30.0772 46.8252 li
29.6983 46.5313 li
29.3174 46.4327 li
29.0333 46.334 li
28.8438 46.334 li
28.6543 46.1387 li
28.6543 45.9424 li
28.7481 45.5499 li
28.7481 45.2549 li
28.6543 45.0567 li
28.4639 44.96 li
28.1797 44.8614 li
27.9893 44.5674 li
27.7051 44.3711 li
27.3243 44.2735 li
27.0411 44.1749 li
26.9473 44.1749 li
26.9473 43.587 li
27.0411 43.6846 li
27.42 43.9786 li
28.1797 44.3711 li
28.4639 44.6661 li
28.8438 44.8614 li
29.0333 45.0567 li
29.3174 45.1563 li
29.6026 45.2549 li
29.8877 45.4502 li
30.3614 45.7461 li
30.5508 45.9424 li
30.7413 46.2374 li
30.6475 46.4327 li
30.4561 46.629 li
30.7413 46.7266 li
31.0245 46.629 li
31.2149 46.4327 li
31.5 46.4327 li
31.7852 46.5313 li
31.9747 46.629 li
32.2588 46.7266 li
32.8292 47.0215 li
32.7334 47.0215 li
32.8292 47.1202 li
33.1133 47.0215 li
33.3975 47.0215 li
33.5879 47.1202 li
33.6827 47.3155 li
33.9668 47.7081 li
34.1563 47.9053 li
34.3458 48.004 li
35.1055 48.004 li
34.8213 47.9053 li
34.6309 48.004 li
34.4424 47.9053 li
34.252 47.8067 li
33.9668 47.5127 li
33.5879 46.7266 li
33.2081 46.7266 li
32.9229 46.8252 li
32.6387 46.7266 li
32.4483 46.5313 li
32.544 46.4327 li
32.6387 46.4327 li
32.8292 46.5313 li
32.9229 46.5313 li
33.1133 46.4327 li
33.1133 46.334 li
33.0186 46.334 li
32.9229 46.2374 li
32.7334 46.334 li
32.6387 46.4327 li
32.544 46.334 li
32.544 46.0411 li
32.2588 45.9424 li
31.9747 45.8438 li
31.7852 45.7461 li
31.4053 45.6475 li
31.0245 45.3526 li
30.7413 45.0567 li
30.5508 44.6661 li
30.5508 44.5674 li
30.3614 44.4698 li
30.0772 44.4698 li
29.9805 44.3711 li
29.792 44.2735 li
29.128 44.2735 li
28.9395 44.1749 li
28.8438 44.0762 li
28.6543 43.9786 li
28.6543 43.8799 li
28.4639 43.8799 li
28.2745 43.6846 li
27.9893 43.4874 li
27.6104 43.292 li
27.42 42.9971 li
26.9473 42.8985 li
26.9473 42.6036 li
27.0411 42.6036 li
27.2305 42.7032 li
27.42 42.8008 li
27.6104 42.8008 li
28.1797 43.292 li
28.8438 43.6846 li
29.5079 43.7823 li
30.2666 43.6846 li
30.1719 43.4874 li
30.1719 43.585 li
29.0333 43.3887 li
28.5586 43.1934 li
29.3174 43.292 li
30.0772 43.0948 li
29.4122 43.0948 li
29.0333 42.9971 li
28.7481 42.8008 li
29.792 42.7032 li
29.8877 42.6036 li
29.3174 42.5059 li
29.0333 42.5059 li
28.8438 42.4073 li
29.4122 42.3096 li
29.6026 42.212 li
29.792 42.0157 li
28.8438 42.0157 li
28.5586 41.918 li
28.8438 41.8194 li
29.2237 41.8194 li
29.4122 41.7208 li
29.6026 41.7208 li
29.6983 41.6221 li
29.6026 41.5254 li
29.0333 41.5254 li
28.3692 41.4268 li
29.2237 41.3272 li
29.4122 41.2305 li
29.4122 41.0352 li
28.8438 41.1319 li
28.2745 41.1319 li
28.1797 41.0352 li
28.7481 40.9356 li
29.3174 40.6397 li
29.2237 40.543 li
28.6543 40.6397 li
28.084 40.6397 li
27.9893 40.543 li
28.5586 40.4434 li
28.8438 40.3467 li
29.128 40.2481 li
29.128 40.1504 li
27.9893 40.1504 li
28.1797 40.0518 li
28.3692 40.0518 li
28.7481 39.8545 li
28.9395 39.7579 li
28.9395 39.5626 li
28.4639 39.6592 li
27.8936 39.5626 li
28.4639 39.4629 li
28.7481 39.3653 li
28.9395 39.2676 li
29.0333 39.169 li
28.5586 39.2676 li
28.084 39.2676 li
27.9893 39.169 li
28.5586 39.0704 li
28.8438 38.9717 li
29.0333 38.7764 li
27.9893 38.7764 li
27.7989 38.6778 li
28.1797 38.6778 li
28.2745 38.5792 li
28.3692 38.3829 li
28.084 38.3829 li
27.7989 38.2852 li
28.084 38.1876 li
28.3692 38.1876 li
28.6543 38.0879 li
28.8438 37.8916 li
28.6543 37.8916 li
27.9893 37.795 li
27.7051 37.6963 li
27.42 37.5977 li
28.1797 37.6963 li
28.9395 37.4991 li
27.9893 37.4014 li
27.6104 37.3047 li
27.2305 37.2051 li
27.5157 37.1065 li
27.7989 37.2051 li
28.084 37.3047 li
28.4639 37.3047 li
28.6543 37.2051 li
28.7481 37.2051 li
28.8438 37.1065 li
28.1797 37.0098 li
27.8936 37.0098 li
27.6104 36.9092 li
27.3243 36.7139 li
27.2305 36.6153 li
27.2305 36.42 li
27.5157 36.125 li
27.6104 36.125 li
27.7051 36.3223 li
27.5157 36.5176 li
27.5157 36.6153 li
27.7051 36.6153 li
27.8936 36.5176 li
27.9893 36.3223 li
27.9893 36.2237 li
27.6104 35.9288 li
27.42 35.1426 li
27.42 34.6534 li
27.1368 34.751 li
26.9473 34.9483 li
26.9473 34.7999 li
27.1368 34.6534 li
27.3243 34.5547 li
27.5157 34.5547 li
27.5157 34.3575 li
27.6104 34.1612 li
27.7051 34.2598 li
27.6104 34.4561 li
27.9893 34.4561 li
28.1797 34.5547 li
28.4639 34.6534 li
28.7481 34.6534 li
28.7481 34.5547 li
28.6543 34.3575 li
28.3692 34.1612 li
28.2745 34.0645 li
28.084 34.0645 li
27.7989 34.1612 li
27.3243 34.0645 li
26.9473 34.0645 li
26.9473 33.9004 li
27.0411 33.8672 li
27.6104 33.8672 li
27.0411 33.6719 li
26.9473 33.6221 li
26.9473 33.3975 li
27.1368 33.4737 li
28.084 33.8672 li
28.5586 33.9659 li
28.6543 33.7686 li
28.6543 33.6719 li
28.2745 33.4737 li
28.2745 33.2793 li
28.1797 33.377 li
27.2305 32.9834 li
26.9473 32.837 li
26.9473 32.5899 li
26.9473 32.5918 li
27.3243 32.7872 li
27.7051 32.8858 li
27.9893 33.0831 li
28.2745 33.1807 li
28.5586 33.0831 li
28.8438 32.9834 li
29.2237 32.9834 li
29.2237 32.8858 li
28.5586 32.9834 li
28.2745 32.9834 li
27.9893 32.7872 li
28.9395 32.5918 li
28.1797 32.5918 li
27.9893 32.3946 li
28.7481 32.3946 li
28.9395 32.296 li
27.9893 32.1006 li
28.4639 32.001 li
29.0333 31.9043 li
28.5586 31.9043 li
28.2745 31.8067 li
28.084 31.709 li
28.3692 31.6094 li
28.9395 31.6094 li
29.2237 31.5127 li
28.6543 31.4131 li
28.3692 31.4131 li
28.084 31.3165 li
29.2237 31.1192 li
28.6543 31.0206 li
28.417 30.9219 li
28.5586 30.9219 li
28.9395 30.8252 li
28.5586 30.7276 li
28.3692 30.627 li
28.1797 30.5303 li
28.7481 30.5303 li
29.0333 30.4317 li
28.6543 30.4317 li
28.3692 30.335 li
28.084 30.1377 li
28.6543 30.1377 li
28.8438 30.0391 li
28.6543 30.0391 li
28.5586 29.9415 li
28.4639 29.7442 li
28.2745 29.5489 li
28.1797 29.4502 li
27.9893 29.4502 li
27.7989 29.3526 li
27.7051 29.1553 li
27.6104 28.8624 li
27.42 28.7637 li
27.42 28.5674 li
27.5157 28.3702 li
27.6104 28.2725 li
27.6104 28.1739 li
27.2305 28.1739 li
27.1368 27.9786 li
27.1368 27.6827 li
27.0411 27.3877 li
27.6104 26.8008 li
27.9893 26.7012 li
28.1797 26.7012 li
28.3692 26.8008 li
28.7481 26.7012 li
29.0333 26.5059 li
28.3692 26.6036 li
28.5586 26.4073 li
28.8438 26.3086 li
28.5586 26.3086 li
28.2745 26.212 li
28.6543 26.0137 li
28.8438 26.0137 li
29.0333 25.9161 li
28.6543 26.0137 li
28.3692 26.0137 li
28.1797 25.9161 li
28.2745 25.8184 li
28.4639 25.8184 li
28.5586 25.7198 li
28.6543 25.7198 li
28.1797 25.6221 li
28.2745 25.5235 li
28.4639 25.4258 li
28.6543 25.4258 li
28.7481 25.3282 li
28.3692 25.3282 li
28.084 25.2295 li
28.1797 25.1299 li
28.4639 25.1299 li
28.5586 25.0342 li
28.2745 24.9346 li
27.9893 24.9346 li
27.7989 24.837 li
27.7989 24.6407 li
27.8936 24.4434 li
27.8936 24.2471 li
27.7051 24.7374 li
27.5157 24.9346 li
27.42 25.1299 li
27.2305 25.2295 li
27.0411 25.3282 li
26.9473 25.3028 li
26.9473 25.1299 li
27.0411 25.1299 li
27.1368 25.0342 li
27.42 24.837 li
27.5157 24.6407 li
27.5157 24.3458 li
27.6104 24.2471 li
27.7989 24.1485 li
27.9893 24.0518 li
28.084 24.0518 li
28.084 23.8555 li
28.2745 23.5606 li
28.3692 23.3643 li
28.3692 23.2667 li
28.2745 23.168 li
27.9893 23.6583 li
28.084 23.7569 li
27.9893 23.9532 li
27.9893 24.0518 li
27.7989 23.8555 li
27.42 24.2471 li
27.0411 24.5411 li
26.9473 24.5411 li
27.3243 24.1485 li
27.7051 23.8555 li
27.6104 23.7569 li
27.6104 23.6583 li
27.42 23.4629 li
27.5157 23.4629 li
27.7051 23.5606 li
27.9893 23.5606 li
28.084 23.3643 li
28.1797 23.0694 li
27.8936 23.168 li
27.6104 23.0694 li
27.1368 22.8731 li
26.9473 23.3643 li
26.9473 23.3653 li
26.9473 22.8731 li
27.0411 22.7754 li
27.2305 22.7754 li
27.0411 21.794 li
26.9473 22.1358 li
26.9473 21.125 li
27.2305 21.5967 li
27.7051 22.2842 li
28.2745 22.8731 li
28.7481 23.4629 li
29.2237 24.1485 li
29.4122 24.5411 li
29.6026 24.837 li
29.6983 25.2295 li
29.6026 25.7198 li
29.5079 25.9161 li
29.5079 26.6036 li
29.4122 26.7012 li
29.2237 26.8008 li
28.8438 26.8975 li
28.084 26.8975 li
27.6104 26.9961 li
27.3243 27.1915 li
27.2305 27.4864 li
27.42 27.4864 li
27.3243 27.586 li
27.2305 27.7813 li
27.3243 27.9786 li
27.5157 27.9786 li
27.6104 27.7813 li
27.7989 27.586 li
27.8936 27.3877 li
27.9893 27.3877 li
28.084 27.4864 li
28.084 27.586 li
27.6104 28.4688 li
27.6104 28.6641 li
27.7989 28.8624 li
27.9893 29.254 li
28.1797 29.3526 li
28.2745 29.254 li
28.4639 28.8624 li
28.6543 28.8624 li
28.7481 28.7637 li
28.8438 28.4688 li
28.8438 28.1739 li
28.9395 27.7813 li
28.9395 27.878 li
29.0333 27.878 li
29.0333 28.4688 li
29.128 28.7637 li
29.3174 28.959 li
29.5079 28.7637 li
29.5079 28.0762 li
29.3174 27.586 li
29.0333 27.1915 li
28.9395 27.0948 li
28.5586 27.0948 li
28.7481 26.9961 li
28.9395 26.9961 li
29.4122 27.0948 li
29.8877 26.212 li
30.0772 25.4258 li
30.0772 25.0342 li
29.8877 24.6407 li
29.5079 23.9532 li
29.0333 23.3643 li
28.6543 22.8731 li
28.1797 22.4805 li
27.7989 22.0889 li
27.42 21.5967 li
26.9473 20.7139 li
26.9473 20.5176 li
27.2305 20.8126 li
27.8936 21.6954 li
28.6543 21.794 li
28.7481 21.6954 li
28.1797 21.5967 li
27.8936 21.4991 li
27.7051 21.3038 li
28.2745 21.4004 li
28.5586 21.4004 li
28.8438 21.3038 li
28.8438 21.2042 li
28.4639 21.2042 li
27.6104 20.9102 li
27.6104 20.8126 li
28.2745 20.9102 li
28.5586 20.8126 li
28.8438 20.7139 li
28.2745 20.7139 li
27.7051 20.6163 li
27.5157 20.7139 li
27.2305 20.6163 li
27.0411 20.419 li
26.9473 20.2959 li
26.9473 20.1739 li
27.0411 20.2227 li
27.6104 20.419 li
28.6543 20.419 li
28.7481 20.3213 li
28.1797 20.2227 li
27.7989 20.2227 li
27.5157 20.3213 li
27.0411 20.0264 li
26.9473 19.9278 li
26.9473 19.712 li
27.7051 20.0264 li
28.7481 20.0264 li
28.7481 19.8311 li
27.9893 19.8311 li
27.7989 19.9278 li
27.5157 19.8311 li
27.2305 19.7325 li
26.9473 19.4385 li
26.9473 19.3067 li
27.1368 19.4376 li
27.3243 19.5352 li
27.7989 19.5352 li
28.6543 19.4376 li
28.7481 19.2413 li
28.2745 19.3399 li
27.8936 19.3399 li
27.7051 19.4376 li
27.3243 19.3399 li
27.1368 19.2413 li
26.9473 19.045 li
27.0411 18.9473 li
27.2305 19.1436 li
27.8936 19.1436 li
28.7481 18.9473 li
28.7481 18.8487 li
27.9893 18.8487 li
27.7051 19.045 li
27.3243 18.9473 li
27.0411 18.6514 li
28.4639 18.6514 li
28.7481 18.5538 li
28.8438 18.4551 li
28.8438 18.3584 li
27.8936 18.3584 li
27.7051 18.5538 li
27.6104 18.4551 li
27.6104 18.5538 li
27.3243 18.4551 li
27.1368 18.3584 li
27.3243 18.2598 li
27.42 18.2598 li
27.7051 18.3584 li
27.7051 18.2598 li
28.3692 18.1612 li
29.0333 17.9649 li
29.0333 17.7686 li
28.3692 17.8672 li
28.084 17.9649 li
27.7989 17.8672 li
27.7989 17.7686 li
28.5586 17.6709 li
29.2237 17.376 li
28.8438 17.4747 li
27.7051 17.4747 li
27.6104 17.376 li
27.6104 17.2774 li
28.4639 17.1807 li
29.2237 16.9834 li
27.7989 16.9834 li
27.7051 16.8858 li
28.3692 16.6885 li
29.128 16.4922 li
28.9395 16.4922 li
28.6543 16.3936 li
28.4639 16.2959 li
28.084 16.2959 li
28.084 16.3936 li
27.9893 16.5918 li
27.8936 16.5918 li
27.7051 16.4922 li
27.42 16.3936 li
27.2305 16.1983 li
26.9473 16.1983 li
26.9473 16.002 li
27.1368 16.002 li
27.0411 15.8057 li
26.9473 15.8057 li
26.9473 15.0196 li
27.0411 15.1182 li
26.9473 14.8243 li
26.9473 14.5782 li
27.0411 14.628 li
27.2305 14.9219 li
27.2305 15.1182 li
27.1368 15.3145 li
27.3243 15.5108 li
27.5157 15.3145 li
27.6104 15.1182 li
27.7051 14.628 li
27.7051 14.4307 li
27.5157 14.0391 li
27.3243 13.9395 li
27.1368 13.8428 li
26.9473 13.9073 li
26.9473 13.6788 li
27.0411 13.6456 li
27.2305 13.6456 li
27.5157 13.7442 li
27.7051 13.9395 li
27.8936 14.2354 li
27.9893 14.8243 li
27.7989 15.3145 li
27.6104 15.6104 li
27.42 15.7081 li
27.5157 16.002 li
27.7051 16.1983 li
28.6543 14.9219 li
29.5079 13.5479 li
29.5079 13.3516 li
29.4122 13.0577 li
29.2237 12.6651 li
29.2237 13.4493 li
29.128 13.7442 li
28.9395 14.1377 li
28.5586 14.7256 li
27.9893 15.3145 li
28.1797 13.8428 li
28.3692 13.1553 li
28.7481 12.5665 li
28.5586 12.4678 li
28.4639 12.4678 li
28.1797 12.5665 li
27.9893 12.7627 li
27.7051 12.8614 li
27.42 13.0577 li
27.1368 13.0577 li
26.9473 13.0245 li
26.9473 12.6387 li
27.2305 12.5665 li
27.5157 12.5665 li
27.7989 12.4678 li
27.9893 12.3702 li
26.9473 12.2793 li
26.9473 11.9776 li
27.0411 11.9776 li
27.6104 12.0762 li
27.3243 11.879 li
27.0411 11.584 li
26.9473 11.4854 li
26.9473 11.0694 li
27.0411 11.0948 li
27.6104 11.0948 li
27.9893 11.1915 li
28.3692 11.3887 li
28.7481 11.6827 li
28.9395 11.9776 li
28.9395 11.879 li
28.7481 11.0948 li
28.3692 10.5049 li
27.7989 9.91407 li
27.42 9.22852 li
27.42 9.71973 li
27.2305 10.21 li
26.9473 10.6026 li
26.9473 10.6036 li
26.9473 10.21 li
27.1368 9.71973 li
27.2305 9.22852 li
27.0411 9.22852 li
26.9473 9.32715 li
26.9473 9.32813 li
26.9473 9.13086 li
27.1368 8.9336 li
26.9473 8.89551 li
26.9473 8.68067 li
27.3243 8.73829 li
27.2305 8.542 li
27.1368 8.44336 li
26.9473 8.04981 li
26.9473 7.69532 li
27.5157 8.63965 li
27.5157 8.9336 li
27.6104 9.22852 li
27.9893 9.81739 li
28.6543 10.5049 li
29.128 11.9776 li
29.6983 13.1553 li
29.8877 13.1553 li
29.8877 13.4493 li
29.6983 13.9395 li
29.3174 14.4307 li
28.7481 15.3145 li
28.9395 15.5108 li
29.2237 15.6104 li
29.792 15.7081 li
29.2237 15.4131 li
29.128 15.2178 li
29.3174 15.2178 li
29.5079 15.3145 li
29.792 15.4131 li
29.9805 15.4131 li
29.6026 15.1182 li
29.4122 14.9219 li
29.3174 14.7256 li
29.4122 14.7256 li
29.6026 14.9219 li
29.792 15.0206 li
30.1719 15.0206 li
29.6026 14.4307 li
29.792 14.4307 li
30.3614 14.7256 li
30.0772 14.4307 li
29.8877 14.0391 li
30.0772 14.1377 li
30.2666 14.2354 li
30.3614 14.334 li
30.5508 14.4307 li
30.5508 14.334 li
30.2666 14.0391 li
30.0772 13.6456 li
30.6475 14.0391 li
30.7413 14.0391 li
30.836 13.9395 li
30.5508 13.7442 li
30.3614 13.4493 li
30.5508 13.4493 li
30.6475 13.5479 li
30.836 13.6456 li
30.9307 13.7442 li
31.0245 13.6456 li
31.0245 13.5479 li
30.836 13.4493 li
30.7413 13.3516 li
30.7413 13.253 li
30.9307 13.253 li
31.1211 13.3516 li
31.2149 13.3516 li
31.2149 13.253 li
31.0245 13.0577 li
31.2149 13.0577 li
31.4053 13.1553 li
31.5 13.0577 li
31.4053 12.9581 li
31.3116 12.9581 li
31.3116 12.8614 li
31.4053 12.7627 li
31.5 12.8614 li
31.5958 12.8614 li
31.7852 12.7627 li
31.7852 12.6651 li
31.6885 12.6651 li
31.7852 12.5665 li
32.0694 12.5665 li
32.0694 12.3702 li
32.3545 12.3702 li
32.4483 12.1729 li
32.544 12.0762 li
32.7334 12.0762 li
32.8292 11.9776 li
32.6387 11.9776 li
32.4483 11.7803 li
32.7334 11.7803 li
32.9229 11.879 li
33.1133 11.9776 li
33.3028 11.879 li
32.544 11.2901 li
32.1651 11.584 li
31.7852 11.7803 li
30.9307 12.3702 li
30.5508 12.6651 li
30.0772 12.8614 li
29.8877 12.7627 li
29.6983 12.6651 li
29.6983 12.5665 li
29.8877 12.5665 li
29.4122 12.0762 li
29.6983 12.0762 li
29.6026 11.9776 li
29.5079 11.879 li
29.3174 11.7803 li
29.3174 11.6827 li
29.5079 11.7803 li
29.4122 11.584 li
29.3174 11.4874 li
29.2237 11.4874 li
29.128 11.2901 li
29.4122 11.3887 li
29.2237 11.1915 li
29.128 11.1915 li
29.128 11.0948 li
29.2237 11.0948 li
29.3174 11.1915 li
29.4122 11.0948 li
29.3174 10.9952 li
29.2237 10.7999 li
28.8438 10.6026 li
29.0333 10.6026 li
29.2237 10.7012 li
29.128 10.5049 li
28.9395 10.3086 li
28.4639 10.0127 li
28.8438 10.0127 li
28.7481 9.81739 li
28.5586 9.71973 li
28.3692 9.71973 li
28.2745 9.52247 li
28.5586 9.52247 li
28.4639 9.32715 li
28.2745 9.32715 li
28.084 9.22852 li
27.9893 9.13086 li
28.084 9.03223 li
28.1797 9.03223 li
28.1797 8.83594 li
28.084 8.63965 li
27.8936 8.542 li
27.42 8.04981 li
27.42 7.8545 li
27.0411 7.36329 li
26.9473 7.07032 li
26.9473 5.79102 li
26.9473 5.98926 li
27.0411 6.28321 li
27.1368 6.4795 li
27.0411 6.77344 li
27.1368 6.97071 li
27.3243 7.06934 li
27.3243 6.67676 li
27.5157 6.08692 li
27.7051 5.89161 li
27.9893 5.69336 li
28.4639 5.4004 li
28.9395 5.00782 li
28.9395 5.30079 li
28.8438 5.49805 li
28.8438 5.79297 li
28.7481 5.98926 li
28.5586 6.4795 li
27.7989 7.26563 li
27.6104 7.26563 li
27.6104 7.46094 li
27.7051 7.8545 li
28.1797 7.26563 li
28.7481 6.87305 li
28.9395 6.67676 li
29.0333 6.4795 li
29.4122 5.69336 li
29.6983 5.4004 li
29.6026 5.20411 li
29.5079 5.10645 li
29.2237 4.90918 li
28.9395 4.71192 li
28.6543 4.41895 li
28.1797 4.51661 li
27.6104 4.51661 li
27.7051 4.61426 li
27.8936 4.90918 li
27.8936 5.30079 li
27.7989 5.69336 li
27.5157 5.59766 li
27.2305 5.30079 li
26.9473 4.93458 li
26.9473 2.55372 li
27.0411 2.65235 li
27.2305 1.66895 li
27.2305 1.08106 li
27.0411 0.589844 li
26.9473 1.08106 li
26.9473 1.08301 li
0 0 0 1 cmyk
ef
49.7178 44.1749 mo
49.8116 44.1749 li
49.7178 44.2735 li
49.7178 44.1749 li
cp
49.0538 45.1553 mo
49.2432 45.2549 li
50.3819 45.2549 li
50.7608 45.0577 li
50.3819 44.8624 li
49.9073 44.8624 li
49.4327 44.96 li
49.0538 45.0577 li
49.8116 44.5665 li
50.1924 44.4698 li
50.6661 44.4698 li
50.8555 44.8624 li
51.1407 45.1553 li
51.6153 45.7452 li
51.709 45.7452 li
51.6153 45.4512 li
51.4249 45.0577 li
50.8555 44.4698 li
51.2354 44.4698 li
51.6153 44.5665 li
51.9942 44.7637 li
52.2784 45.0577 li
52.3731 45.3526 li
52.3731 45.6475 li
52.2784 46.2374 li
52.3731 46.2374 li
52.4698 46.1387 li
52.4698 46.0401 li
52.5645 45.9424 li
52.6573 45.7452 li
52.754 45.4512 li
52.5645 44.96 li
51.9942 44.4698 li
51.3301 44.1749 li
50.9512 44.0762 li
50.5723 44.0762 li
50.1924 44.1749 li
49.8116 44.2735 li
50.0967 43.9786 li
50.4766 43.7823 li
50.9512 43.6846 li
51.3301 43.4874 li
51.4249 43.3887 li
51.2354 43.3887 li
51.046 43.292 li
50.8555 43.292 li
50.6661 43.1934 li
50.3819 43.292 li
50.1924 43.4874 li
49.9073 43.6846 li
49.7178 43.8799 li
49.4327 44.4698 li
49.1475 44.6661 li
48.9581 44.7637 li
48.8643 44.8624 li
49.0538 44.4698 li
49.2432 44.1749 li
49.5264 43.8799 li
49.6231 43.4874 li
49.6231 43.292 li
48.8643 44.0762 li
48.6749 44.3711 li
48.6749 45.0577 li
48.5782 45.3526 li
48.293 45.6475 li
48.7686 45.2549 li
0 0 0 1 cmyk
ef
49.6231 45.5489 mo
49.9532 45.6475 li
49.7178 45.5489 li
49.1485 45.3516 li
0 0 0 1 cmyk
f
24.2891 40.543 mo
24.4795 40.543 li
24.669 40.3458 li
0 0 0 1 cmyk
f
23.625 40.543 mo
23.5303 40.3467 li
23.4356 39.9542 li
23.5303 39.6592 li
23.625 39.4629 li
23.9102 39.3643 li
24.0997 39.5626 li
24.1944 39.8545 li
24.004 40.0518 li
23.8155 40.0518 li
23.9102 40.1495 li
24.004 40.1495 li
24.2891 39.8545 li
24.2891 39.5626 li
24.1944 39.2666 li
24.004 39.168 li
23.625 39.168 li
23.2452 39.5626 li
23.1514 39.7579 li
23.2452 40.2481 li
23.625 40.6397 li
24.1944 40.6397 li
24.1944 40.7393 li
24.2891 40.543 li
23.9102 40.543 li
0 0 0 1 cmyk
ef
35.1055 42.7999 mo
35.2012 42.7022 li
35.4864 42.7999 li
35.3907 42.8985 li
35.0118 42.8985 li
35.1055 42.7999 li
cp
34.9151 42.9971 mo
35.1055 43.0948 li
35.6758 42.9971 li
35.8653 42.8985 li
36.0547 42.7022 li
35.3907 42.6036 li
35.0118 42.5049 li
34.7266 42.6036 li
34.4424 42.7999 li
34.252 43.3887 li
34.6329 42.9971 li
0 0 0 1 cmyk
ef
29.792 33.2793 mo
29.6016 33.4747 li
29.8877 33.2793 li
0 0 0 1 cmyk
f
24.668 27.0938 mo
24.6846 27.0127 li
24.668 26.9961 li
0 0 0 1 cmyk
f
27.42 47.3155 mo
26.9473 47.4151 li
26.377 47.6114 li
26.377 47.4151 li
26.4717 47.3155 li
26.6602 47.4151 li
26.9473 47.3155 li
27.42 47.3155 li
cp
27.6104 47.5127 mo
27.5147 47.7081 li
27.42 47.8067 li
27.1358 47.8067 li
26.5674 48.004 li
26.2813 48.004 li
26.377 47.8067 li
26.9473 47.7081 li
27.3243 47.6114 li
27.6104 47.5127 li
cp
26.8506 48.2979 mo
26.6602 48.4942 li
26.2813 48.2979 li
26.4717 48.2002 li
26.8506 48.2002 li
27.0411 48.1006 li
26.8506 48.2979 li
cp
26.6602 47.1202 mo
26.8506 46.9229 li
27.0411 46.8252 li
27.1358 47.0215 li
27.0411 47.1202 li
26.8506 47.1202 li
26.6602 47.2188 li
26.6602 47.1202 li
cp
27.3243 45.7452 mo
26.8506 45.7452 li
26.6602 45.8438 li
26.5674 45.9424 li
27.3243 45.9424 li
27.3243 46.0411 li
27.0411 46.1377 li
26.377 46.1377 li
27.0411 46.2364 li
27.0411 46.334 li
26.9473 46.4327 li
26.4717 46.4327 li
25.9981 46.334 li
25.9024 46.4327 li
26.2813 46.5313 li
26.6602 46.628 li
26.2813 46.8252 li
25.8077 46.7276 li
25.712 46.7276 li
25.712 46.8252 li
26.2813 47.0215 li
26.1876 47.1202 li
25.8077 47.1202 li
25.712 47.2188 li
26.0918 47.2188 li
26.0918 47.5127 li
25.9981 47.6114 li
25.8077 47.6114 li
25.5235 47.5127 li
25.8077 47.7081 li
25.9981 47.9053 li
26.0918 48.2002 li
26.2813 48.4942 li
26.377 48.5928 li
26.5674 48.6905 li
26.8506 48.6905 li
26.7559 48.5928 li
26.8506 48.4942 li
26.9473 48.2979 li
27.2305 48.2979 li
27.3243 48.2002 li
27.7051 47.7081 li
27.9893 47.1202 li
28.2745 46.7276 li
27.8936 47.1202 li
27.7051 47.2188 li
27.6104 47.0215 li
27.42 46.9229 li
27.3243 46.8252 li
27.2305 46.628 li
27.42 46.4327 li
27.5147 46.0411 li
27.7051 45.4512 li
27.5147 45.3526 li
27.3243 45.4512 li
26.8506 45.5499 li
27.5147 45.5499 li
0 0 0 1 cmyk
ef
19.0704 47.7081 mo
19.4493 47.6114 li
19.9249 47.6114 li
19.9249 47.5127 li
19.1661 47.6114 li
18.4063 47.8067 li
17.7422 48.004 li
16.2247 48.3956 li
14.6114 48.3956 li
13.8516 48.2979 li
13.8516 48.3956 li
14.7061 48.5928 li
15.6553 48.6905 li
16.5088 48.5928 li
17.3624 48.3956 li
18.2159 48.1006 li
0 0 0 1 cmyk
ef
9.39356 48.3956 mo
9.1084 48.5918 li
10.3418 48.5918 li
10.3418 48.3956 li
0 0 0 1 cmyk
f
6.2627 48.004 mo
5.97559 48.2002 li
5.97559 48.4942 li
6.07227 48.2989 li
6.2627 48.2002 li
6.73633 48.1006 li
7.21094 48.2989 li
6.45215 48.2989 li
6.2627 48.4942 li
6.2627 48.5928 li
6.45215 48.5928 li
6.64161 48.4942 li
7.49512 48.4942 li
7.58985 48.3965 li
7.58985 48.2989 li
7.30567 48.2989 li
7.30567 48.1006 li
7.11426 48.004 li
0 0 0 1 cmyk
f
32.7325 47.9542 mo
32.8292 47.9053 li
32.9229 47.8067 li
0 0 0 1 cmyk
f
32.6387 48.004 mo
32.544 48.1006 li
32.7325 47.9542 li
0 0 0 1 cmyk
f
31.8809 48.2002 mo
31.5958 48.2979 li
31.3116 48.4942 li
32.1651 48.2979 li
32.545 48.1006 li
32.4483 48.004 li
0 0 0 1 cmyk
f
17.8379 48.3956 mo
17.8379 48.4932 li
17.9317 48.3956 li
0 0 0 1 cmyk
f
51.046 48.3956 mo
51.046 48.4932 li
51.1407 48.3956 li
0 0 0 1 cmyk
f
14.042 47.5127 mo
14.2325 47.4151 li
14.3272 47.5127 li
15.75 47.5127 li
16.0342 47.4151 li
16.6036 47.4151 li
17.0782 47.3155 li
17.9317 47.0215 li
18.8809 46.7276 li
19.3555 46.628 li
18.501 46.628 li
17.3633 47.0215 li
16.129 47.2178 li
13.5674 47.3155 li
13.7579 47.4151 li
0 0 0 1 cmyk
ef
12.9034 47.2178 mo
12.335 46.8252 li
12.2393 46.5303 li
12.4288 46.7276 li
12.8086 46.8252 li
13.0928 47.0215 li
13.2842 47.3145 li
12.9034 47.2178 li
cp
12.0489 47.6104 mo
11.9551 47.4131 li
11.9551 46.9229 li
12.1446 47.1192 li
12.1446 47.3145 li
12.2393 47.9053 li
12.0489 47.6104 li
cp
11.67 45.1553 mo
11.5752 44.8614 li
11.5752 44.5665 li
11.8604 45.0577 li
11.8604 45.3526 li
11.9551 45.6475 li
11.67 45.1553 li
cp
11.7647 47.5127 mo
11.4805 47.5127 li
11.7647 47.1192 li
11.7647 47.5127 li
cp
11.0059 47.6104 mo
11.1954 47.0215 li
11.3858 46.7276 li
11.67 46.628 li
11.5752 46.9229 li
11.4805 47.1192 li
11.0059 47.6104 li
cp
11.0059 46.5303 mo
10.3418 46.628 li
10.627 46.334 li
10.9112 46.2364 li
11.4805 46.2364 li
11.2911 46.4327 li
11.0059 46.5303 li
cp
11.4805 45.7452 mo
10.9112 45.6475 li
10.7208 45.4502 li
10.5323 45.1553 li
10.8165 45.2549 li
11.1006 45.3526 li
11.5752 45.7452 li
11.4805 45.7452 li
cp
12.0489 46.0401 mo
12.1446 46.0401 li
12.2393 45.9415 li
12.2393 45.8438 li
12.4288 45.4502 li
12.8086 45.0577 li
12.7139 45.4502 li
12.4288 45.9415 li
12.1446 46.2364 li
12.0489 46.1377 li
12.0489 46.0401 li
cp
12.9991 46.334 mo
13.378 46.334 li
14.043 46.628 li
13.378 46.628 li
12.9991 46.5303 li
12.7139 46.334 li
12.9991 46.334 li
cp
13.0928 45.7452 mo
13.1876 45.6475 li
13.378 45.5489 li
13.5674 45.3526 li
13.7579 45.2549 li
14.043 45.1553 li
13.8526 45.4502 li
13.6631 45.6475 li
13.0928 45.8438 li
13.0928 45.7452 li
cp
12.335 44.6661 mo
12.9991 43.9776 li
12.7139 44.5665 li
12.5245 44.8614 li
12.2393 45.0577 li
12.335 44.6661 li
cp
13.1876 43.585 mo
13.378 43.4874 li
13.9483 43.3887 li
13.2842 43.7823 li
13.2842 43.6846 li
13.1876 43.6846 li
13.0928 43.7823 li
12.9991 43.6846 li
13.1876 43.585 li
cp
12.0489 41.2295 mo
11.9551 41.5245 li
11.8604 41.3272 li
11.8604 41.0333 li
11.9551 40.4444 li
12.0489 40.3467 li
12.1446 40.9356 li
12.0489 41.2295 li
cp
11.4805 42.211 mo
11.2911 42.0147 li
11.2911 41.4258 li
11.4805 41.6221 li
11.5752 41.917 li
11.7647 42.4073 li
11.4805 42.211 li
cp
13.6631 44.3702 mo
13.8526 44.1749 li
14.043 44.1749 li
13.5674 44.6661 li
13.2842 44.6661 li
13.6631 44.3702 li
cp
14.8018 44.2725 mo
15.085 44.1749 li
15.3711 44.2725 li
15.085 44.3702 li
14.8965 44.5665 li
14.6124 44.6661 li
14.4209 44.6661 li
14.8018 44.2725 li
cp
13.5674 47.3145 mo
13.0928 46.8252 li
13.378 46.8252 li
14.8965 46.9229 li
15.5606 47.0215 li
16.793 47.0215 li
17.2676 46.9229 li
18.9766 46.334 li
19.3555 46.2364 li
19.0704 46.2364 li
18.4063 46.334 li
17.4581 46.628 li
16.5088 46.8252 li
14.6124 46.8252 li
14.4209 46.7276 li
14.3272 46.7276 li
14.2325 46.628 li
14.8965 46.628 li
15.4659 46.7276 li
16.0342 46.7276 li
16.6036 46.628 li
18.6915 46.0401 li
19.8311 45.8438 li
19.8311 45.7452 li
18.5977 45.7452 li
17.5528 46.1377 li
16.4141 46.334 li
14.1368 46.4327 li
13.6631 46.2364 li
13.2842 46.1377 li
13.2842 46.0401 li
13.4737 45.9415 li
13.6631 45.9415 li
13.8526 45.8438 li
14.1368 45.4502 li
14.2325 45.3526 li
14.2325 45.2549 li
14.3272 45.1553 li
14.4209 45.1553 li
14.5167 45.0577 li
14.4209 45.0577 li
14.7061 44.8614 li
14.8965 44.8614 li
15.2754 44.4698 li
15.5606 44.3702 li
15.75 44.3702 li
15.8448 44.2725 li
15.5606 44.1749 li
15.4659 44.0762 li
15.2754 43.9776 li
15.085 43.9776 li
14.8018 44.0762 li
14.4209 44.3702 li
14.3272 44.4698 li
14.1368 44.5665 li
14.043 44.6661 li
13.8526 44.7637 li
14.1368 44.7637 li
14.2325 44.8614 li
14.2325 44.96 li
13.8526 44.96 li
13.4737 45.0577 li
12.9034 45.6475 li
12.8086 45.6475 li
12.9034 45.2549 li
12.9991 44.96 li
13.378 44.8614 li
13.7579 44.7637 li
14.3272 44.1749 li
14.5167 44.0762 li
14.6124 44.0762 li
14.6124 43.9776 li
14.2325 43.8799 li
13.8526 43.9776 li
12.9034 44.7637 li
12.1446 45.5489 li
12.1446 45.3526 li
12.2393 45.1553 li
12.5245 44.96 li
12.8086 44.6661 li
12.9991 44.3702 li
13.1876 43.9776 li
13.6631 43.8799 li
13.8526 43.7823 li
14.1368 43.585 li
14.2325 43.3887 li
14.2325 43.1934 li
14.1368 43.292 li
13.2842 43.3887 li
12.9034 43.4874 li
12.6182 43.7823 li
12.8086 43.7823 li
12.9034 43.8799 li
12.335 44.2725 li
12.6182 43.3887 li
12.5245 43.292 li
12.4288 43.292 li
12.6182 42.8985 li
12.7139 42.4073 li
12.6182 42.4073 li
12.5245 42.3106 li
12.335 42.7032 li
12.2393 42.9971 li
12.1446 42.6036 li
12.1446 42.211 li
12.2393 41.7208 li
12.2393 41.3272 li
12.335 40.9356 li
12.1446 40.3467 li
12.2393 39.9542 li
11.9551 40.1495 li
11.8604 40.543 li
11.67 40.837 li
11.67 41.2295 li
11.7647 41.5245 li
12.0489 41.8194 li
12.0489 42.0147 li
11.9551 42.211 li
11.8604 41.8194 li
11.67 41.5245 li
11.3858 41.1319 li
11.1006 40.837 li
11.0059 40.837 li
11.0059 41.3272 li
11.1954 42.1133 li
11.3858 42.5059 li
11.5752 42.5059 li
11.7647 42.6036 li
11.9551 42.8985 li
12.1446 43.292 li
12.2393 43.3887 li
12.4288 43.4874 li
12.1446 44.6661 li
11.9551 45.0577 li
11.8604 44.7637 li
11.7647 44.5665 li
11.8604 44.5665 li
11.8604 44.6661 li
11.9551 44.5665 li
12.0489 44.5665 li
12.0489 43.9776 li
11.9551 43.6846 li
11.8604 43.292 li
11.67 43.0938 li
11.8604 43.7823 li
11.9551 44.0762 li
11.9551 44.4698 li
11.8604 44.4698 li
11.67 43.9776 li
11.5752 43.6846 li
11.5752 43.8799 li
11.67 44.4698 li
11.5752 44.3702 li
11.4805 44.4698 li
11.3858 44.7637 li
11.4805 45.0577 li
11.67 45.5489 li
11.5752 45.6475 li
11.2911 45.2549 li
10.8165 45.0577 li
10.5323 45.0577 li
10.3418 45.1553 li
10.5323 45.3526 li
10.7208 45.6475 li
10.9112 45.8438 li
11.2911 45.9415 li
11.5752 46.0401 li
10.8165 46.0401 li
10.4376 46.1377 li
10.2471 46.5303 li
10.0567 46.2364 li
9.77247 46.2364 li
9.67774 46.1377 li
9.67774 45.8438 li
9.48731 45.6475 li
9.29883 45.6475 li
9.1084 45.7452 li
8.63282 45.9415 li
8.7295 46.0401 li
8.44434 46.1377 li
7.96973 46.628 li
7.78126 46.628 li
7.68458 46.7276 li
7.87403 46.7276 li
8.06446 46.628 li
8.44434 46.4327 li
9.0127 46.0401 li
9.58204 46.0401 li
9.67774 46.2364 li
9.58204 46.2364 li
8.63282 46.628 li
8.91797 46.628 li
9.29883 46.5303 li
9.58204 46.4327 li
9.86817 46.4327 li
10.1524 46.5303 li
10.0567 46.628 li
10.0567 46.7276 li
10.627 46.7276 li
10.8165 46.8252 li
11.1006 46.7276 li
10.8165 47.6104 li
10.9112 47.9053 li
11.2911 47.7081 li
11.8604 47.7081 li
11.9551 47.9053 li
11.5752 47.8067 li
11.1954 47.9053 li
11.67 47.9053 li
11.9551 48.004 li
12.2393 48.1006 li
11.7647 48.1006 li
11.4805 48.2002 li
11.2911 48.2979 li
12.335 48.2979 li
12.8086 48.3956 li
13.378 48.4932 li
13.378 48.3956 li
12.9034 48.2002 li
12.5245 48.2002 li
12.4288 48.1006 li
12.4288 47.2178 li
13.0928 47.5127 li
13.6631 47.8067 li
13.5674 47.6104 li
0 0 0 1 cmyk
ef
8.72852 48.1006 mo
8.63282 48.2002 li
8.63282 48.2989 li
8.72852 48.3965 li
9.0127 48.2002 li
10.0567 48.2002 li
9.39258 48.1006 li
0 0 0 1 cmyk
f
20.4952 48.004 mo
19.8311 48.1006 li
20.3047 48.1006 li
20.7793 48.004 li
21.917 48.1006 li
23.7208 48.2002 li
24.5743 48.2989 li
25.5235 48.2002 li
25.4288 48.1006 li
24.7637 48.2002 li
24.004 48.1006 li
22.6768 48.004 li
21.253 47.9053 li
0 0 0 1 cmyk
f
17.9317 47.3155 mo
16.9825 47.6114 li
15.9395 47.8067 li
14.8956 47.9053 li
13.8516 47.9053 li
13.8516 48.004 li
14.2325 48.1006 li
16.0342 48.1006 li
16.6036 48.004 li
17.7422 47.6114 li
18.7852 47.2188 li
19.9249 47.0215 li
18.9756 47.0215 li
0 0 0 1 cmyk
ef
8.44434 47.6114 mo
8.15918 47.7081 li
7.96973 47.8067 li
7.78126 48.004 li
7.78126 48.1006 li
8.15918 47.9053 li
8.63282 47.8067 li
9.1084 47.8067 li
9.58204 47.9053 li
9.67774 47.8067 li
8.91797 47.6114 li
0 0 0 1 cmyk
f
5.88184 48.004 mo
6.16602 47.9053 li
6.5459 47.8067 li
7.11426 47.8067 li
7.11426 47.7081 li
6.45215 47.6114 li
6.26172 47.7081 li
5.97754 47.8067 li
5.78711 47.8067 li
5.69239 47.6114 li
5.69239 47.5127 li
5.40723 47.3155 li
5.31348 47.1202 li
5.31348 46.8252 li
5.40723 46.7276 li
5.59668 46.628 li
5.31348 46.5313 li
5.2168 46.5313 li
5.12305 46.628 li
5.02735 46.8252 li
5.02735 46.9229 li
5.12305 47.3155 li
5.02735 47.4151 li
4.8379 47.4151 li
4.74317 47.6114 li
4.45801 47.7081 li
4.26856 47.9053 li
4.26856 48.004 li
4.36426 48.004 li
4.45801 47.8067 li
4.64942 47.7081 li
5.02735 47.7081 li
5.78711 47.9053 li
5.78711 48.004 li
0 0 0 1 cmyk
ef
52.6573 47.4151 mo
53.2276 47.8067 li
53.5118 47.9053 li
53.8907 48.003 li
53.8907 47.9053 li
53.6075 47.6104 li
53.3233 47.5127 li
52.6573 47.3155 li
0 0 0 1 cmyk
f
23.9102 47.5127 mo
23.5303 47.7081 li
24.2891 47.7081 li
24.4795 47.6114 li
24.5743 47.5127 li
24.5743 47.4151 li
24.3838 47.2178 li
24.0997 47.0215 li
23.5303 46.9229 li
23.5303 47.0215 li
23.7198 47.0215 li
23.9102 47.1202 li
24.2891 47.2178 li
24.0997 47.4151 li
0 0 0 1 cmyk
ef
8.06446 47.2178 mo
7.58985 47.4131 li
7.30567 47.7081 li
7.7793 47.5118 li
8.16016 47.4131 li
9.1084 47.4131 li
9.39258 47.5118 li
9.48731 47.5118 li
9.58106 47.4131 li
9.58106 47.3145 li
9.39258 47.2178 li
0 0 0 1 cmyk
f
33.1133 47.4131 mo
32.8292 47.7081 li
33.0176 47.6104 li
33.2081 47.4131 li
0 0 0 1 cmyk
f
21.6338 47.4131 mo
21.4434 47.5127 li
21.7286 47.5127 li
21.7286 47.4131 li
21.8223 47.4131 li
21.917 47.3145 li
0 0 0 1 cmyk
f
6.16602 47.1192 mo
5.97754 47.3145 li
5.88184 47.5118 li
6.16602 47.3145 li
6.5459 47.2178 li
6.92481 47.2178 li
7.30567 47.3145 li
7.02051 47.1192 li
6.64063 47.0215 li
0 0 0 1 cmyk
f
22.1065 46.9229 mo
21.8223 47.0215 li
21.6319 47.0215 li
21.4424 47.2188 li
22.0108 47.1192 li
22.4864 47.0215 li
22.4864 46.9229 li
0 0 0 1 cmyk
f
7.87403 46.9229 mo
7.68458 47.0215 li
7.97071 46.9229 li
8.25391 46.9229 li
8.44434 47.0215 li
8.44434 46.9229 li
8.34961 46.9229 li
7.97071 46.8252 li
0 0 0 1 cmyk
f
22.2959 46.5303 mo
21.7286 46.628 li
21.4424 46.7276 li
21.3477 46.8252 li
21.253 46.9229 li
21.7286 46.9229 li
22.1065 46.7276 li
22.4874 46.628 li
22.962 46.5303 li
22.962 46.4327 li
0 0 0 1 cmyk
f
5.88282 46.7276 mo
5.78809 46.8262 li
5.88282 46.9229 li
5.88282 46.8262 li
5.97754 46.7276 li
0 0 0 1 cmyk
f
6.83106 46.1377 mo
6.45215 46.334 li
6.35645 46.4327 li
6.2627 46.628 li
6.54688 46.334 li
7.21094 46.334 li
7.49512 46.628 li
7.49512 46.7266 li
7.58985 46.628 li
7.58985 46.5313 li
7.4004 46.2364 li
7.11622 46.0401 li
0 0 0 1 cmyk
f
25.1426 46.2364 mo
25.1426 46.1377 li
24.9522 46.0401 li
24.7637 46.0401 li
24.8584 46.1377 li
24.7637 46.334 li
24.669 46.4327 li
24.3838 46.5313 li
24.669 46.5313 li
24.8584 46.4327 li
25.1426 46.5313 li
25.3331 46.5313 li
25.712 46.4327 li
26.0918 46.0401 li
26.0918 45.8438 li
25.9014 45.6475 li
25.4278 45.6475 li
25.4278 45.8438 li
25.5225 45.8438 li
25.5225 45.7452 li
25.8077 45.7452 li
25.8077 45.9415 li
25.712 46.1377 li
25.1426 46.4327 li
25.0479 46.334 li
25.1426 46.334 li
0 0 0 1 cmyk
ef
24.2891 46.0401 mo
24.2891 46.1377 li
24.5743 46.1377 li
24.7637 46.0401 li
0 0 0 1 cmyk
f
22.5821 45.9424 mo
21.917 46.1387 li
21.6338 46.334 li
21.4434 46.334 li
21.4434 46.5303 li
23.3409 45.9424 li
0 0 0 1 cmyk
f
16.6036 45.9415 mo
16.4141 46.0401 li
16.2247 45.9415 li
16.129 45.9415 li
16.4141 45.8438 li
16.793 45.7452 li
16.6036 45.9415 li
cp
18.7872 45.1553 mo
18.9756 45.0567 li
19.1661 44.8614 li
18.7872 44.8614 li
18.7872 44.96 li
18.3126 45.2549 li
17.8379 45.6465 li
17.8379 45.7452 li
17.6485 45.7452 li
17.6485 45.5489 li
16.5088 45.5489 li
15.8448 45.8438 li
15.5606 45.9415 li
15.3711 45.8438 li
15.2745 45.7452 li
14.9913 45.6465 li
14.6114 45.6465 li
13.9483 45.7452 li
14.1368 45.9415 li
14.2325 45.9415 li
14.6114 45.8438 li
15.085 45.8438 li
15.2745 46.0401 li
14.8018 46.1377 li
14.4209 46.1377 li
14.4209 46.2364 li
14.5167 46.2364 li
14.9913 46.334 li
15.2745 46.2364 li
15.4659 46.0401 li
15.9395 46.2364 li
16.5088 46.2364 li
16.8887 46.0401 li
16.9825 45.9415 li
17.1729 45.8438 li
17.6485 45.8438 li
17.7422 45.9415 li
17.8379 45.8438 li
18.7872 45.6465 li
19.8301 45.4502 li
18.9756 45.3516 li
18.9756 45.2549 li
18.8809 45.4502 li
18.4063 45.4502 li
18.5967 45.2549 li
0 0 0 1 cmyk
ef
21.3477 46.0401 mo
21.3477 46.2364 li
22.4874 45.8438 li
23.7198 45.3516 li
22.4874 45.5489 li
21.917 45.6475 li
21.3477 45.9415 li
0 0 0 1 cmyk
ef
9.86719 45.6475 mo
10.3418 45.8438 li
10.0567 45.5489 li
0 0 0 1 cmyk
f
21.5372 45.3526 mo
21.3477 45.4512 li
21.3477 45.6475 li
22.0108 45.3526 li
22.6768 45.1563 li
24.1924 44.8624 li
21.917 45.2549 li
0 0 0 1 cmyk
ef
25.9014 45.3516 mo
26.0918 45.4502 li
26.2813 45.4502 li
26.0918 45.3516 li
0 0 0 1 cmyk
f
21.5372 44.8614 mo
21.1573 45.0567 li
20.7784 45.4502 li
21.7276 45.0567 li
22.5811 44.8614 li
23.5303 44.6661 li
24.4795 44.5665 li
23.4346 44.5665 li
22.4864 44.6661 li
22.0108 44.6661 li
0 0 0 1 cmyk
ef
27.6104 45.2549 mo
27.7051 45.2549 li
27.7051 45.1553 li
0 0 0 1 cmyk
f
27.5147 45.0577 mo
27.42 45.0577 li
27.3243 45.1563 li
27.2305 45.1563 li
27.2305 45.2549 li
27.5147 45.2549 li
27.5147 45.1563 li
27.6104 45.0577 li
0 0 0 1 cmyk
f
26.1876 45.0586 mo
26.4727 45.0586 li
26.4727 44.96 li
26.1876 44.96 li
26.1876 45.0586 li
0 0 0 1 cmyk
f
20.8741 44.5665 mo
20.4942 44.6661 li
20.209 44.8614 li
20.0196 45.0577 li
20.4942 44.7637 li
20.7784 44.6661 li
21.1573 44.7637 li
21.253 44.6661 li
21.1573 44.5665 li
0 0 0 1 cmyk
f
21.3477 43.7823 mo
21.1573 43.8799 li
20.7784 43.9776 li
20.209 44.5665 li
19.8301 44.5665 li
19.7354 44.6661 li
19.6397 44.8614 li
19.5459 44.96 li
19.7354 44.8614 li
20.0196 44.6661 li
20.3047 44.6661 li
20.4942 44.3702 li
20.8741 44.1739 li
21.1573 44.0762 li
21.6319 44.0762 li
21.6319 43.9776 li
21.5381 43.8799 li
0 0 0 1 cmyk
ef
10.7208 43.1934 mo
10.627 42.8008 li
10.8165 43.0948 li
11.0059 43.4874 li
11.1954 43.7823 li
11.2901 44.1749 li
11.0059 43.9786 li
10.8165 43.585 li
10.7208 43.1934 li
cp
10.627 44.0762 mo
10.5313 43.8809 li
10.1514 43.4874 li
9.96094 43.4874 li
10.2461 44.2735 li
10.3418 44.5665 li
10.627 44.8624 li
10.8165 44.96 li
11.0059 44.96 li
11.1954 44.8624 li
11.2901 44.6661 li
11.2901 44.5665 li
11.0997 44.7637 li
10.8165 44.7637 li
10.4376 44.3711 li
10.2461 44.0762 li
10.2461 43.7823 li
10.627 44.3711 li
11.0059 44.4698 li
11.3858 44.4698 li
11.3858 44.0762 li
11.4805 43.9786 li
11.3858 43.7823 li
11.2901 43.4874 li
11.0997 43.1934 li
10.627 42.6036 li
10.5313 42.9971 li
10.5313 43.4874 li
10.627 43.8809 li
10.8165 44.1749 li
10.7208 44.1749 li
0 0 0 1 cmyk
ef
43.6446 44.1749 mo
43.5508 44.7637 li
43.834 43.9786 li
44.0235 43.585 li
44.4043 43.1934 li
44.6885 42.9971 li
45.0694 42.8008 li
45.8272 42.8008 li
45.8272 42.6036 li
45.6377 42.5059 li
45.1622 42.5059 li
44.7833 42.6036 li
44.2139 42.9971 li
43.834 43.585 li
0 0 0 1 cmyk
ef
26.377 44.4698 mo
26.377 44.5665 li
26.6622 44.5665 li
26.4727 44.4698 li
0 0 0 1 cmyk
f
21.6338 44.3702 mo
21.4434 44.5665 li
21.6338 44.4698 li
22.2959 44.4698 li
22.2032 44.3702 li
22.1075 44.3702 li
21.917 44.2725 li
0 0 0 1 cmyk
f
52.3731 43.6846 mo
52.1836 43.585 li
51.9942 43.585 li
51.8047 43.6846 li
51.6143 43.6846 li
51.4249 43.8799 li
51.2354 43.9786 li
52.0889 44.0762 li
52.5635 44.1749 li
52.9424 44.3711 li
52.8487 44.1749 li
52.754 43.9786 li
0 0 0 1 cmyk
ef
22.8663 44.2735 mo
23.1514 44.1749 li
23.625 43.7823 li
24.0997 43.4874 li
24.3838 43.3897 li
24.5743 43.3897 li
24.5743 43.292 li
24.4795 43.1934 li
24.3838 43.1934 li
23.9102 43.3897 li
23.5303 43.7823 li
22.5811 44.3711 li
0 0 0 1 cmyk
ef
22.962 43.6846 mo
22.5821 43.7823 li
23.2452 43.7823 li
23.1514 43.6846 li
0 0 0 1 cmyk
f
15.4659 38.4815 mo
15.4659 38.7754 li
15.3702 39.0694 li
15.1807 39.3643 li
14.9913 39.5616 li
15.085 39.6583 li
15.1807 39.6583 li
15.4659 39.5616 li
15.2745 39.4629 li
15.4659 39.167 li
15.5606 38.8741 li
15.6553 38.2842 li
0 0 0 1 cmyk
f
13.6631 41.2295 mo
13.6631 40.9356 li
13.378 41.1319 li
13.7579 40.7393 li
13.9483 40.837 li
13.8526 40.9356 li
13.9483 40.9356 li
13.9483 41.1319 li
13.5674 41.5245 li
13.5674 41.4258 li
13.2842 41.8184 li
13.0928 42.1133 li
13.0928 41.8184 li
13.1876 41.6221 li
13.4727 41.2295 li
13.5674 41.2295 li
13.5674 41.4258 li
13.6631 41.2295 li
cp
14.042 41.2295 mo
14.2325 41.0333 li
14.3272 41.1319 li
14.042 41.4258 li
14.042 41.7208 li
13.7579 41.8184 li
13.4727 42.0147 li
13.8526 41.5245 li
14.042 41.2295 li
cp
14.3272 39.9542 mo
14.2325 39.6583 li
14.3272 39.3643 li
14.5176 39.168 li
14.5176 40.2481 li
14.4209 40.1495 li
14.3272 39.9542 li
cp
16.0342 39.4629 mo
16.2247 39.2666 li
16.6993 38.9727 li
16.4141 39.4629 li
15.9405 39.7579 li
16.0342 39.4629 li
cp
16.5088 39.8545 mo
16.8887 39.8545 li
17.5528 40.1495 li
16.793 40.1495 li
16.129 39.9542 li
16.5088 39.8545 li
cp
14.8965 40.9356 mo
15.085 40.9356 li
14.8965 41.0333 li
14.7061 40.9356 li
14.8965 40.9356 li
cp
14.9913 41.4258 mo
15.2754 41.4258 li
15.8448 41.6221 li
15.5606 41.6221 li
15.3711 41.7208 li
14.8018 41.5245 li
14.9913 41.4258 li
cp
16.3194 42.1133 mo
16.6036 42.0147 li
16.793 42.1133 li
16.5088 42.211 li
16.129 42.211 li
16.3194 42.1133 li
cp
16.6993 42.8985 mo
16.8887 42.8985 li
17.3633 42.9971 li
16.8887 43.0938 li
16.6036 43.0938 li
16.4141 42.9971 li
16.6993 42.8985 li
cp
14.8965 43.292 mo
15.085 43.292 li
15.4659 43.585 li
15.2754 43.585 li
14.7061 43.292 li
14.8965 43.292 li
cp
15.5606 42.8985 mo
15.6553 42.9971 li
15.8448 43.292 li
15.3711 42.8985 li
15.5606 42.8985 li
cp
13.5674 42.7999 mo
13.378 42.9971 li
13.378 42.8985 li
13.4727 42.7999 li
13.7579 42.6036 li
13.5674 42.7999 li
cp
13.9483 40.2481 mo
13.9483 39.7579 li
14.042 39.4629 li
13.4727 40.2481 li
13.1876 40.837 li
13.1876 41.0333 li
13.2842 41.2295 li
13.1876 41.3272 li
13.0928 41.5245 li
12.9991 41.6221 li
12.9034 41.917 li
12.9991 42.1133 li
12.9991 42.3096 li
12.9034 42.5059 li
12.8077 42.7999 li
12.7139 43.1934 li
12.8077 43.1934 li
13.1876 42.4073 li
13.4727 42.1133 li
13.8526 41.917 li
14.3272 42.0147 li
14.5176 42.1133 li
14.7061 42.3096 li
14.5176 42.3096 li
14.1368 42.1133 li
13.9483 42.1133 li
14.042 42.211 li
13.8526 42.4073 li
13.5674 42.5059 li
13.2842 42.7022 li
13.0928 43.0938 li
13.1876 43.1934 li
13.2842 43.1934 li
13.4727 43.0938 li
13.8526 42.7999 li
14.042 42.6036 li
14.1368 42.3096 li
14.3272 42.3096 li
14.3272 42.6036 li
14.2325 42.7999 li
14.2325 42.8985 li
14.3272 42.9971 li
14.3272 42.7999 li
14.4209 42.6036 li
14.5176 42.7022 li
14.5176 42.7999 li
14.4209 42.8985 li
14.4209 43.0938 li
14.3272 43.1934 li
14.7061 43.585 li
14.9913 43.6846 li
15.6553 43.8799 li
15.75 43.7823 li
15.4659 43.292 li
15.75 43.3887 li
15.9405 43.4874 li
16.4141 43.4874 li
16.0342 42.9971 li
15.8448 42.7999 li
15.5606 42.7022 li
15.1807 42.7022 li
14.9913 42.7999 li
14.8965 42.7999 li
15.1807 42.9971 li
15.3711 43.1934 li
14.9913 43.0938 li
14.8018 43.0938 li
14.7061 43.1934 li
14.6114 42.9971 li
14.6114 42.6036 li
15.085 42.5059 li
15.3711 42.5059 li
15.6553 42.6036 li
16.129 42.8985 li
16.6993 43.292 li
17.2676 43.292 li
17.4571 43.1934 li
17.6485 43.0938 li
17.7422 43.0938 li
17.6485 42.9971 li
17.4571 42.8985 li
17.3633 42.7999 li
17.1729 42.7022 li
16.2247 42.7022 li
15.9405 42.6036 li
15.75 42.4073 li
16.6993 42.4073 li
16.9825 42.211 li
17.3633 42.211 li
17.3633 42.1133 li
16.793 41.8184 li
16.4141 41.8184 li
15.5606 42.4073 li
15.2754 42.3096 li
15.085 42.211 li
14.8018 42.1133 li
14.4209 41.8184 li
14.5176 41.7208 li
14.7061 41.7208 li
14.8965 41.8184 li
15.085 41.917 li
15.5606 41.917 li
16.4141 41.7208 li
15.6553 41.3272 li
15.2754 41.2295 li
14.8965 41.2295 li
14.7061 41.3272 li
14.6114 41.5245 li
14.4209 41.6221 li
14.2325 41.5245 li
14.4209 41.3272 li
14.4209 41.1319 li
15.085 41.1319 li
15.4659 40.9356 li
15.1807 40.837 li
14.9913 40.7393 li
14.8018 40.7393 li
14.4209 40.837 li
14.9092 40.417 li
14.7061 40.543 li
14.6114 40.543 li
14.5176 40.4444 li
14.6114 40.3467 li
14.6114 40.0518 li
14.7061 39.9542 li
14.9913 40.0518 li
15.2754 39.9542 li
15.75 39.7579 li
15.9405 39.8545 li
15.9405 40.0518 li
16.3194 40.2481 li
16.793 40.3467 li
17.3633 40.3467 li
17.8379 40.2481 li
17.1729 39.8545 li
16.4141 39.6583 li
16.793 39.168 li
16.9825 38.5792 li
16.3194 39.0704 li
15.9405 39.2666 li
15.75 39.6583 li
15.2754 39.8545 li
14.9913 39.8545 li
14.8018 39.5616 li
14.8965 39.2666 li
15.085 38.9727 li
15.4659 38.4815 li
15.1807 38.7754 li
14.8965 39.168 li
14.8018 39.4629 li
14.7061 39.5616 li
14.7061 39.6583 li
14.8018 39.7579 li
14.7061 39.8545 li
14.6114 39.2666 li
14.6114 38.7754 li
14.4209 39.0704 li
14.2325 39.4629 li
14.042 40.2481 li
14.1368 40.3467 li
14.1368 40.2481 li
14.3272 40.4444 li
14.4209 40.6397 li
14.3272 40.7393 li
14.1368 40.837 li
14.1368 40.4444 li
14.042 40.543 li
13.9483 40.4444 li
13.8526 40.4444 li
13.6631 40.543 li
13.5674 40.837 li
13.4727 40.9356 li
13.2842 40.9356 li
13.4727 40.3467 li
13.8526 39.9542 li
13.8526 40.3467 li
0 0 0 1 cmyk
ef
14.9913 40.3467 mo
14.9092 40.4161 li
15.1807 40.2481 li
15.6553 39.9532 li
0 0 0 1 cmyk
f
33.5879 42.7022 mo
33.9668 43.1934 li
33.5879 42.6036 li
0 0 0 1 cmyk
f
34.252 41.5245 mo
34.1563 41.5245 li
34.0616 42.0147 li
33.9668 42.212 li
33.9668 42.5059 li
33.7774 42.5059 li
33.6827 42.4073 li
33.5879 42.5059 li
33.9668 42.7032 li
34.1563 43.1934 li
34.1563 42.7999 li
34.252 42.7999 li
34.3448 42.8985 li
34.3448 42.7999 li
34.1563 42.7032 li
34.0616 42.6036 li
34.0616 42.1133 li
34.1563 41.917 li
34.252 41.8194 li
34.3448 42.0147 li
34.3448 42.6036 li
34.5362 42.5059 li
34.5362 41.917 li
34.4415 41.7208 li
0 0 0 1 cmyk
ef
14.1368 43.0948 mo
14.2325 43.0948 li
14.1368 42.9971 li
0 0 0 1 cmyk
f
12.4288 41.8184 mo
12.8077 41.4258 li
12.4288 42.0147 li
12.4288 41.8184 li
cp
12.2383 42.0147 mo
12.2383 42.211 li
12.5245 42.211 li
12.6182 42.1124 li
12.8077 41.8184 li
12.9034 41.4258 li
13.0928 41.0333 li
12.8077 41.1309 li
12.5245 41.3272 li
12.334 41.7208 li
0 0 0 1 cmyk
ef
30.6456 40.543 mo
30.3614 40.837 li
30.2666 41.1319 li
30.171 41.5245 li
30.171 41.917 li
30.2666 41.4258 li
30.6456 40.837 li
30.9307 40.6397 li
31.2149 40.543 li
30.9307 40.543 li
0 0 0 1 cmyk
ef
29.792 40.7393 mo
29.792 41.0352 li
29.8877 41.3272 li
29.8877 40.7393 li
0 0 0 1 cmyk
f
13.2842 39.9542 mo
13.0928 40.2481 li
12.9991 40.4444 li
12.9034 40.7393 li
12.6182 40.837 li
12.6182 40.543 li
12.8077 40.1495 li
12.9991 39.9542 li
13.1876 39.9542 li
13.2842 39.9542 li
cp
12.8077 40.0518 mo
12.7139 40.1495 li
12.5245 40.543 li
12.4288 40.837 li
12.4288 41.0333 li
12.7139 41.0333 li
12.9991 40.837 li
13.2842 40.3467 li
13.4727 39.8545 li
12.9991 39.8545 li
0 0 0 1 cmyk
ef
15.2754 40.2481 mo
15.085 40.4444 li
15.085 40.543 li
14.9913 40.543 li
15.3711 40.7393 li
15.75 40.836 li
16.5098 40.836 li
16.793 40.7393 li
16.0342 40.3467 li
15.75 40.2481 li
15.2754 40.2481 li
cp
15.1817 40.543 mo
15.9405 40.543 li
16.129 40.6397 li
15.9405 40.7393 li
15.6553 40.7393 li
0 0 0 1 cmyk
f
1.80176 33.7696 mo
1.70801 33.7696 li
1.80176 33.6719 li
1.89747 33.7696 li
1.80176 33.7696 li
cp
1.70801 33.2793 mo
1.80176 33.377 li
1.70801 33.377 li
1.70801 33.2793 li
cp
1.42286 33.6719 mo
1.42286 33.4747 li
1.51856 33.5733 li
1.42286 33.6719 li
cp
1.51856 34.1612 mo
1.51856 34.2608 li
1.42286 34.2608 li
1.42286 34.1612 li
1.51856 34.0645 li
1.51856 34.1612 li
cp
2.18165 33.4747 mo
2.3711 33.4747 li
2.3711 33.5733 li
2.0879 33.5733 li
2.18165 33.4747 li
cp
2.27637 33.0821 mo
2.3711 33.0821 li
2.4668 33.1807 li
2.18165 33.1807 li
2.27637 33.0821 li
cp
2.75 33.377 mo
3.03614 33.4747 li
3.03614 33.5733 li
2.84571 33.4747 li
2.65626 33.4747 li
2.75 33.377 li
cp
3.13086 33.0821 mo
3.22461 33.1807 li
3.22461 33.2793 li
3.03614 33.1807 li
2.94141 33.1807 li
3.13086 33.0821 li
cp
3.03614 32.6895 mo
3.03614 32.2969 li
3.32032 32.002 li
3.7002 31.8057 li
4.07911 31.709 li
4.8379 31.709 li
4.8379 31.9043 li
4.26856 31.9043 li
3.60547 32.002 li
3.41504 32.1993 li
3.32032 32.4932 li
3.41504 32.8858 li
3.03614 32.8858 li
3.03614 32.6895 li
cp
4.26856 30.5303 mo
3.60547 30.1377 li
3.60547 30.0391 li
3.32032 30.0391 li
3.13086 29.8428 li
2.75 29.5489 li
2.4668 29.0586 li
2.3711 28.8614 li
2.27637 28.5674 li
2.65626 29.1563 li
3.13086 29.6456 li
3.7959 30.0391 li
4.36426 30.5303 li
4.55372 30.8243 li
4.26856 30.5303 li
cp
1.99219 29.0586 mo
1.80176 28.6651 li
1.70801 28.2715 li
1.80176 27.7813 li
1.99219 27.1924 li
2.3711 26.7012 li
2.84571 26.3086 li
3.41504 25.9161 li
3.03614 25.9161 li
2.18165 26.5059 li
1.61329 26.9961 li
1.89747 26.5059 li
2.18165 25.9161 li
2.56153 25.4258 li
3.03614 25.0342 li
3.13086 24.9346 li
3.22461 24.9346 li
3.41504 25.0342 li
3.60547 25.2295 li
3.88965 25.3282 li
4.45801 25.4258 li
5.02833 25.5235 li
5.21778 25.6221 li
5.50294 25.7198 li
5.59864 25.9161 li
5.69239 26.211 li
5.21778 26.6026 li
5.31348 26.7012 li
4.74317 26.7999 li
3.50977 26.7999 li
3.22461 26.9961 li
3.03614 27.0948 li
2.65626 27.4864 li
2.27637 27.7813 li
2.0879 28.2715 li
2.0879 28.7637 li
2.27637 29.3516 li
1.99219 29.0586 li
cp
3.22461 28.6651 mo
3.60547 29.0586 li
4.36426 29.7452 li
4.74317 30.0391 li
5.12403 30.4317 li
5.40723 30.9219 li
5.59864 31.9043 li
5.59864 32.1006 li
5.40723 32.1993 li
5.50294 31.709 li
5.40723 31.2168 li
5.21778 30.7266 li
4.07911 29.5489 li
3.32032 28.959 li
3.03614 28.6651 li
2.84571 28.2715 li
2.75 27.9786 li
2.84571 27.9786 li
2.84571 28.2715 li
3.22461 28.6651 li
cp
5.59864 30.9219 mo
5.02833 29.9415 li
4.64942 29.5489 li
5.02833 29.254 li
5.50294 29.0586 li
5.97754 29.0586 li
6.45215 29.1563 li
6.73536 29.4502 li
6.92579 30.2364 li
6.83106 30.628 li
6.64161 31.0206 li
6.35645 31.3155 li
5.97754 31.4131 li
5.69239 31.4131 li
5.59864 30.9219 li
cp
4.07911 28.5674 mo
4.55372 28.2715 li
5.12403 28.0762 li
5.40723 27.9786 li
5.69239 27.9786 li
6.16602 28.1749 li
6.64161 28.4688 li
7.02051 28.7637 li
7.30567 29.254 li
7.49512 29.8428 li
7.49512 30.334 li
7.4004 30.9219 li
7.30567 31.2168 li
7.21094 31.4131 li
6.92579 31.709 li
6.54688 31.9043 li
6.07227 32.002 li
5.69239 32.002 li
5.69239 31.8057 li
5.88184 31.709 li
6.2627 31.709 li
6.73536 31.4131 li
7.02051 31.1192 li
7.11426 30.9219 li
7.21094 30.4317 li
7.21094 29.9415 li
7.11426 29.5489 li
6.83106 29.1563 li
6.54688 28.8614 li
6.16602 28.6651 li
5.69239 28.5674 li
5.21778 28.6651 li
4.74317 28.959 li
4.55372 29.1563 li
4.45801 29.4502 li
3.50977 28.7637 li
4.07911 28.5674 li
cp
5.40723 32.5918 mo
5.31348 32.6895 li
5.21778 32.8858 li
5.21778 32.6895 li
5.40723 32.3946 li
5.40723 32.5918 li
cp
4.93262 31.0206 mo
4.64942 30.628 li
4.26856 30.2364 li
3.7959 29.8428 li
3.41504 29.5489 li
2.65626 28.7637 li
2.4668 28.2715 li
2.4668 28.0762 li
2.65626 28.5674 li
2.94141 28.959 li
4.45801 30.1377 li
5.02833 30.9219 li
5.21778 31.2168 li
5.21778 32.002 li
5.12403 31.6094 li
4.93262 31.0206 li
cp
5.02833 32.1006 mo
4.8379 32.3946 li
4.93262 32.1006 li
5.02833 31.9043 li
5.02833 32.1006 li
cp
5.02833 32.7881 mo
4.8379 32.9834 li
5.02833 32.6895 li
5.02833 32.7881 li
cp
4.45801 33.377 mo
4.26856 33.377 li
4.64942 33.1807 li
4.45801 33.377 li
cp
4.74317 32.7881 mo
4.55372 32.9834 li
4.36426 32.9834 li
4.55372 32.7881 li
4.74317 32.7881 li
cp
3.88965 32.8858 mo
3.7959 32.9834 li
3.60547 32.8858 li
3.60547 32.6895 li
3.7002 32.4932 li
3.98438 32.2969 li
4.36426 32.1993 li
4.74317 32.1993 li
4.74317 32.3946 li
4.55372 32.5918 li
4.26856 32.7881 li
3.88965 32.8858 li
cp
3.7959 33.4747 mo
3.41504 33.4747 li
3.32032 33.377 li
3.7002 33.377 li
3.88965 33.4747 li
3.98438 33.5733 li
3.7959 33.4747 li
cp
6.45215 21.2042 mo
6.54688 20.9102 li
6.92579 20.5176 li
7.30567 20.2227 li
7.68458 19.8311 li
7.68458 20.125 li
7.49512 20.5176 li
6.45215 21.4991 li
6.45215 21.2042 li
cp
10.9112 21.3038 mo
11.2911 20.6153 li
11.2911 21.0079 li
11.1954 21.4004 li
10.8165 22.1856 li
10.7208 21.6954 li
10.9112 21.3038 li
cp
2.27637 36.0274 mo
2.27637 35.3399 li
2.0879 35.045 li
1.99219 34.6524 li
1.99219 34.3584 li
2.0879 34.0645 li
2.27637 33.6719 li
3.22461 33.7696 li
4.17383 33.6719 li
4.55372 33.5733 li
4.74317 33.5733 li
4.93262 33.4747 li
5.40723 32.9834 li
5.59864 32.6895 li
5.59864 32.3946 li
6.16602 32.3946 li
7.11426 32.002 li
7.49512 31.6094 li
7.78126 31.0206 li
7.87403 30.334 li
7.87403 29.6456 li
7.68458 29.0586 li
7.4004 28.6651 li
7.02051 28.2715 li
6.54688 27.9786 li
6.07227 27.7813 li
5.69239 27.6827 li
5.31348 27.6827 li
5.02833 27.7813 li
4.64942 27.9786 li
3.98438 28.2715 li
3.7002 28.4688 li
3.32032 28.5674 li
3.13086 28.4688 li
3.03614 28.2715 li
3.03614 27.879 li
3.13086 27.586 li
3.32032 27.3887 li
3.7959 27.0948 li
5.31348 27.0948 li
5.69239 26.9961 li
6.16602 26.7999 li
6.35645 26.6026 li
6.45215 26.4073 li
6.2627 26.4073 li
6.07227 26.6026 li
5.88184 26.7012 li
5.69239 26.7999 li
5.88184 26.6026 li
5.97754 26.4073 li
5.97754 25.8184 li
5.69239 25.5235 li
5.40723 25.3282 li
5.02833 25.2295 li
4.17383 25.1299 li
3.7959 24.9346 li
3.50977 24.7383 li
3.41504 24.6407 li
3.41504 24.4434 li
3.7002 24.1485 li
3.7959 23.9522 li
3.60547 24.0508 li
3.41504 24.0508 li
3.7959 23.6583 li
3.32032 23.6583 li
3.41504 23.5606 li
3.60547 23.4629 li
3.7959 23.2667 li
3.41504 23.2667 li
3.7002 23.0704 li
3.88965 22.7745 li
3.7002 22.8731 li
3.41504 22.8731 li
3.7002 22.5782 li
3.88965 22.5782 li
3.98438 22.4805 li
3.50977 22.4805 li
3.60547 22.3819 li
3.7959 22.2842 li
4.07911 21.9903 li
3.7959 22.0889 li
3.60547 22.0889 li
4.17383 21.6954 li
4.74317 21.5977 li
5.40723 21.5977 li
5.97754 21.6954 li
7.30567 22.0889 li
7.87403 22.2842 li
8.44336 22.3819 li
8.91797 22.5782 li
9.39258 22.5782 li
10.3418 22.7745 li
11.0059 22.6768 li
11.5752 22.5782 li
12.8086 22.2842 li
14.042 21.8907 li
15.1807 21.4991 li
15.8448 21.2042 li
16.6036 21.1065 li
17.3633 21.0079 li
18.0274 21.0079 li
18.7872 21.1065 li
19.4512 21.3038 li
20.1143 21.5977 li
20.6836 21.9903 li
19.8301 21.6954 li
19.5459 21.6954 li
20.209 21.9903 li
20.5889 22.2842 li
20.7784 22.3819 li
20.8741 22.5782 li
20.3047 22.2842 li
19.6397 22.0889 li
20.3047 22.4805 li
20.6836 22.7745 li
21.1573 23.2667 li
21.0626 23.2667 li
20.6836 23.0704 li
20.3047 22.7745 li
19.4512 22.4805 li
20.3047 22.9708 li
20.6836 23.168 li
20.9678 23.5606 li
20.8741 23.4629 li
20.3047 23.2667 li
19.9249 23.168 li
19.6397 23.0704 li
20.5889 23.5606 li
20.9678 23.8555 li
21.3477 24.3458 li
21.253 24.3458 li
20.9678 24.0508 li
20.4942 23.7569 li
20.1143 23.6583 li
19.6397 23.5606 li
20.3047 23.8555 li
20.8741 24.2481 li
21.3477 24.7383 li
21.7276 25.4258 li
21.7276 25.8184 li
21.8223 26.211 li
21.917 25.4258 li
21.8223 24.7383 li
21.6319 23.2667 li
21.3477 22.5782 li
20.8741 21.9903 li
20.3047 21.4991 li
19.6397 21.2042 li
19.1661 21.0079 li
18.5967 20.8126 li
17.5528 20.8126 li
16.6036 20.9102 li
15.6553 21.1065 li
13.6631 21.793 li
12.7139 22.1856 li
11.7647 22.4805 li
11.1006 22.4805 li
10.9112 22.3819 li
11.1006 22.2842 li
11.1954 22.1856 li
11.1954 22.0889 li
11.3858 21.8907 li
11.4805 21.6954 li
11.5752 21.2042 li
11.5752 20.6153 li
11.4805 20.125 li
10.9112 20.8126 li
10.5313 21.5977 li
10.5313 22.0889 li
10.7208 22.4805 li
9.67774 22.4805 li
8.53907 22.2842 li
7.49512 21.9903 li
6.54688 21.6954 li
6.92579 21.3038 li
7.21094 21.1065 li
7.4004 20.9102 li
7.78126 20.418 li
7.96973 19.2403 li
7.87403 19.2403 li
7.49512 19.6329 li
7.11426 19.9278 li
6.64161 20.3213 li
6.35645 20.7139 li
6.2627 20.9102 li
6.2627 21.2042 li
6.16602 21.5977 li
5.40723 21.4004 li
4.64942 21.4004 li
3.88965 21.6954 li
3.22461 22.0889 li
3.03614 22.7745 li
2.94141 23.4629 li
2.94141 24.1485 li
3.13086 24.837 li
2.75 25.0342 li
2.27637 25.3282 li
1.89747 25.7198 li
1.61329 26.211 li
1.42286 26.5059 li
1.23243 27.2911 li
1.51856 28.4688 li
1.70801 29.1563 li
1.99219 29.5489 li
2.3711 29.8428 li
2.75 30.0391 li
3.22461 30.1377 li
3.98438 30.5303 li
4.26856 30.7266 li
4.64942 31.0206 li
4.74317 31.2168 li
4.74317 31.4131 li
3.98438 31.3155 li
3.60547 31.4131 li
3.22461 31.6094 li
2.84571 31.9043 li
2.75 32.1993 li
2.75 32.6895 li
2.84571 32.7881 li
2.75 32.8858 li
2.0879 32.8858 li
1.70801 32.9834 li
1.42286 33.1807 li
1.32813 33.377 li
1.23243 33.4747 li
1.23243 34.0645 li
1.32813 34.3584 li
1.70801 35.045 li
1.80176 35.6338 li
1.70801 35.9288 li
1.61329 36.125 li
1.32813 36.2237 li
1.13868 36.125 li
1.04297 36.0274 li
1.04297 35.8311 li
1.13868 35.5362 li
1.32813 35.3399 li
1.61329 35.3399 li
1.61329 35.2422 li
1.51856 35.1436 li
1.23243 35.1436 li
0.949219 35.2422 li
0.85254 35.3399 li
0.75879 35.5362 li
0.663086 35.9288 li
0.85254 36.2237 li
1.13868 36.42 li
1.51856 36.5176 li
1.80176 36.42 li
1.99219 36.3223 li
0 0 0 1 cmyk
ef
4.74317 34.3584 mo
4.68653 34.2403 li
4.45801 34.1612 li
4.64747 34.1612 li
4.68653 34.2403 li
4.74317 34.2608 li
4.93262 34.4561 li
4.93262 34.6524 li
4.74317 34.3584 li
cp
4.07911 34.6524 mo
4.36426 34.4561 li
4.26856 34.3584 li
4.07911 34.3584 li
3.98438 34.4561 li
3.79395 34.8497 li
3.79395 35.0469 li
3.98438 35.2432 li
4.26856 35.4385 li
4.45801 35.5372 li
4.74317 35.4385 li
4.93262 35.3399 li
5.02833 35.1436 li
5.2168 34.6524 li
5.12305 34.3584 li
4.93262 34.0645 li
4.36426 33.7696 li
4.26856 33.7696 li
4.26856 33.9659 li
4.07911 33.8672 li
3.88965 33.8672 li
3.6045 33.9659 li
3.88965 34.1612 li
4.17383 34.2608 li
4.74317 34.6524 li
4.8379 34.9473 li
4.64747 35.1436 li
4.17383 35.1436 li
4.07911 35.0469 li
0 0 0 1 cmyk
ef
29.3174 34.0645 mo
29.3174 34.1612 li
29.4122 34.0645 li
0 0 0 1 cmyk
f
19.0704 27.0948 mo
17.9317 26.5059 li
16.8887 25.7198 li
15.75 24.8379 li
14.8956 24.542 li
14.7061 24.6407 li
14.6114 24.7383 li
15.2745 24.9346 li
15.9395 25.2295 li
17.2676 26.211 li
18.5967 26.9961 li
19.2608 27.2911 li
20.1143 27.3897 li
20.3047 27.2911 li
20.3995 27.2911 li
19.7354 27.1924 li
0 0 0 1 cmyk
ef
4.64942 24.837 mo
5.40723 24.9336 li
6.83106 25.4258 li
6.83106 25.3282 li
6.73633 25.2295 li
5.78809 24.9336 li
4.74415 24.7383 li
4.17481 24.7383 li
3.7002 24.6407 li
3.88965 24.837 li
0 0 0 1 cmyk
ef
14.9913 26.8975 mo
15.2745 27.0948 li
16.0342 27.4864 li
16.3194 27.6836 li
16.6993 27.9786 li
16.8887 28.2715 li
17.0782 28.6651 li
17.2676 29.254 li
17.0782 29.8438 li
16.9825 29.8438 li
17.0782 29.4502 li
17.0782 28.7637 li
16.8887 28.4688 li
16.4141 27.9786 li
15.9395 27.586 li
14.7999 27.0948 li
14.6114 26.8975 li
14.5167 26.6026 li
14.4209 26.1133 li
14.5167 25.9161 li
14.5167 26.4073 li
14.7061 26.7022 li
14.9913 26.8975 li
cp
16.8887 30.2364 mo
16.6036 30.4317 li
16.3194 30.4317 li
16.6993 30.2364 li
17.0782 29.9415 li
16.8887 30.2364 li
cp
15.9395 30.8252 mo
15.6553 31.0206 li
15.8448 30.7266 li
16.0342 30.628 li
16.2237 30.628 li
15.9395 30.8252 li
cp
15.5606 30.4317 mo
15.085 30.7266 li
15.6553 30.1377 li
15.9395 30.0391 li
15.5606 30.4317 li
cp
15.3702 31.6094 mo
15.3702 31.4131 li
15.5606 31.2168 li
15.3702 31.6094 li
cp
15.4659 32.4932 mo
15.3702 32.2979 li
15.4659 32.3946 li
15.4659 32.4932 li
cp
15.3702 31.9043 mo
15.3702 32.1006 li
15.2745 32.002 li
15.3702 31.9043 li
cp
15.1807 31.2168 mo
15.2745 30.9219 li
15.4659 30.8252 li
15.3702 31.0206 li
15.1807 31.2168 li
cp
15.1807 32.5918 mo
15.2764 32.5918 li
15.2764 32.6905 li
15.1807 32.6905 li
15.1807 32.5918 li
cp
14.9913 31.6094 mo
14.9913 31.5118 li
15.085 31.4131 li
15.1807 31.4131 li
15.085 31.6094 li
15.085 31.8067 li
14.9913 31.8067 li
14.9913 31.6094 li
cp
14.8956 31.3165 mo
14.7999 31.3165 li
14.7999 31.1192 li
14.8956 31.0206 li
14.9913 31.0206 li
14.8956 31.2168 li
14.8956 31.3165 li
cp
14.8956 32.4932 mo
14.7999 32.2979 li
14.8956 32.3946 li
14.8956 32.4932 li
cp
14.7061 32.002 mo
14.7061 31.6094 li
14.7999 31.6094 li
14.7061 32.002 li
cp
16.2237 30.1377 mo
16.5088 30.0391 li
16.129 30.334 li
15.9395 30.5303 li
15.6553 30.5303 li
16.0342 30.2364 li
16.2237 30.1377 li
cp
16.3194 29.3516 mo
16.4141 29.0586 li
16.3194 28.7637 li
15.5606 28.1749 li
14.6114 27.6836 li
14.2325 27.3887 li
13.9463 26.9961 li
13.7579 26.6026 li
13.7579 26.0147 li
13.8516 25.7198 li
14.042 25.5235 li
14.4209 25.2295 li
13.9463 25.7198 li
13.7579 26.3086 li
13.9463 26.8975 li
14.2325 27.2911 li
14.7061 27.586 li
15.085 27.7813 li
16.0342 28.3702 li
16.3194 28.6651 li
16.6036 29.254 li
16.4141 29.5489 li
16.2237 29.7452 li
16.0342 29.8438 li
16.3194 29.3516 li
cp
14.8956 29.0586 mo
14.7061 29.5489 li
14.6114 29.7452 li
14.4209 29.9415 li
13.4727 30.1377 li
12.9981 30.0391 li
12.5245 29.8438 li
12.2383 29.5489 li
11.8594 29.254 li
10.7208 27.879 li
9.96094 27.4864 li
9.48731 27.586 li
9.1084 27.7813 li
8.91797 28.0762 li
8.82227 28.3702 li
8.82227 28.6651 li
8.91797 29.0586 li
9.29688 29.5489 li
9.1084 29.5489 li
9.0127 29.3516 li
8.72852 29.0586 li
8.63282 28.6651 li
8.72852 28.3702 li
8.82227 27.9786 li
8.91797 27.6836 li
9.20215 27.4864 li
9.58204 27.2911 li
9.86719 27.2911 li
10.2461 27.3887 li
10.7208 27.6836 li
11.1954 28.0762 li
12.1446 29.0586 li
12.6182 29.4502 li
13.0928 29.7452 li
13.377 29.8438 li
13.6612 29.9415 li
13.9463 29.8438 li
14.3252 29.7452 li
14.6114 29.3516 li
14.7061 29.0586 li
14.7061 28.8624 li
14.6114 28.4688 li
14.3252 28.0762 li
13.7579 27.586 li
13.377 27.3887 li
13.1876 27.0948 li
12.9981 26.7022 li
12.9981 26.211 li
13.0928 25.9161 li
13.2823 25.6221 li
13.5674 25.3282 li
13.8516 25.1299 li
14.2325 25.1299 li
13.7579 25.6221 li
13.5674 26.211 li
13.5674 26.7022 li
13.6612 26.9961 li
13.9463 27.2911 li
14.2325 27.6836 li
14.5167 27.9786 li
14.7061 28.2715 li
14.8956 28.6651 li
14.8956 29.0586 li
cp
14.4209 26.8975 mo
14.7999 27.1924 li
15.6553 27.6836 li
16.129 27.9786 li
16.5088 28.2715 li
16.793 28.6651 li
16.9825 29.1563 li
16.8887 29.5489 li
16.793 29.7452 li
16.6036 29.8438 li
16.793 29.3516 li
16.793 28.8624 li
16.5088 28.4688 li
16.129 28.0762 li
14.7999 27.3887 li
14.4209 27.0948 li
14.1368 26.7022 li
14.042 26.1133 li
14.2325 25.7198 li
14.6114 25.4258 li
14.2325 25.9161 li
14.1368 26.1133 li
14.1368 26.4073 li
14.4209 26.8975 li
cp
15.6553 32.5918 mo
15.75 32.5918 li
15.75 32.6905 li
15.6553 32.6905 li
15.6553 32.5918 li
cp
16.4141 32.1993 mo
16.4141 32.1006 li
16.4952 32.0586 li
16.6993 31.709 li
16.6993 31.9043 li
16.6036 32.002 li
16.4952 32.0586 li
16.4141 32.1993 li
16.4141 32.2979 li
16.2237 32.3946 li
16.0342 32.5918 li
15.9395 32.5918 li
16.4141 32.1993 li
cp
16.6036 32.3946 mo
16.6036 32.2979 li
16.6993 32.1993 li
16.6036 32.3946 li
cp
16.3194 32.5918 mo
16.4141 32.5918 li
16.4141 32.6905 li
16.3194 32.6905 li
16.3194 32.5918 li
cp
16.8887 31.3165 mo
17.0782 31.2168 li
16.9825 31.4131 li
16.9825 31.5118 li
16.8887 31.5118 li
16.8887 31.3165 li
cp
17.4571 30.9219 mo
17.3624 31.0206 li
17.2676 31.0206 li
17.4571 30.9219 li
cp
21.4424 26.1133 mo
20.9678 26.6026 li
20.6836 26.7022 li
20.3047 26.8008 li
19.9249 26.8008 li
19.2608 26.7022 li
18.5967 26.4073 li
18.0274 26.0147 li
16.8887 25.0342 li
15.7491 24.2481 li
15.7491 24.1495 li
16.3194 24.3458 li
18.2159 25.9161 li
19.1661 26.5059 li
19.8301 26.6026 li
20.4942 26.5059 li
21.0626 26.211 li
21.1573 26.3086 li
21.253 26.0147 li
21.5372 25.7198 li
21.4424 26.1133 li
cp
16.5088 23.9532 mo
17.2676 24.3458 li
17.9317 24.9346 li
18.7852 25.7198 li
19.1661 26.0147 li
19.7354 26.211 li
20.209 26.1133 li
20.6836 25.9161 li
21.0626 25.6221 li
21.3477 25.2295 li
21.4424 25.2295 li
21.4424 25.6221 li
20.8731 26.211 li
20.3995 26.3086 li
19.8301 26.4073 li
19.3555 26.3086 li
18.8799 26.1133 li
18.501 25.9161 li
17.8379 25.2295 li
17.1729 24.6407 li
16.4141 24.0508 li
16.5088 23.9532 li
cp
17.3624 24.0508 mo
17.4571 24.1495 li
17.6485 24.2481 li
18.2159 24.837 li
18.7852 25.3282 li
19.3555 25.6221 li
19.7354 25.7198 li
20.0196 25.7198 li
20.5879 25.5235 li
20.7784 25.3282 li
20.9678 25.0342 li
20.9678 24.837 li
21.0626 24.837 li
21.1573 25.0342 li
20.9678 25.3282 li
20.6836 25.6221 li
20.3995 25.8184 li
20.0196 25.9161 li
19.5459 25.9161 li
19.1661 25.8184 li
18.7852 25.6221 li
18.501 25.3282 li
17.9317 24.6407 li
17.5528 24.3458 li
17.2676 24.0508 li
17.3624 24.0508 li
cp
18.501 24.0508 mo
20.0196 24.2481 li
20.6836 24.6407 li
20.5879 25.0342 li
20.4942 25.2295 li
20.3995 25.3282 li
19.9249 25.4258 li
19.5459 25.4258 li
19.2608 25.3282 li
18.8799 25.1299 li
18.3126 24.5411 li
17.7422 24.0508 li
18.501 24.0508 li
cp
14.7061 25.8184 mo
14.8956 25.5235 li
14.9913 25.4258 li
15.1807 25.4258 li
15.7491 25.6221 li
16.3194 26.0147 li
17.3624 26.8008 li
17.9317 27.1924 li
18.4063 27.4864 li
19.0704 27.7813 li
19.7354 27.7813 li
20.3047 27.6836 li
20.8731 27.4864 li
21.253 27.1924 li
21.6319 26.7022 li
21.7276 26.3086 li
21.7276 25.9161 li
21.6319 25.6221 li
21.5372 25.2295 li
21.253 24.837 li
20.9678 24.5411 li
20.5879 24.2481 li
20.209 24.0508 li
18.3126 23.6583 li
16.793 23.6583 li
16.0342 23.7569 li
15.2745 23.9532 li
13.8516 24.3458 li
12.4288 24.9346 li
11.5752 25.2295 li
10.627 25.2295 li
9.67774 25.1299 li
8.72852 24.9346 li
6.92579 24.4444 li
5.97754 24.1495 li
5.12305 23.9532 li
4.26856 23.9532 li
3.88965 24.0508 li
3.60547 24.3458 li
3.60547 24.5411 li
3.69922 24.6407 li
4.45801 24.5411 li
5.2168 24.6407 li
6.07227 24.837 li
6.73536 25.0342 li
6.73536 24.9346 li
6.64063 24.837 li
5.59668 24.5411 li
5.12305 24.3458 li
4.45801 24.3458 li
4.17383 24.4444 li
3.79395 24.4444 li
3.79395 24.2481 li
3.88965 24.2481 li
4.45801 24.1495 li
5.02833 24.1495 li
6.07227 24.4444 li
7.20997 24.7383 li
8.25391 25.1299 li
9.29688 25.4258 li
10.4376 25.6221 li
11.0059 25.6221 li
12.1446 25.4258 li
12.7129 25.1299 li
13.377 24.9346 li
14.1368 24.5411 li
14.7999 24.3458 li
15.1807 24.3458 li
15.5606 24.4444 li
16.2237 24.837 li
18.2159 26.3086 li
18.8799 26.7022 li
19.6397 26.8975 li
19.9249 26.9961 li
20.3995 26.8975 li
20.7784 26.8008 li
21.1573 26.6026 li
21.3477 26.4073 li
21.5372 26.3086 li
21.6319 26.4073 li
21.4424 26.7022 li
21.1573 26.9961 li
20.7784 27.1924 li
20.3995 27.2911 li
20.4942 27.2911 li
20.5879 27.3887 li
19.9249 27.4864 li
19.2608 27.4864 li
18.1221 26.8975 li
16.9825 26.1133 li
15.9395 25.4258 li
15.5606 25.2295 li
15.085 25.0342 li
14.2325 24.837 li
13.5674 25.0342 li
12.9981 25.4258 li
12.8077 25.7198 li
12.7129 26.0147 li
12.7129 26.7022 li
12.8077 26.9961 li
12.9981 27.2911 li
13.9463 28.0762 li
14.1368 28.2715 li
14.2325 28.4688 li
14.3252 28.959 li
14.2325 29.254 li
14.1368 29.3516 li
13.8516 29.4502 li
13.5674 29.4502 li
13.0928 29.3516 li
12.6182 29.0586 li
12.2383 28.6651 li
11.4805 27.7813 li
11.0059 27.3887 li
10.627 27.0948 li
10.0567 26.9961 li
9.48731 26.9961 li
9.20215 27.0948 li
9.0127 27.1924 li
8.72852 27.586 li
8.53907 28.0762 li
8.44336 28.6651 li
8.53907 29.1563 li
8.72852 29.5489 li
9.20215 29.8438 li
9.67774 29.8438 li
9.86719 29.7452 li
10.0567 29.5489 li
10.1514 29.1563 li
10.0567 28.8624 li
9.77149 28.5674 li
9.86719 28.7637 li
9.96094 29.0586 li
9.96094 29.254 li
9.77149 29.4502 li
9.58204 29.4502 li
9.39258 29.254 li
9.20215 28.959 li
9.1084 28.6651 li
9.1084 28.1749 li
9.39258 27.879 li
9.58204 27.7813 li
9.77149 27.7813 li
10.1514 27.9786 li
10.5313 28.2715 li
11.8594 29.6465 li
12.5245 30.2364 li
12.9981 30.4317 li
13.5674 30.628 li
14.1368 30.628 li
14.7061 30.4317 li
14.9913 30.0391 li
15.3702 29.254 li
15.3702 28.7637 li
15.2745 28.3702 li
15.1807 28.1749 li
15.1807 28.0762 li
15.3702 28.1749 li
15.4659 28.2715 li
15.7491 28.3702 li
16.129 28.8624 li
16.129 29.1563 li
16.0342 29.5489 li
15.7491 29.8438 li
15.085 30.4317 li
14.7999 30.8252 li
14.6114 31.1192 li
14.4209 31.6094 li
14.5167 32.1006 li
14.6114 32.4932 li
14.7999 32.9834 li
15.1807 33.1807 li
15.4659 33.2793 li
15.8448 33.2793 li
16.129 33.1807 li
16.129 33.0831 li
16.2237 33.0831 li
16.4141 32.9834 li
16.6036 32.7881 li
16.6993 32.5918 li
16.9825 32.1006 li
17.1729 31.6094 li
17.3624 31.4131 li
17.7422 31.2168 li
18.0274 31.5118 li
18.0274 31.9043 li
17.9317 32.002 li
17.6485 32.1006 li
17.4571 32.1006 li
17.6485 32.2979 li
17.9317 32.2979 li
18.2159 32.1006 li
18.4063 31.5118 li
18.3126 31.3165 li
18.2159 31.0206 li
18.0274 30.8252 li
17.6485 30.7266 li
17.2676 30.7266 li
16.793 31.2168 li
16.5088 31.8067 li
16.2237 32.1006 li
16.0342 32.3946 li
15.8448 32.3946 li
15.6553 32.1993 li
15.4659 31.9043 li
15.5606 31.5118 li
15.6553 31.3165 li
15.8448 31.0206 li
16.2237 30.7266 li
16.6036 30.5303 li
16.9825 30.2364 li
17.2676 29.8438 li
17.3624 29.5489 li
17.3624 28.7637 li
17.1729 28.3702 li
16.8887 27.9786 li
16.5088 27.6836 li
15.6553 27.1924 li
14.8956 26.7022 li
14.7061 26.3086 li
0 0 0 1 cmyk
ef
29.128 27.6836 mo
29.128 27.4864 li
29.0333 27.3887 li
28.7481 27.3887 li
28.5586 27.2911 li
0 0 0 1 cmyk
f
28.2745 27.1924 mo
28.1797 27.1924 li
28.3682 27.3887 li
28.3682 28.0762 li
28.4639 28.0762 li
28.5586 27.2911 li
28.4639 27.1924 li
28.3682 27.0938 li
0 0 0 1 cmyk
f
24.4795 27.6836 mo
24.669 27.879 li
24.8594 27.9786 li
24.5743 27.6836 li
0 0 0 1 cmyk
f
25.2383 27.3887 mo
25.1426 27.4864 li
25.0489 27.879 li
25.2383 27.4864 li
25.3331 27.3887 li
25.3331 27.1924 li
0 0 0 1 cmyk
f
39.2803 26.6026 mo
39.0909 27.0938 li
38.9952 27.6827 li
39.1856 27.0938 li
39.4698 26.7012 li
39.6592 26.211 li
39.9444 25.7198 li
39.5645 26.1133 li
0 0 0 1 cmyk
ef
6.35645 26.1133 mo
6.26172 26.1133 li
6.26172 26.211 li
6.35645 26.3086 li
6.64161 26.3086 li
6.64161 26.211 li
6.45215 26.1133 li
0 0 0 1 cmyk
f
6.26172 25.9161 mo
6.35645 26.0147 li
6.54688 26.0147 li
6.73633 26.1133 li
6.73633 25.9161 li
6.54688 25.8184 li
6.16602 25.7198 li
0 0 0 1 cmyk
f
4.07911 25.0333 mo
4.64942 25.1299 li
5.12403 25.1299 li
5.69239 25.2295 li
5.88184 25.3282 li
6.07227 25.5235 li
6.73633 25.7198 li
6.73633 25.6202 li
6.167 25.3282 li
5.50294 25.1299 li
4.83887 25.0333 li
0 0 0 1 cmyk
f
8.25391 24.0508 mo
8.16016 24.2481 li
8.06446 24.3458 li
7.87403 24.4434 li
8.06446 24.5411 li
8.53907 24.6407 li
8.63282 24.5411 li
8.63282 24.4434 li
8.44336 24.4434 li
8.34961 24.3458 li
8.34961 24.1485 li
8.44336 23.8555 li
8.44336 23.5606 li
8.91797 24.2481 li
9.39356 24.837 li
9.67774 23.462 li
9.67774 23.3643 li
9.77149 23.2667 li
9.9629 23.3643 li
10.0567 23.2667 li
10.0567 23.168 li
9.58204 23.168 li
9.20313 23.0704 li
9.20313 23.168 li
9.29883 23.2667 li
9.58204 23.2667 li
9.48731 23.7569 li
9.39356 24.1485 li
9.1084 23.7569 li
8.91797 23.2667 li
8.53907 22.8731 li
8.34961 22.7754 li
8.16016 22.7754 li
8.25391 23.0704 li
8.34961 23.2667 li
8.25391 23.6583 li
0 0 0 1 cmyk
ef
11.8594 24.4434 mo
11.7647 24.4434 li
11.5752 24.3458 li
11.3858 24.1485 li
11.1954 24.836 li
11.4805 24.6397 li
11.7647 24.6397 li
12.1446 24.5411 li
12.2383 24.5411 li
12.4288 24.3458 li
12.5245 24.1485 li
12.5245 23.9522 li
12.334 23.7559 li
11.7647 23.462 li
11.669 23.2657 li
11.669 23.167 li
11.7647 23.0694 li
11.9542 22.9708 li
12.1446 23.0694 li
12.1446 23.2657 li
12.334 23.167 li
12.4288 23.0694 li
12.2383 22.8731 li
12.0489 22.8731 li
11.669 22.9708 li
11.5752 23.0694 li
11.3858 23.167 li
11.3858 23.6573 li
11.9542 24.0508 li
12.1446 24.2471 li
12.0489 24.4434 li
0 0 0 1 cmyk
ef
7.4004 23.2667 mo
7.20997 23.8555 li
7.11426 23.9522 li
6.92579 24.0508 li
6.83106 23.9522 li
6.64063 23.8555 li
6.73536 23.7569 li
6.64063 23.7569 li
6.5459 23.5606 li
6.5459 23.2667 li
6.73536 22.7745 li
6.83106 22.5782 li
7.02051 22.5782 li
7.30567 22.6768 li
7.4004 22.9717 li
7.4004 23.2667 li
cp
7.49512 22.4805 mo
7.20997 22.3829 li
6.92579 22.3829 li
6.64063 22.4805 li
6.45215 22.6768 li
6.16602 23.0704 li
6.16602 23.3643 li
6.26172 23.6583 li
6.45215 24.0508 li
6.73536 24.1485 li
6.92579 24.2481 li
7.20997 24.2481 li
7.49512 24.1485 li
7.68458 24.0508 li
7.7793 23.7569 li
7.87403 23.168 li
7.7793 22.7745 li
0 0 0 1 cmyk
ef
13.6631 23.462 mo
13.6631 23.7559 li
13.5674 23.9522 li
13.378 23.9522 li
12.9991 23.7559 li
12.9991 22.7745 li
13.1876 22.5782 li
13.378 22.5782 li
13.5674 22.8731 li
13.6631 23.167 li
13.6631 23.462 li
cp
13.5674 22.4805 mo
13.1876 22.4805 li
12.8077 22.6758 li
12.6182 22.9708 li
12.6182 23.5596 li
12.7139 23.9522 li
12.8077 24.0508 li
12.9034 24.1475 li
13.1876 24.2471 li
13.5674 24.1475 li
13.7579 24.0508 li
13.9483 23.6573 li
14.042 23.167 li
14.042 22.9708 li
13.9483 22.7745 li
0 0 0 1 cmyk
ef
4.45801 22.7745 mo
4.45801 23.0704 li
4.36426 23.3633 li
4.36426 23.462 li
4.17383 23.5596 li
4.17383 23.6583 li
4.74317 23.8555 li
4.8379 23.7559 li
4.8379 23.6583 li
4.74317 23.6583 li
4.64942 23.5596 li
4.55372 23.5596 li
4.55372 23.3633 li
4.64942 23.0704 li
4.64942 22.8731 li
4.74317 22.7745 li
5.02833 23.3633 li
5.40723 23.9522 li
5.78809 22.4795 li
5.78809 22.3819 li
5.97754 22.3819 li
5.97754 22.2842 li
5.31348 22.0889 li
5.31348 22.1846 li
5.40723 22.1846 li
5.59864 22.2842 li
5.50294 22.7745 li
5.40723 23.167 li
4.74317 22.0889 li
4.17383 22.0889 li
4.17383 22.2842 li
4.26856 22.2842 li
4.45801 22.3819 li
4.45801 22.4795 li
0 0 0 1 cmyk
ef
14.8965 21.9893 mo
14.4209 22.0889 li
13.9483 22.2842 li
14.042 22.3819 li
14.2325 22.3819 li
14.2325 22.4805 li
14.4209 23.0704 li
14.6114 23.5596 li
14.3272 23.6573 li
14.2325 23.7569 li
14.2325 23.8555 li
14.8965 23.5596 li
15.6553 23.2657 li
15.8448 22.5782 li
15.75 22.7745 li
15.3711 23.167 li
15.1807 23.2657 li
14.9913 23.2657 li
14.7061 22.1846 li
14.8018 22.0889 li
0 0 0 1 cmyk
ef
18.1221 22.5782 mo
17.837 22.8731 li
17.6485 23.168 li
17.837 23.0704 li
18.1221 23.168 li
18.3126 23.2667 li
18.501 23.2667 li
18.6915 23.168 li
18.8799 22.9708 li
18.9756 22.7754 li
18.9756 22.5782 li
18.7872 22.2842 li
18.501 21.9893 li
18.2168 21.5977 li
18.4063 21.4991 li
18.5967 21.4991 li
18.6915 21.5977 li
18.8799 21.9893 li
19.0704 21.794 li
19.0704 21.5977 li
18.6915 21.4004 li
18.2168 21.4004 li
18.0274 21.5977 li
17.9317 21.8917 li
18.1221 22.1856 li
18.5967 22.6768 li
18.6915 22.9708 li
18.5967 23.0704 li
18.4063 23.0704 li
18.1221 22.8731 li
18.1221 22.7754 li
0 0 0 1 cmyk
ef
16.4141 21.6954 mo
16.5088 21.6954 li
16.5088 21.5977 li
15.9405 21.6954 li
15.4659 21.794 li
15.4659 21.8917 li
15.75 21.8917 li
15.9405 22.2842 li
16.129 23.0704 li
16.3194 23.168 li
16.6036 23.2667 li
16.8887 23.168 li
17.1729 22.9708 li
17.3633 22.6768 li
17.3633 22.3819 li
17.2696 21.5977 li
17.3633 21.4991 li
17.4581 21.4991 li
17.5528 21.4004 li
17.1729 21.4004 li
16.8887 21.4991 li
16.8887 21.5977 li
17.1729 21.5977 li
17.2696 22.6768 li
17.0792 22.9708 li
16.8887 23.0704 li
16.793 23.0704 li
16.5088 22.7754 li
16.4141 22.4805 li
16.2247 21.794 li
16.3194 21.6954 li
0 0 0 1 cmyk
ef
42.9805 20.6153 mo
43.0752 20.2227 li
43.2657 20.6153 li
43.3614 21.1065 li
43.2657 21.5967 li
43.0752 21.9893 li
42.9805 21.1065 li
42.9805 20.6153 li
cp
44.3086 20.1241 mo
44.6885 20.2227 li
44.9737 20.3204 li
45.1622 20.6153 li
44.878 20.5167 li
44.4981 20.418 li
43.9297 20.1241 li
44.3086 20.1241 li
cp
42.6016 21.0069 mo
42.7911 21.6954 li
42.8868 22.2842 li
42.9805 22.3819 li
43.2657 21.8907 li
43.4551 21.4004 li
43.4551 20.2227 li
43.834 20.8116 li
44.1192 21.4991 li
44.3086 21.8907 li
44.2139 22.2842 li
44.2139 22.8731 li
44.4043 23.0694 li
44.5948 22.6758 li
44.5948 21.9893 li
44.4981 21.6954 li
44.1192 21.0069 li
43.7403 20.418 li
43.7403 20.2227 li
44.1192 20.5167 li
44.4981 20.7129 li
45.3526 20.7129 li
45.3526 20.6153 li
44.9737 20.2227 li
44.4981 19.9278 li
43.9297 19.8301 li
43.2657 19.8301 li
42.8868 19.5352 li
42.7911 19.4366 li
42.8868 19.6329 li
42.9805 19.7325 li
42.7911 20.0254 li
42.6954 20.418 li
42.6016 20.7129 li
0 0 0 1 cmyk
ef
24.2891 21.794 mo
24.2891 22.1856 li
24.3838 21.9903 li
24.4795 21.9903 li
24.5743 22.0889 li
24.4795 21.8917 li
24.3838 21.6954 li
24.2891 21.6954 li
24.0049 21.5977 li
0 0 0 1 cmyk
f
46.3018 21.1065 mo
46.3965 20.6153 li
46.4913 20.2227 li
46.7764 19.9278 li
47.25 19.6329 li
47.25 19.8311 li
46.3018 21.5977 li
46.3018 21.1065 li
cp
46.8711 21.2042 mo
47.25 20.418 li
47.4405 19.5362 li
47.6299 18.75 li
47.4405 19.044 li
47.1553 19.3399 li
46.7764 19.6329 li
46.4913 19.9278 li
46.2081 20.3213 li
46.1124 20.8126 li
46.1124 21.4004 li
46.3018 21.8907 li
0 0 0 1 cmyk
ef
8.44336 19.3399 mo
8.63282 18.8487 li
8.82227 19.6338 li
8.82227 20.1241 li
8.72852 20.6153 li
8.53809 20.1241 li
8.44336 19.7325 li
8.44336 19.3399 li
cp
9.0127 21.1065 mo
9.48731 20.8116 li
10.0567 20.6153 li
10.627 20.5176 li
10.627 20.6153 li
10.2461 20.9102 li
9.77149 21.2042 li
8.63282 21.5977 li
9.0127 21.1065 li
cp
8.34864 21.4991 mo
8.15918 21.793 li
9.0127 21.793 li
9.39258 21.6954 li
9.77149 21.4991 li
10.4376 21.0079 li
11.0059 20.418 li
11.0059 20.3213 li
10.5313 20.3213 li
10.0567 20.418 li
9.29883 20.6153 li
8.72852 21.0079 li
8.91797 20.418 li
9.0127 19.7325 li
8.91797 19.1426 li
8.72852 18.5538 li
8.53809 18.6514 li
8.44336 18.75 li
8.44336 18.9473 li
8.34864 19.1426 li
8.25391 19.5362 li
8.25391 19.8301 li
8.34864 20.6153 li
8.44336 20.9102 li
8.44336 21.2042 li
0 0 0 1 cmyk
ef
40.5127 18.2598 mo
39.7549 18.4551 li
38.8995 18.4551 li
39.1856 18.1602 li
39.6592 18.0626 li
40.0401 18.0626 li
40.5127 18.1602 li
40.5127 18.2598 li
cp
40.8936 18.5538 mo
41.0831 18.8487 li
41.1788 19.1436 li
41.1788 19.8301 li
40.7979 18.6514 li
40.8936 18.5538 li
cp
40.7979 19.3399 mo
40.9883 19.7325 li
41.0831 20.2227 li
41.2735 19.8301 li
41.3672 19.3399 li
41.2735 18.8487 li
40.9883 18.4551 li
40.7979 18.2598 li
40.7042 18.2598 li
40.7042 18.1602 li
40.2286 17.9649 li
40.0401 17.8672 li
39.3741 17.8672 li
38.9952 18.0626 li
38.6163 18.3584 li
38.2364 18.5538 li
38.711 18.5538 li
38.8057 18.6514 li
40.0401 18.5538 li
40.2286 18.5538 li
40.3233 18.4551 li
40.5127 18.3584 li
40.6075 18.4551 li
40.6075 18.9473 li
0 0 0 1 cmyk
ef
12.4288 20.0264 mo
12.5245 20.0264 li
12.5245 19.9278 li
0 0 0 1 cmyk
f
40.0401 19.3399 mo
39.7549 19.5362 li
39.1856 19.7325 li
40.1329 19.045 li
40.0401 19.3399 li
cp
39.5655 19.2403 mo
39.0918 19.5362 li
38.9004 19.7325 li
38.8057 20.0264 li
39.4698 19.8301 li
39.7549 19.7325 li
40.0401 19.4376 li
40.3243 19.045 li
40.419 18.75 li
40.419 18.5538 li
40.0401 18.9473 li
0 0 0 1 cmyk
ef
47.25 18.5538 mo
47.1553 18.751 li
46.9649 18.8487 li
47.25 18.1612 li
47.25 18.5538 li
cp
46.586 19.3399 mo
46.7764 19.2403 li
47.0606 19.1436 li
47.4395 18.751 li
47.4395 18.2598 li
47.25 17.7686 li
46.9649 18.5538 li
0 0 0 1 cmyk
ef
46.4913 17.7686 mo
46.586 16.9834 li
46.7764 17.376 li
46.7764 17.7686 li
46.586 18.1602 li
46.3018 18.5538 li
46.4913 17.7686 li
cp
45.9219 17.67 mo
45.7325 17.7686 li
45.2579 17.8672 li
45.0694 17.7686 li
44.7833 17.67 li
46.0176 17.4747 li
45.9219 17.67 li
cp
46.0176 18.8487 mo
45.9219 19.1436 li
46.4913 18.6524 li
46.7764 18.3584 li
46.9649 18.0635 li
47.0616 17.7686 li
47.0616 17.5733 li
46.8711 17.2774 li
46.6807 16.8858 li
46.586 16.5909 li
46.4913 16.7872 li
46.4913 16.9834 li
46.3965 17.1797 li
46.3018 17.2774 li
45.2579 17.4747 li
44.7833 17.4747 li
44.3096 17.5733 li
44.6895 17.8672 li
44.9737 18.0635 li
45.8272 18.0635 li
46.3018 17.7686 li
46.1124 18.4551 li
0 0 0 1 cmyk
ef
22.1065 18.4551 mo
22.2959 18.6514 li
22.3917 18.9454 li
22.2959 18.3584 li
22.1065 18.1602 li
21.8223 18.0626 li
0 0 0 1 cmyk
f
16.6993 17.2774 mo
17.0782 17.4737 li
17.1729 17.5723 li
17.2676 17.7686 li
16.3194 17.5723 li
15.4659 17.2774 li
15.75 17.0811 li
16.129 17.0811 li
16.4141 17.1797 li
16.6993 17.2774 li
cp
15.9395 16.8858 mo
15.1807 17.2774 li
15.2754 17.2774 li
16.129 17.7686 li
16.6036 17.9649 li
17.0782 18.0626 li
17.4571 18.0626 li
17.8379 18.1612 li
17.5528 17.8672 li
17.3624 17.5723 li
16.793 16.9825 li
16.3194 16.8858 li
0 0 0 1 cmyk
ef
27.2315 17.9649 mo
27.5157 18.0635 li
27.7051 18.0635 li
27.5157 17.9649 li
0 0 0 1 cmyk
f
23.3409 17.8672 mo
23.1514 17.67 li
23.3409 17.5733 li
23.5303 17.5733 li
23.9102 17.4747 li
23.8155 17.67 li
23.5303 17.8672 li
23.3409 17.8672 li
cp
23.7198 17.0821 mo
23.8155 16.7872 li
23.9102 16.5918 li
23.9102 15.4131 li
24.2891 15.0206 li
24.2891 15.4131 li
24.3838 15.9034 li
24.3838 16.4922 li
24.2891 16.6876 li
23.7198 17.0821 li
cp
24.0997 14.334 mo
23.9102 13.9395 li
23.5303 13.0567 li
24.0997 13.4493 li
24.4795 14.0381 li
24.4795 14.628 li
24.0997 14.334 li
cp
23.9102 17.8672 mo
24.004 17.67 li
24.0997 17.1807 li
24.5733 16.7872 li
24.7637 16.3936 li
24.669 16.002 li
24.4795 15.5098 li
24.3838 15.1192 li
24.3838 14.9209 li
24.4795 14.8243 li
24.669 14.4307 li
24.669 14.0381 li
24.5733 13.7442 li
24.3838 13.5469 li
23.5303 12.9581 li
23.3409 12.6641 li
23.2452 12.3702 li
23.1514 12.3702 li
23.4356 13.0567 li
23.5303 13.7442 li
23.625 14.1368 li
23.7198 14.4307 li
24.004 14.7256 li
24.2891 14.9209 li
24.0997 15.0206 li
23.9102 15.2168 li
23.7198 15.6094 li
23.625 16.4922 li
23.4356 17.2774 li
23.7198 17.1807 li
23.8155 17.1807 li
23.9102 17.2774 li
23.3409 17.4747 li
23.0557 17.5733 li
22.8663 17.67 li
23.2452 17.9649 li
23.7198 17.9649 li
0 0 0 1 cmyk
ef
27.3243 17.5733 mo
27.42 17.67 li
27.5157 17.67 li
27.6104 17.5733 li
0 0 0 1 cmyk
f
27.42 17.0821 mo
27.3243 17.1807 li
27.42 17.1807 li
27.5147 17.0821 li
0 0 0 1 cmyk
f
35.0118 16.9834 mo
35.2012 17.1807 li
35.1055 16.9834 li
0 0 0 1 cmyk
f
21.6319 15.0196 mo
21.1573 14.8243 li
20.6836 14.5293 li
20.9678 14.4307 li
21.1573 14.4307 li
21.7276 14.5293 li
22.6768 14.9209 li
22.3917 15.0196 li
22.2022 15.1182 li
21.6319 15.0196 li
cp
22.7706 15.1182 mo
23.1514 15.0196 li
22.3917 14.628 li
22.0108 14.3331 li
21.5372 14.2344 li
21.253 14.1358 li
20.9678 14.2344 li
20.5879 14.3331 li
20.3995 14.5293 li
21.5372 15.3145 li
21.7276 15.3145 li
21.917 15.4122 li
22.3917 15.3145 li
0 0 0 1 cmyk
ef
19.6397 13.253 mo
19.3555 12.8614 li
19.1661 12.4678 li
19.0704 12.0752 li
19.4512 12.2725 li
19.7354 12.5655 li
19.9249 13.0577 li
20.0196 13.4502 li
19.6397 13.253 li
cp
20.3047 13.7442 mo
20.1143 12.7627 li
19.9249 12.3692 li
19.7354 12.0752 li
19.4512 11.8799 li
18.8809 11.584 li
18.8809 12.5655 li
18.9756 12.8614 li
19.1661 13.0577 li
20.1143 13.8428 li
20.4942 14.2354 li
0 0 0 1 cmyk
ef
48.1993 10.7989 mo
48.7686 10.9942 li
49.2432 11.1905 li
48.6749 11.2901 li
48.1045 11.2901 li
47.5362 11.0948 li
47.0606 10.8965 li
47.6299 10.7989 li
48.1993 10.7989 li
cp
47.1553 10.6016 mo
46.7764 10.8965 li
47.4395 11.2901 li
48.1993 11.4864 li
48.959 11.4864 li
49.3379 11.3877 li
49.7178 11.2901 li
48.8643 10.7002 li
48.5782 10.6016 li
48.1045 10.504 li
47.6299 10.504 li
0 0 0 1 cmyk
ef
2.4668 7.46094 mo
2.75 7.8545 li
2.84571 8.2461 li
2.84571 9.13086 li
2.56055 8.34571 li
2.4668 7.95215 li
2.4668 7.46094 li
cp
2.3711 10.3086 mo
1.89747 10.4063 li
0.949219 10.5049 li
1.32813 10.209 li
1.80176 10.0137 li
2.3711 9.91504 li
2.84571 10.0137 li
2.3711 10.3086 li
cp
2.3711 8.63965 mo
2.56055 9.22852 li
2.94141 9.81739 li
2.27637 9.71973 li
1.61329 9.71973 li
1.32813 9.81739 li
1.04297 10.0137 li
0.75879 10.3086 li
0.663086 10.6026 li
1.13868 10.7012 li
1.70704 10.6026 li
2.3711 10.5049 li
2.56055 10.4063 li
2.84571 10.209 li
3.22461 10.0137 li
3.13086 9.81739 li
3.13086 9.32715 li
3.22461 8.9336 li
3.22461 8.63965 li
3.03614 7.95215 li
2.75 7.46094 li
2.3711 6.97071 li
2.27637 7.06934 li
2.27637 7.16602 li
2.3711 7.46094 li
2.27637 8.04981 li
0 0 0 1 cmyk
ef
1.99219 9.32715 mo
1.70704 9.12989 li
1.23243 8.83594 li
0.85254 8.2461 li
0.56836 7.75586 li
1.13868 7.95118 li
1.51856 8.34473 li
2.27735 9.32715 li
1.99219 9.32715 li
cp
1.99219 8.44239 mo
1.42286 7.8545 li
0.663086 7.55958 li
0.09375 7.06836 li
0.378907 7.8545 li
0.759766 8.63868 li
0.949219 8.9336 li
1.23243 9.12989 li
1.70704 9.42383 li
2.18262 9.52247 li
2.56153 9.52247 li
2.3711 9.22852 li
2.27735 8.83594 li
0 0 0 1 cmyk
ef
7.49512 9.22852 mo
7.58985 9.22852 li
7.58985 9.13086 li
0 0 0 1 cmyk
f
27.8936 8.63868 mo
27.9893 8.63868 li
27.7051 8.54102 li
0 0 0 1 cmyk
f
40.1329 2.94532 mo
39.7549 2.65235 li
40.3233 2.65235 li
40.7979 2.74903 li
41.2735 3.04395 li
41.4629 3.14161 li
41.6524 3.43653 li
40.6075 3.14161 li
40.1329 2.94532 li
cp
41.7471 3.73145 mo
42.2217 3.92676 li
42.0323 3.73145 li
41.8428 3.43653 li
41.7471 3.14161 li
41.3672 2.74903 li
41.0831 2.65235 li
40.1329 2.45411 li
39.5645 2.45411 li
39.6592 2.74903 li
39.9444 3.04395 li
40.5127 3.43653 li
41.3672 3.63379 li
0 0 0 1 cmyk
ef
42.7911 4.0254 mo
42.8858 3.53418 li
42.9805 2.94532 li
43.171 3.43653 li
43.171 4.0254 li
43.0752 4.61426 li
42.7911 5.10547 li
42.6954 4.61426 li
42.7911 4.0254 li
cp
42.4112 5.4004 mo
42.2217 5.4004 li
41.8428 5.30176 li
41.5577 5.10547 li
41.1788 4.51563 li
41.0831 4.22168 li
41.4629 4.32032 li
41.8428 4.61426 li
42.5059 5.30176 li
42.4112 5.4004 li
cp
40.2295 4.12403 mo
40.2295 4.61426 li
40.1338 5.00684 li
40.0401 5.20411 li
39.9444 5.30176 li
39.5655 5.59668 li
39.7549 5.10547 li
39.8497 4.61426 li
40.0401 4.12403 li
40.3233 3.73145 li
40.2295 4.12403 li
cp
40.7979 6.18458 mo
41.3672 6.38184 li
41.7471 6.67676 li
42.127 7.16602 li
41.9366 7.06836 li
41.6524 6.97071 li
41.2735 6.87208 li
40.8936 6.67676 li
40.2295 6.08692 li
40.7979 6.18458 li
cp
40.8936 5.30176 mo
41.2735 5.4004 li
41.5577 5.59668 li
41.9366 6.18458 li
42.3165 7.36426 li
42.127 6.97071 li
41.8428 6.47852 li
41.5577 6.18458 li
41.0831 5.98829 li
40.9893 5.59668 li
40.8936 5.30176 li
cp
42.6954 7.06836 mo
42.8858 6.57715 li
43.4551 5.69336 li
43.4551 6.18458 li
43.0752 7.16602 li
42.6954 7.55958 li
42.6954 7.06836 li
cp
43.7393 7.36426 mo
44.6885 7.36426 li
44.4043 7.46094 li
44.2139 7.65723 li
43.9297 7.8545 li
43.0752 7.8545 li
42.8858 7.75586 li
43.2647 7.55958 li
43.7393 7.36426 li
cp
44.5938 6.47852 mo
44.4043 6.08692 li
44.1192 5.89063 li
44.4981 5.98829 li
44.9727 6.28321 li
45.6377 7.06836 li
45.4473 7.06836 li
45.1622 6.97071 li
44.878 6.77442 li
44.5938 6.47852 li
cp
45.6377 5.59668 mo
45.9219 4.41895 li
46.0166 5.00684 li
46.0166 6.28321 li
45.9219 6.57715 li
45.7325 6.77442 li
45.6377 6.47852 li
45.543 6.18458 li
45.6377 5.59668 li
cp
44.1192 4.90918 mo
44.7833 4.22168 li
45.2579 3.53418 li
45.3526 3.53418 li
45.3526 4.12403 li
45.1622 4.51563 li
44.5938 4.81153 li
44.1192 5.00684 li
44.1192 4.90918 li
cp
41.9366 8.04981 mo
41.0831 8.04981 li
40.5127 7.95215 li
39.9444 7.8545 li
40.419 7.65723 li
40.8936 7.55958 li
41.3672 7.55958 li
41.8428 7.8545 li
42.127 7.8545 li
41.9366 8.04981 li
cp
42.4112 4.90918 mo
41.9366 4.41895 li
41.2735 4.0254 li
40.9893 3.83008 li
40.7042 3.83008 li
40.5127 3.73145 li
40.5127 3.43653 li
40.2295 3.63379 li
40.0401 3.83008 li
39.8497 3.92676 li
39.6592 4.12403 li
39.5655 4.51563 li
39.376 5.49805 li
39.2803 5.79297 li
39.1856 5.98829 li
39.1856 6.18458 li
39.4698 5.98829 li
39.6592 5.79297 li
40.2295 6.38184 li
40.419 6.67676 li
40.7042 6.97071 li
41.1788 7.16602 li
41.6524 7.26465 li
42.127 7.36426 li
42.3165 7.46094 li
42.5059 7.65723 li
42.4112 7.75586 li
42.3165 7.75586 li
41.6524 7.46094 li
40.8936 7.26465 li
40.2295 7.46094 li
39.8497 7.65723 li
39.5655 7.95215 li
40.2295 8.14942 li
40.9893 8.34473 li
41.3672 8.44336 li
41.7471 8.34473 li
42.127 8.14942 li
42.4112 7.95215 li
42.6016 7.8545 li
42.7911 7.8545 li
42.9805 7.95215 li
43.0752 8.04981 li
43.2647 8.14942 li
43.7393 8.14942 li
44.0235 8.04981 li
44.5938 7.65723 li
45.0694 7.36426 li
45.3526 7.26465 li
45.6377 7.26465 li
45.7325 7.16602 li
45.7325 6.97071 li
45.8272 6.87208 li
45.9219 6.87208 li
46.1124 6.57715 li
46.3008 6.18458 li
46.3008 5.4004 li
46.1124 4.61426 li
45.9219 3.92676 li
45.8272 4.32032 li
45.6377 4.71192 li
45.3526 5.49805 li
45.2579 6.28321 li
44.878 5.89063 li
44.4043 5.69336 li
44.2139 5.59668 li
44.0235 5.59668 li
43.834 5.4004 li
44.1192 5.30176 li
44.4043 5.20411 li
44.9727 5.10547 li
45.2579 4.90918 li
45.3526 4.61426 li
45.543 4.32032 li
45.543 3.92676 li
45.4473 3.63379 li
45.4473 2.65235 li
45.0694 3.3379 li
44.5938 4.0254 li
44.0235 4.81153 li
43.6446 5.49805 li
44.2139 6.38184 li
44.4981 6.77442 li
44.878 7.16602 li
43.5508 7.16602 li
43.4551 7.26465 li
43.3594 7.16602 li
43.5508 6.67676 li
43.6446 6.18458 li
43.6446 5.69336 li
43.5508 5.10547 li
43.4551 5.10547 li
43.2647 5.59668 li
42.8858 5.98829 li
42.6016 6.47852 li
42.4112 6.97071 li
42.3165 6.67676 li
42.3165 6.38184 li
42.127 5.98829 li
41.9366 5.69336 li
41.6524 5.49805 li
41.3672 5.30176 li
41.1788 5.20411 li
40.9893 5.00684 li
40.7979 4.90918 li
40.6084 4.71192 li
40.9893 5.89063 li
39.7549 5.79297 li
39.7549 5.69336 li
40.0401 5.59668 li
40.2295 5.4004 li
40.419 5.00684 li
40.419 4.51563 li
40.5127 3.92676 li
40.7979 4.22168 li
41.6524 5.4004 li
41.9366 5.59668 li
42.7911 5.59668 li
43.0752 5.20411 li
43.2647 5.00684 li
43.3594 4.71192 li
43.4551 4.22168 li
43.3594 3.63379 li
43.2647 3.14161 li
43.0752 2.65235 li
42.8858 2.65235 li
42.5059 4.12403 li
0 0 0 1 cmyk
ef
12.7139 4.32032 mo
12.4288 4.71094 li
11.5752 5.39942 li
11.67 5.00684 li
11.8594 4.71094 li
12.4288 4.12305 li
12.7139 4.0254 li
12.9034 3.82911 li
12.7139 4.32032 li
cp
10.627 5.30079 mo
10.4376 5.00684 li
10.3418 4.61426 li
10.627 4.81055 li
10.9112 5.1045 li
11.1006 5.39942 li
11.1954 5.69336 li
10.627 5.30079 li
cp
12.9034 3.73145 mo
12.6182 3.82911 li
12.1446 4.12305 li
11.5752 4.71094 li
11.4805 5.1045 li
11.4805 5.49805 li
11.1954 5.00684 li
10.9112 4.71094 li
10.0567 4.0254 li
9.96094 4.0254 li
10.1524 5.00684 li
10.4376 5.39942 li
10.7208 5.59571 li
11.1006 5.89063 li
11.3858 6.1836 li
11.4805 6.08692 li
11.4805 5.69336 li
11.8594 5.59571 li
12.4288 5.20411 li
12.6182 4.90918 li
12.9034 4.22071 li
13.1876 3.63282 li
13.0928 3.63282 li
0 0 0 1 cmyk
ef
7.58985 4.12403 mo
7.875 4.51563 li
8.25391 5.30176 li
7.875 5.00782 li
7.58985 4.71192 li
7.4004 4.32032 li
7.21094 3.82911 li
7.58985 4.12403 li
cp
6.83106 3.92676 mo
7.02051 4.51563 li
7.30567 4.81153 li
7.58985 5.20411 li
7.96973 5.39942 li
8.34961 5.39942 li
8.34961 5.20411 li
8.16016 4.61426 li
8.06446 4.41895 li
7.68458 3.92676 li
6.73633 3.3379 li
6.64161 3.3379 li
0 0 0 1 cmyk
ef
8.25391 2.94532 mo
8.63282 3.92676 li
8.7295 4.51563 li
8.16016 3.53418 li
7.96973 3.04395 li
7.87403 2.45411 li
8.25391 2.94532 li
cp
7.87403 3.53418 mo
7.96973 3.82911 li
8.16016 4.22168 li
8.44336 4.51563 li
8.7295 4.71192 li
8.82325 4.61426 li
8.91797 4.41895 li
8.91797 4.0254 li
8.82325 3.43653 li
8.53907 2.84864 li
7.78126 1.86622 li
7.58985 1.76856 li
7.58985 1.96387 li
7.68458 2.74903 li
0 0 0 1 cmyk
ef
10.2471 2.84766 mo
10.627 3.24024 li
11.1954 4.22071 li
10.7208 3.92676 li
10.3418 3.53418 li
10.1524 3.04395 li
9.77247 2.45411 li
10.2471 2.84766 li
cp
9.77247 2.74805 mo
9.9629 3.43653 li
10.2471 3.82911 li
10.627 4.12305 li
11.3858 4.61426 li
11.3858 4.32032 li
11.2911 4.0254 li
11.0059 3.43653 li
10.7208 2.94434 li
10.3418 2.55274 li
9.86817 2.25879 li
9.29883 2.16114 li
9.58204 2.45411 li
0 0 0 1 cmyk
ef
21.8223 2.94532 mo
22.0108 2.74903 li
22.2022 2.65235 li
22.2022 3.14161 li
21.917 3.63379 li
21.6319 4.0254 li
21.253 4.32032 li
21.5381 3.43653 li
21.8223 2.94532 li
cp
21.253 3.53418 mo
21.253 4.0254 li
21.0626 4.51563 li
21.5381 4.32032 li
21.917 4.0254 li
22.2022 3.63379 li
22.3917 3.24122 li
22.4864 2.74903 li
22.3917 2.45411 li
22.2959 2.35645 li
21.6319 2.74903 li
0 0 0 1 cmyk
ef
4.26856 2.35645 mo
4.55372 2.55274 li
4.93262 2.74805 li
5.2168 3.04395 li
4.8379 2.94532 li
4.45801 2.74805 li
3.88965 2.25879 li
4.26856 2.35645 li
cp
5.59668 2.16114 mo
5.59668 1.57129 li
5.78711 2.0625 li
5.88184 2.55274 li
5.97754 3.63379 li
5.59668 2.65137 li
5.59668 2.16114 li
cp
3.32032 2.16114 mo
3.98438 2.84766 li
4.17383 2.94532 li
4.45801 3.04395 li
4.74317 3.24122 li
5.02735 3.24122 li
5.40723 3.14161 li
5.59668 3.53418 li
5.97754 4.0254 li
5.97754 4.12403 li
6.26172 4.41895 li
6.26172 2.94532 li
6.16602 2.45411 li
5.88184 1.96387 li
5.69239 1.57129 li
5.59668 0.982422 li
5.50196 0.982422 li
5.2168 2.45411 li
5.31348 2.94532 li
4.93262 2.45411 li
4.45801 2.16114 li
3.88965 1.96387 li
3.22461 1.86622 li
3.32032 2.0625 li
0 0 0 1 cmyk
ef
5.02833 4.0254 mo
4.64942 3.92676 li
4.36426 3.73145 li
3.98438 3.53418 li
4.74317 3.73145 li
5.12403 3.83008 li
5.40723 4.12403 li
5.02833 4.0254 li
cp
4.93458 3.53418 mo
4.36426 3.3379 li
3.7002 3.3379 li
4.45801 4.12403 li
4.93458 4.32032 li
5.78809 4.32032 li
5.88282 4.22168 li
5.69239 3.92676 li
5.40723 3.73145 li
0 0 0 1 cmyk
ef
44.2139 1.27637 mo
44.4043 1.47364 li
44.4981 1.76856 li
44.4981 2.25879 li
44.3086 3.43653 li
44.2139 3.3379 li
44.0235 2.16114 li
44.2139 1.27637 li
cp
44.0235 3.53418 mo
44.3086 3.82911 li
44.6885 3.43653 li
44.7833 2.94434 li
44.7833 2.25879 li
44.6885 1.57129 li
44.4043 0.982422 li
44.0235 0.491211 li
44.1202 0.884766 li
44.0235 1.375 li
43.834 2.25879 li
43.9297 3.14161 li
0 0 0 1 cmyk
ef
16.6036 1.17872 mo
16.8887 1.47364 li
17.1729 1.9629 li
17.3633 2.65137 li
17.4581 3.24024 li
17.0782 2.84766 li
16.793 2.25879 li
16.6036 1.57032 li
16.3194 1.08008 li
16.6036 1.17872 li
cp
18.0274 3.24024 mo
18.1221 3.14161 li
18.502 2.84766 li
19.4512 2.65137 li
18.6915 3.24024 li
18.3126 3.43653 li
17.9317 3.53418 li
18.0274 3.24024 li
cp
18.0274 2.55274 mo
18.1221 2.0625 li
18.4063 1.47364 li
18.6915 1.08008 li
19.1661 0.786133 li
19.0704 1.27637 li
18.7872 1.76856 li
18.0274 2.55274 li
cp
19.8301 1.57032 mo
20.209 1.57032 li
20.5889 1.66895 li
20.8741 1.86622 li
20.9678 2.0625 li
20.209 1.9629 li
19.8301 1.86622 li
19.5459 1.66895 li
19.8301 1.57032 li
cp
20.9678 2.74805 mo
20.4942 2.94532 li
20.1143 3.14161 li
19.6397 3.3379 li
19.6397 3.24024 li
19.9249 2.94532 li
20.6836 2.65137 li
21.3477 2.35645 li
20.9678 2.74805 li
cp
16.3194 1.27637 mo
16.4141 1.9629 li
16.6036 2.65137 li
16.6993 2.94532 li
16.8887 3.24024 li
17.0782 3.43653 li
17.3633 3.53418 li
17.5528 3.63282 li
17.7422 3.82911 li
17.8379 3.63282 li
18.4063 3.63282 li
18.8809 3.43653 li
19.9249 2.35645 li
19.0704 2.45411 li
18.3126 2.65137 li
18.7872 2.16016 li
19.1661 1.66895 li
19.4512 1.76856 li
19.7354 1.9629 li
19.9249 2.16016 li
20.3047 2.25879 li
20.5889 2.25879 li
20.7784 2.35645 li
20.3995 2.55274 li
19.9249 2.74805 li
19.3555 3.3379 li
19.3555 3.63282 li
20.8741 3.04297 li
21.1573 2.94532 li
21.3477 2.65137 li
21.7276 2.16016 li
20.8741 1.57032 li
20.6836 1.375 li
20.0196 1.375 li
19.1661 1.57032 li
19.2608 0.981446 li
19.5459 0.393555 li
19.2608 0.589844 li
18.9756 0.6875 li
18.502 1.08008 li
18.1221 1.66895 li
17.8379 2.25879 li
17.7422 2.55274 li
17.8379 2.94532 li
18.0274 2.74805 li
18.2168 2.74805 li
17.9317 3.14161 li
17.7422 3.43653 li
17.7422 3.14161 li
17.6485 2.45411 li
17.3633 1.57032 li
17.1729 1.375 li
16.8887 1.17872 li
16.6036 0.981446 li
16.0342 0.6875 li
16.2247 0.981446 li
0 0 0 1 cmyk
ef
12.9981 0.982422 mo
13.377 0.982422 li
13.6612 1.08106 li
13.9463 1.27637 li
14.2315 1.66993 li
14.4209 2.0625 li
13.9463 1.76856 li
13.1876 1.17969 li
12.9981 1.08106 li
12.8077 0.982422 li
12.9981 0.982422 li
cp
13.1876 3.04395 mo
12.7129 3.14161 li
12.334 3.24122 li
12.6182 2.94532 li
12.9981 2.74903 li
13.7569 2.55274 li
13.9463 2.55274 li
13.1876 3.04395 li
cp
13.377 1.66993 mo
13.8526 2.0625 li
14.3252 2.35645 li
14.2315 2.45411 li
13.377 2.35645 li
12.9034 2.35645 li
12.5245 2.55274 li
12.334 2.74903 li
12.1446 3.04395 li
12.0489 3.24122 li
11.9542 3.53418 li
12.2383 3.53418 li
12.2383 3.63379 li
12.334 3.53418 li
12.7129 3.53418 li
13.0928 3.43653 li
14.2315 2.65235 li
14.5167 2.55274 li
14.8956 2.45411 li
14.8956 2.35645 li
14.7061 2.16114 li
14.5167 1.76856 li
14.3252 1.47364 li
13.8526 0.884766 li
13.4727 0.6875 li
13.0928 0.786133 li
12.334 0.982422 li
12.9034 1.27637 li
0 0 0 1 cmyk
ef
31.2149 0.982422 mo
31.5 1.375 li
31.5958 1.76856 li
31.5958 2.35645 li
31.5 2.84766 li
31.4053 2.94532 li
31.3096 2.74903 li
31.2149 2.55274 li
31.1211 2.0625 li
31.2149 0.982422 li
cp
30.9297 2.35645 mo
31.2149 3.24122 li
31.5 3.53418 li
31.7842 2.55274 li
31.8799 1.96387 li
31.7842 1.47364 li
31.6885 1.17969 li
31.5 0.982422 li
31.0245 0.6875 li
31.0245 0.982422 li
30.9297 1.66993 li
0 0 0 1 cmyk
ef
39.9444 0.982422 mo
40.418 1.17969 li
40.8916 1.57129 li
41.2735 2.0625 li
40.7042 1.86719 li
40.2295 1.66993 li
39.7549 1.27637 li
39.3741 0.884766 li
39.9444 0.982422 li
cp
39.0909 0.884766 mo
39.1846 0.884766 li
39.5645 1.47364 li
40.0381 1.86719 li
40.6075 2.25879 li
40.8916 2.25879 li
41.2735 2.35645 li
41.4629 2.25879 li
41.5577 2.25879 li
41.6524 2.35645 li
42.3155 3.43653 li
42.3155 3.14161 li
41.8428 2.0625 li
41.6524 1.57129 li
41.5577 0.982422 li
41.5577 0.884766 li
42.126 1.47364 li
42.3155 2.0625 li
42.5049 2.74903 li
42.5049 3.53418 li
42.6954 2.84766 li
42.6954 2.45411 li
42.6006 2.0625 li
42.5049 1.76856 li
42.3155 1.375 li
41.8428 0.884766 li
41.2735 0.393555 li
41.3672 0.982422 li
41.3672 1.47364 li
41.4629 1.86719 li
41.4629 2.16114 li
41.0831 1.375 li
40.6075 0.982422 li
40.0381 0.786133 li
39.3741 0.6875 li
38.8995 0.6875 li
0 0 0 1 cmyk
ef
11.1954 1.66993 mo
11.3858 1.57129 li
11.9551 1.57129 li
12.5245 1.76856 li
12.9034 1.96387 li
12.4288 2.0625 li
11.9551 2.0625 li
10.9112 1.76856 li
11.1954 1.66993 li
cp
11.1006 2.0625 mo
11.3858 2.25879 li
12.335 2.25879 li
12.9991 2.16114 li
13.5674 2.0625 li
12.7139 1.57129 li
12.2393 1.37598 li
11.67 1.27735 li
11.4805 1.37598 li
11.1954 1.37598 li
11.0059 1.57129 li
10.627 1.57129 li
10.4376 1.66993 li
10.7208 1.96387 li
0 0 0 1 cmyk
ef
2.79688 53.545 mo
2.79688 52.3633 2.7754 52.1924 2.12598 52.1143 cv
1.95118 52.0899 li
1.88575 52.044 1.90723 51.8409 1.97461 51.8057 cv
2.44629 51.8301 2.81836 51.8409 3.26856 51.8409 cv
5.33204 51.8409 li
6.03321 51.8409 6.68067 51.8409 6.81348 51.8057 cv
6.87989 52.001 6.94532 52.8174 6.98829 53.3174 cv
6.94532 53.3848 6.76954 53.4073 6.71387 53.3389 cv
6.54883 52.8057 6.4502 52.4073 5.88086 52.2608 cv
5.64942 52.2042 5.29786 52.1924 4.81543 52.1924 cv
4.0254 52.1924 li
3.69727 52.1924 3.69727 52.2159 3.69727 52.6465 cv
3.69727 54.918 li
3.69727 55.2354 3.7295 55.2354 4.05762 55.2354 cv
4.69532 55.2354 li
5.15626 55.2354 5.49708 55.2129 5.62794 55.167 cv
5.75977 55.1221 5.83692 55.0538 5.88965 54.7706 cv
5.97852 54.3057 li
6.03321 54.2364 6.21973 54.2364 6.26465 54.3165 cv
6.26465 54.5879 6.21973 55.0323 6.21973 55.4639 cv
6.21973 55.8721 6.26465 56.3028 6.26465 56.5528 cv
6.21973 56.6319 6.03321 56.6319 5.97852 56.5635 cv
5.88086 56.1211 li
5.83692 55.917 5.75977 55.7461 5.54102 55.6905 cv
5.38672 55.6446 5.12305 55.6338 4.69532 55.6338 cv
4.05762 55.6338 li
3.7295 55.6338 3.69727 55.6446 3.69727 55.9405 cv
3.69727 57.5401 li
3.69727 58.1426 3.7295 58.5284 3.90528 58.7217 cv
4.03711 58.8584 4.26758 58.9815 5.23145 58.9815 cv
6.07715 58.9815 6.39551 58.9366 6.6377 58.8116 cv
6.83399 58.6973 7.13086 58.3008 7.417 57.711 cv
7.49317 57.6544 7.64747 57.6885 7.69044 57.7901 cv
7.61329 58.1885 7.33985 59.0616 7.19727 59.3692 cv
6.20899 59.3458 5.23145 59.334 4.25586 59.334 cv
3.26856 59.334 li
2.79688 59.334 2.42383 59.3458 1.7754 59.3692 cv
1.70997 59.334 1.68848 59.1534 1.75293 59.085 cv
2.11622 59.0499 li
2.74122 58.9932 2.79688 58.8233 2.79688 57.6319 cv
0 0 0 1 cmyk
ef
9.4795 53.545 mo
9.4795 52.3526 9.45801 52.17 8.76661 52.1143 cv
8.49317 52.0899 li
8.42774 52.044 8.44825 51.8409 8.51465 51.8057 cv
9.12989 51.8301 9.50196 51.8409 9.94044 51.8409 cv
10.3692 51.8409 10.7422 51.8301 11.2911 51.8057 cv
11.3565 51.8409 11.379 52.044 11.3126 52.0899 cv
11.0489 52.1143 li
10.4014 52.17 10.3799 52.3526 10.3799 53.545 cv
10.3799 57.4942 li
10.3799 58.21 10.4122 58.5059 10.6104 58.7217 cv
10.7305 58.8467 10.9395 58.9815 11.8057 58.9815 cv
12.7393 58.9815 12.9688 58.9366 13.1446 58.834 cv
13.3643 58.6973 13.6504 58.2901 13.8692 57.711 cv
13.9346 57.6544 14.1436 57.6983 14.1436 57.7794 cv
14.1436 57.9034 13.836 59.0616 13.6827 59.3692 cv
13.1231 59.3458 12.0811 59.334 10.9512 59.334 cv
9.94044 59.334 li
9.4795 59.334 9.12989 59.3458 8.51465 59.3692 cv
8.44825 59.334 8.42774 59.1534 8.49317 59.085 cv
8.82032 59.0499 li
9.45801 58.9815 9.4795 58.8233 9.4795 57.6319 cv
0 0 0 1 cmyk
ef
16.875 59.5166 mo
15.9532 59.5166 15.3731 59.2208 15.1641 59.0948 cv
15.0323 58.8467 14.8887 58.0401 14.8672 57.5069 cv
14.9229 57.4268 15.086 57.4044 15.1309 57.4727 cv
15.295 58.0518 15.7452 59.1641 17.0186 59.1641 cv
17.9405 59.1641 18.3897 58.5391 18.3897 57.8584 cv
18.3897 57.3584 18.2901 56.8018 17.4893 56.2696 cv
16.4483 55.5655 li
15.8995 55.1905 15.2627 54.543 15.2627 53.6124 cv
15.2627 52.5342 16.0733 51.6592 17.501 51.6592 cv
17.8409 51.6592 18.2364 51.7168 18.5225 51.8067 cv
18.6641 51.8409 18.8184 51.875 18.9053 51.875 cv
19.0049 52.1485 19.1026 52.7832 19.1026 53.2608 cv
19.0596 53.3292 18.8838 53.3624 18.8292 53.295 cv
18.6876 52.75 18.3897 52.0108 17.337 52.0108 cv
16.2608 52.0108 16.0303 52.75 16.0303 53.2706 cv
16.0303 53.9307 16.5567 54.3956 16.9639 54.668 cv
17.8409 55.2354 li
18.5323 55.6788 19.2139 56.337 19.2139 57.4151 cv
19.2139 58.6631 18.3018 59.5166 16.875 59.5166 cv
0 0 0 1 cmyk
ef
21.4629 53.545 mo
21.4629 52.3633 21.4415 52.1924 20.794 52.1143 cv
20.6182 52.0899 li
20.5528 52.044 20.5743 51.8409 20.6397 51.8057 cv
21.1114 51.8301 21.4854 51.8409 21.9356 51.8409 cv
23.9981 51.8409 li
24.7002 51.8409 25.3477 51.8409 25.4795 51.8057 cv
25.545 52.001 25.6124 52.8174 25.6553 53.3174 cv
25.6124 53.3848 25.4346 53.4073 25.3819 53.3389 cv
25.2168 52.8057 25.1182 52.4073 24.5459 52.2608 cv
24.3165 52.2042 23.9659 52.1924 23.4825 52.1924 cv
22.6924 52.1924 li
22.3633 52.1924 22.3633 52.2159 22.3633 52.6465 cv
22.3633 54.918 li
22.3633 55.2354 22.3956 55.2354 22.7247 55.2354 cv
23.3614 55.2354 li
23.8223 55.2354 24.1631 55.2129 24.294 55.167 cv
24.4258 55.1221 24.503 55.0538 24.5577 54.7706 cv
24.6456 54.3057 li
24.7002 54.2364 24.8868 54.2364 24.9307 54.3165 cv
24.9307 54.5879 24.8868 55.0323 24.8868 55.4639 cv
24.8868 55.8721 24.9307 56.3028 24.9307 56.5528 cv
24.8868 56.6319 24.7002 56.6319 24.6456 56.5635 cv
24.5459 56.1211 li
24.503 55.917 24.4258 55.7461 24.2071 55.6905 cv
24.0528 55.6446 23.7891 55.6338 23.3614 55.6338 cv
22.7247 55.6338 li
22.3956 55.6338 22.3633 55.6446 22.3633 55.9405 cv
22.3633 57.5401 li
22.3633 58.1426 22.3956 58.5284 22.5713 58.7217 cv
22.7042 58.8584 22.9327 58.9815 23.8995 58.9815 cv
24.7432 58.9815 25.0626 58.9366 25.3038 58.8116 cv
25.5 58.6973 25.7979 58.3008 26.084 57.711 cv
26.1592 57.6544 26.3126 57.6885 26.3575 57.7901 cv
26.2803 58.1885 26.0059 59.0616 25.8633 59.3692 cv
24.877 59.3458 23.8995 59.334 22.9229 59.334 cv
21.9356 59.334 li
21.4629 59.334 21.0899 59.3458 20.4434 59.3692 cv
20.378 59.334 20.3545 59.1534 20.4219 59.085 cv
20.7833 59.0499 li
21.4083 58.9932 21.4629 58.8233 21.4629 57.6319 cv
0 0 0 1 cmyk
ef
27.7081 53.045 mo
27.4542 52.4073 27.2901 52.17 26.8184 52.1133 cv
26.6202 52.0899 li
26.543 52.0225 26.5547 51.8643 26.6426 51.8057 cv
26.961 51.8301 27.3126 51.8409 27.7842 51.8409 cv
28.2666 51.8409 28.6495 51.8301 29.1124 51.8057 cv
29.1885 51.8516 29.211 52.0225 29.1338 52.0899 cv
28.9688 52.1133 li
28.5518 52.17 28.4639 52.2393 28.4532 52.3292 cv
28.4747 52.4424 28.6612 53.0557 29.002 53.919 cv
29.5079 55.2354 30.0118 56.5411 30.5596 57.836 cv
30.9004 57.086 31.3721 55.917 31.6143 55.3155 cv
31.9434 54.543 32.4473 53.2608 32.6348 52.7725 cv
32.7208 52.5342 32.7325 52.4073 32.7325 52.3292 cv
32.7325 52.25 32.6231 52.1583 32.2393 52.1133 cv
32.042 52.0899 li
31.9639 52.0225 31.9874 51.8516 32.0635 51.8057 cv
32.3711 51.8301 32.7881 51.8409 33.2051 51.8409 cv
33.5674 51.8409 33.9073 51.8301 34.2696 51.8057 cv
34.3448 51.8516 34.3448 52.0342 34.292 52.0899 cv
33.9629 52.1133 li
33.6983 52.1358 33.5333 52.2725 33.3907 52.5118 cv
33.0831 53.045 32.6553 53.9639 32.1622 55.1221 cv
31.5704 56.5176 li
31.1309 57.5635 30.6143 58.8809 30.4288 59.4825 cv
30.3956 59.504 30.3526 59.5166 30.3086 59.5166 cv
30.253 59.5166 30.1983 59.504 30.1426 59.4825 cv
30.0225 59.0059 29.836 58.4473 29.6387 57.9717 cv
0 0 0 1 cmyk
ef
35.7071 53.5665 mo
35.7071 52.3633 35.6846 52.17 35.0362 52.1133 cv
34.7627 52.0899 li
34.6963 52.045 34.7198 51.8409 34.7842 51.8057 cv
35.3331 51.8301 35.7071 51.8409 36.1661 51.8409 cv
36.6065 51.8409 36.9795 51.8301 37.5274 51.8057 cv
37.5938 51.8409 37.6153 52.045 37.5499 52.0899 cv
37.2764 52.1133 li
36.628 52.17 36.6065 52.3633 36.6065 53.5665 cv
36.6065 57.6084 li
36.6065 58.8116 36.628 58.9708 37.2764 59.0499 cv
37.5499 59.084 li
37.6153 59.1299 37.5938 59.334 37.5274 59.3692 cv
36.9795 59.3458 36.6065 59.334 36.1661 59.334 cv
35.7071 59.334 35.3331 59.3458 34.7842 59.3692 cv
34.7198 59.334 34.6963 59.1534 34.7627 59.084 cv
35.0362 59.0499 li
35.6846 58.9708 35.7071 58.8116 35.7071 57.6084 cv
0 0 0 1 cmyk
ef
39.6905 53.545 mo
39.6905 52.3633 39.668 52.1924 39.0196 52.1143 cv
38.8438 52.0899 li
38.7793 52.044 38.8008 51.8409 38.8663 51.8057 cv
39.3389 51.8301 39.711 51.8409 40.1612 51.8409 cv
42.2256 51.8409 li
42.9258 51.8409 43.5743 51.8409 43.7061 51.8057 cv
43.7715 52.001 43.8379 52.8174 43.8809 53.3174 cv
43.8379 53.3848 43.6622 53.4073 43.6065 53.3389 cv
43.4434 52.8057 43.3448 52.4073 42.7735 52.2608 cv
42.543 52.2042 42.1915 52.1924 41.709 52.1924 cv
40.919 52.1924 li
40.5909 52.1924 40.5909 52.2159 40.5909 52.6465 cv
40.5909 54.918 li
40.5909 55.2354 40.6231 55.2354 40.9522 55.2354 cv
41.5889 55.2354 li
42.0499 55.2354 42.3897 55.2129 42.5215 55.167 cv
42.6534 55.1221 42.7305 55.0538 42.7842 54.7706 cv
42.8721 54.3057 li
42.9258 54.2364 43.1133 54.2364 43.1583 54.3165 cv
43.1583 54.5879 43.1133 55.0323 43.1133 55.4639 cv
43.1133 55.8721 43.1583 56.3028 43.1583 56.5528 cv
43.1133 56.6319 42.9258 56.6319 42.8721 56.5635 cv
42.7735 56.1211 li
42.7305 55.917 42.6534 55.7461 42.4336 55.6905 cv
42.2803 55.6446 42.0157 55.6338 41.5889 55.6338 cv
40.9522 55.6338 li
40.6231 55.6338 40.5909 55.6446 40.5909 55.9405 cv
40.5909 57.5401 li
40.5909 58.1426 40.6231 58.5284 40.7979 58.7217 cv
40.9307 58.8584 41.1602 58.9815 42.125 58.9815 cv
42.9717 58.9815 43.2891 58.9366 43.5303 58.8116 cv
43.7286 58.6973 44.0254 58.3008 44.3106 57.711 cv
44.3868 57.6544 44.5401 57.6885 44.584 57.7901 cv
44.5069 58.1885 44.2334 59.0616 44.0909 59.3692 cv
43.1026 59.3458 42.125 59.334 41.1495 59.334 cv
40.1612 59.334 li
39.6905 59.334 39.3155 59.3458 38.67 59.3692 cv
38.6026 59.334 38.5821 59.1534 38.6475 59.085 cv
39.0088 59.0499 li
39.6348 58.9932 39.6905 58.8233 39.6905 57.6319 cv
0 0 0 1 cmyk
ef
47.2725 55.1797 mo
47.2725 55.3829 47.2725 55.5098 47.3057 55.5538 cv
47.3379 55.5879 47.503 55.6104 48.0626 55.6104 cv
48.4581 55.6104 48.876 55.5655 49.1934 55.3155 cv
49.4903 55.0772 49.7432 54.6797 49.7432 53.9073 cv
49.7432 53.0108 49.2051 52.1583 47.9864 52.1583 cv
47.3057 52.1583 47.2725 52.2051 47.2725 52.5225 cv
47.2725 55.1797 li
cp
46.3731 53.5547 mo
46.3731 52.4776 46.3399 52.2842 45.8907 52.2266 cv
45.5381 52.1827 li
45.462 52.125 45.462 51.9424 45.5499 51.8995 cv
46.1641 51.8409 46.9229 51.8067 47.9971 51.8067 cv
48.6768 51.8067 49.3252 51.8643 49.8301 52.1485 cv
50.3565 52.4317 50.7413 52.9424 50.7413 53.7374 cv
50.7413 54.8155 49.917 55.4063 49.3682 55.6348 cv
49.3135 55.7012 49.3682 55.8155 49.4239 55.9053 cv
50.3008 57.3702 50.8829 58.2794 51.629 58.9258 cv
51.8174 59.0958 52.0899 59.2208 52.3868 59.2452 cv
52.4415 59.2657 52.4522 59.3565 52.3985 59.4034 cv
52.2989 59.4366 52.1231 59.46 51.9151 59.46 cv
50.9825 59.46 50.4219 59.1749 49.6426 58.0284 cv
49.3594 57.6084 48.9073 56.8252 48.5684 56.3145 cv
48.4034 56.0645 48.2276 55.9512 47.7881 55.9512 cv
47.294 55.9512 47.2725 55.9629 47.2725 56.2012 cv
47.2725 57.6319 li
47.2725 58.8243 47.294 58.96 47.9317 59.0499 cv
48.1622 59.085 li
48.2276 59.1416 48.2051 59.335 48.1397 59.3692 cv
47.6456 59.3458 47.2725 59.335 46.834 59.335 cv
46.3731 59.335 45.9776 59.3458 45.462 59.3692 cv
45.3956 59.335 45.375 59.1641 45.4405 59.085 cv
45.7149 59.0499 li
46.3516 58.9717 46.3731 58.8243 46.3731 57.6319 cv
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI10"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI10"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%ADOBeginClientInjection: PageTrailer Start "AI10"
%ADOEndClientInjection: PageTrailer Start "AI10"
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageTrailer End "AI10"
%ADOEndClientInjection: PageTrailer End "AI10"
%ADOBeginClientInjection: DocumentTrailer Start "AI10"
%ADOEndClientInjection: DocumentTrailer Start "AI10"
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%ADOBeginClientInjection: DocumentTrailer End "AI10"
%ADOEndClientInjection: DocumentTrailer End "AI10"

dvidict /dvispend get exec
 O O M U U
-3746737 d u
6874956 r
f0(A)s
-22414 r(v)s
-14009 r(ailab)s
-11207 r(le)s
155771 W(online)S(at)S(www)s
-33621 r(.sciencedirect.com)s o
1544727 d U
6882704 r
dvispsav undsclx dvispbeg 
159 159 0 sub div 13 13 0 sub div scale
0 neg 0 neg translate

%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 12 8
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFA87D527DA8FD07FF5227A8A8A8FD04FFA87DFD1CFFA8527D7DFD
%08FF52F8FD1DFFFD047DA8FFFFFF5227A8FD13FFA8FFFFA827F8F8F852FD
%07FF52F87DF827A8FFFFA8F827FD1BFFA8F827F8F852FD07FF27277DFD1B
%FF7DF8F827F82652FFFF27F87DFD12FF7D277DFF52F8FD0427FD07FFA87D
%A827F8A8FFFF522727FD1BFF27272752F852FD07FFA87DFD1CFF7DF82727
%27F82752FFA87DA8FD12FFA8F852FFF8F87DFFA8A8FFFFA8522752A8A852
%FF52F852FFFF27F87DFF522752A8FFA8527D527DFF525252A8FFFF525252
%A8FD04FFA826F8A8FFA8A8FFFFA8525252FF7D7DFFFF7D52277DFFFF7D7D
%7D5227A8FFFFA87D27527DFFA8522752A8FF7D2627FFA87DF8F8A8A852FF
%7D527D52A8FF525227A8FFFFA87D27527DFF27F8277D27F852A8FFFFFFA8
%27F827F8525227A8A8F827FFFFF827A852F827F827FFA8F827F8272727F8
%2752FF4B27F82727FD05FFF82752FD05FF2727F8275252F8FFA827F827F8
%7DFF52F827F82727FFFF52F827F827FF52F827F827FFA8F852FFFFFF27F8
%A85227A852F827F87D5227F82727FFFF7DF827F8275227F827F827F8F827
%27A8FF7DF82752527D52F87EFF27F8A87DF8277DF852A87DF8527D27F827
%5227F87D277D7DF827A852F852FD04FF52F8F8F852A8FF2727277D27A84B
%F87D52F87D7D27F8A8272727A827277DA8F8275252527DF852A852F87D7D
%2727FFFFFF52F85252F8A85227F852522727A8522752A8F827525252A827
%F8277DFF5227F827F8A82727A8FFFFFF52277DFF52275252F87D52277DFF
%7D27277DF852FFFFF8277DFFFF52F87DFFA8F827FD04FFA852F827F827A8
%27F8FD04FF52F87DF827A8FF52275252F8A8FF7DF87D52277DFFFFFF2727
%7DFF7D27277DF852FFFFFF7DF87D5227A852F87DFF52F87DFFA8F8275227
%52FD04FFA8F87DFFFFFFA87DF8265227F8FD04FF52F87DFFA8F827F827A8
%27F827F827F8277DF852FFFF52F82627A82726F820F826F8FD06FFA85227
%F852F827FD04FF27265220F827F827F85227F8A8FF52F85252F8A8FFFFFF
%27F827F827F8277DF827FFFFFF27265252F8A852F8A8FF27F8F827F8F8F8
%4BF87DFD04FF7D2652FD05FF52F8522727A8FFFFFF52277DFFFF27F82727
%FF272752FD047DA8F87DFFFFFFA852272752F8527D7D527EFD08FF272752
%27F8FD04FF52F87DF827FD047DA852F8FFFF7DF87D52277DFFFFFF272752
%FD047DA8F852FFFFA827F8A85227A852F8A8FF52F8527D7D52A852277DFD
%04FFA8F87DFF27527D7DF8277D52F852A87DA87DF87DFFFF52F8F87DFF52
%F852A8A8527D7DF852FFA8527DA8F827522752FFA8527DFFFFFFA852277E
%7D27F8A827F852A852A827277D27F8A8A87D27A827F8A8FF52F87D7DF827
%7D7DA852F852A8A852A87DF8277D7D27F827FF52F8A852F87DFF52F827FF
%A8527DA8F8277D7E7DFF7D2752FF27F827F827F8FFA827F827F85252277D
%FFFFA8F827A8FFA827F827272752A8F852FFA8F827272752FFF8272727F8
%52FD04FFF827F827F827FFA8F827F8275252F8A87D27F851F8277D52F8A8
%FF7DF87DFF27F827F852A827F827272752A8F827F827F8277DFF4B27A852
%F8A8FFFFF8272727F852FF52F827F827FFA8F87DFF7D27F82627A8FFFF7D
%F8F8277D7DF8A8FFFFA82727FFFFFF7D27F82627FF7D267DFFA852F8F8F8
%A8FFA8F826F852A8FD04FF7DF8F8F827A8FFFF7DF8F8F8A852F8A8FF52F8
%F82752FF5227A8FF7D267DFF7D27F8F852FF7D27F82627FFA827F8F8F852
%7DFFFF7DF8FF5226A8FFFFA820F8F852A8FFA827F8F827FFA8F852FF
%ADOEndClientInjection: DocumentHeader "AI11EPS"
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
currentglobal true setglobal
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
setglobal
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
currentglobal true setglobal
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2011-08-26T10:41:13+05:30</xmp:MetadataDate>
         <xmp:ModifyDate>2011-08-26T10:41:13+05:30</xmp:ModifyDate>
         <xmp:CreateDate>2011-08-26T10:41:13+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>20</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAFAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Ajmn+ZvzQ/Ofzzf22m+ah&#xA;oEEYebTtPa6ltI/SD8UjSOCrSycTVmNe/agxV9B/kn5b/M3y5ouoWXnzVF1IpMp02QztcusQUhy0&#xA;sgV+JNOIbp7YqhNU/wCcm/yg0/U3sG1WS5MTcJLm2gklgBrQ0cD4wPFKjwrirEPMqeSde/Pjyd5g&#xA;tfOcsNxeWsFxptjDBKyyJV/TRZyQkaznkGRlr1B+1iqC/wCcfPP3m+0/MjzB+X/nHU57+7DztaPd&#xA;OZGFzbOfVWNmq3CWOrgV4gLt1xVr85/P3nHVPzn0DyF5R1Oex+qzW31w2zlOVxKRK5l405xxW9GZ&#xA;Tt9qoxV6Brf/ADkp+UmkavLpc+qSTywP6c81tBJNCrA0Yeooo3HuUrirJNa/NXyNpPk6LzhNqSz6&#xA;DcMsdvc2ytKZHckBAqioYcTyDUpQ1xVJdP8A+chvykv76e0g1xQLe2N5JcSxSxw8FUMyhnUEuAfs&#xA;gVrsN9sVQui/85K/lJq+rw6XBqcsM1xIIreW4t5Y4ndjxUcyPh5di9MVTjz3+dX5e+SL6PT9c1Bh&#xA;qLqHNnbxtNIiHo0nH4Ur2DGp8KYqmfkb8x/J3nixku/Ll+t16BAubdg0c0RbpzjcBgDTZuh7HFUD&#xA;+cfnW88mfl1q2v2Cq1/AscVpzHJVlnkWJXYHrw58qd6Yq+a/JXlP88fzB0abzVpHnhmvRM4Ng2pX&#xA;MU6lT3jjHpxA/srsKYq+oNO1ifyr5Bsr/wA/apBHeWVsg1bUCfgaalPh4qvNidgFWrHoMVYvoP8A&#xA;zkl+U+t6xb6TbajLDc3UghtnuLeSON5HPFV50IXkTtypirFvyB03yppXm3z1c2Hm2TV3jmJv4biJ&#xA;7dI1WWRjcSSSsVlIIZS4pTcnZhirI7j/AJye/J6DUzYnVZZFV+DXkdvK8APQkMF5Mo8VU+2Ksr8z&#xA;fml5E8t6Zpeqapqka6frLqmn3UIaaOQMAfU5RhhwUGpbFWLRf85N/k/Jq36O/S0iAyekL14JRbE1&#xA;pX1KbLX9oinfpirM/OXn/wApeTdKTU/MOoJaW0p424AaSSVqVpHGgZm9zSg74qx/yR+e35cec9XX&#xA;R9GvpBqcis8NtcQvEZAiln4EgqSqgmla0xVL9Z/5yV/KPSdWk02XVXuJIX9Oae1hkmgVgaGkiij0&#xA;8UriqTf85BfmBL/yp631/wAm60yQ397BFHqNhK0bmMrIzKHXi6HlGAw2I6HvirzPQvIn/OR2oeT7&#xA;HzjonnO7vkuYPrUOmvqN405Ar8Ijl5Qu23QtirKvIf5vP+Yn5XebdC83al+iNU02wd7rWYEIZ7Vh&#xA;RpDDHSrKw4OqU5BgBucVTb8rfO/5e/lx+T+l3V75gm1LTr69nS3nFtKrLKTWSJYTzZEj48ia7k1H&#xA;XFWc6D+en5Ya5c6pDYayvDSLc3d3czI8MPoKyo0iPIF5AO6r4kkUriqUWH/OTf5P3uqpp6arJD6j&#xA;+ml3PBLHbk9AS7D4QfFgB40xVm/m7zx5W8o6P+l/MF/HZ2TELExq7yuRULEiBmckeA9ztirEPLn/&#xA;ADkZ+U+vXb2kGqtaTJFJN/psTwIUhQySEOap8KKTQn5Yq8l8n/8AOSEcf5va7da7r0zeR7oSppcb&#xA;QuyR8ZEFuyxqnNP3fLkab998VTnzf/zjB5H8z6hf6l5K8xQ2NwJHe5sA0d1bRykksoMbK8Ar2PKn&#xA;YU6KvLfLP5l+fbXyZ568oTajLqVta6cfq83qNN6KrewWs/pSn4vReGd/bpSlTir1b/nHX8sfyv17&#xA;8rE1DVNMtdU1K5mnTU5Z/ikgMchEcaNUGL91xf4aE8vliqR/mNYWOnf85OeRrGwhS2srWPS4raCI&#xA;BUSNJ5AqqB2AxV3/ADkbpt35H/Nby9+ZOmRfBcyRtdBdg1xaUV0Y029a3IX6GxVh/ke113WtF/Mv&#xA;805FP19La4htJAfsTX7A3TxnahhtnIFOgbFW/wApbDzDeeS7230n8t9P81W91LJFd6tcSxfWFbiK&#xA;RpzYPDwBBUrTffFUvvPLHnDy/wDknrttrkaw2Da7YfUolnhnC3CQ3K3VfReTgaekCDgV6ppf5FeU&#xA;tS/IG2n05bbT/MWrWdteyazevsZSyy+iZGP7qN/sfCPAmpwqwXy/cWP5datomjfmj+X9oILef1bH&#xA;zBEp9U0YMZZHjZ4bxIyyngT8I7VoMVSryRe+ZtS/NLzHqCeU7Xzhrzy3EkthqDxhYP33F3WOUhWK&#xA;7IP5RirPfyf8m+fdN/PU6tL5fh8s6XcwTvqWkwXNuyxQSQ0ThCsjScGuVQii0HyGKvojzno/lrWP&#xA;LGoab5lMS6Jcxhbt5pBEiDkCj+oxAVlcKVPjir5b/MT/AJx8TyXoFx558oebPUsLIrJBVhHPR3CL&#xA;6N1A3GRqt2VcVYn5+/MbzV5v/LXylFrtzI8Nvf39vcXhH9+1vHbGOVwKBnjjuWWvU798Cvq/QPyj&#xA;/KWxj0a/0vRLF5LIRy6XqAAeSRgvJJTID++anxhmrTqOmFXyNBf6hZ6Z+Z/1N2jFxLFb3TrWvoya&#xA;geYqOgbZT4g074qybyjoPmrVvyr/AEdpX5aWGqWV9HKV8zGaEXnrKzL6qyM4dDEwoE2FBuNzVVjn&#xA;nTRfNWjflN5YsteVUi/SmoyaWEminH1dorflxeF5E4+sH2rWtcCXqX/OSfkLyh5f/Kby1c6RpVtZ&#xA;3cN5b2huoY1SWSKS0mkf1XA5SFnjDVYnevjhQw3X1h1/8xvyx0fzPKf0E2iaFHSRyquk8CvIS239&#xA;7L8DNX6dsVe5/ml5F8n+UvIXmXX/ACrotrpuvRaY9tHc2iem6QTMsczKqkBW9Nm+MDl74q8I/KfT&#xA;/MN75JvbXSfy4sPNVvdSyRXerTyxC5RuIoiF2Dw8AQy8ab74qgb3y15y8v8A5Ia3Z65GsOnnXrE2&#xA;MSzwz8bhYbhboH0Xk4mgiqDTAr6d/KHV9L0f8kfLmo6pdRWVjb2Aea4mYIigM3c9/Ad8Kvl7ybz1&#xA;U/mt5htIDHpcukXdDSgQ3l/DNDGabV4RN92KqXmD/wBZ68qf9trUP+IDFWafnh5G8veTPyl8sL5f&#xA;sRbvq8kLavfmrzTsLf1VSSU9EL1f0xRaqDT4cVS/VfLHnHW/yzsrKz/LTTrGwit4bi08zRXNus5S&#xA;is00kzSLyEq/aDmm/agoqkvmCx12TX/y08q/mDKbbS4bW2jYesrotpcX8q8/VjZkFbdI05KdlUeG&#xA;KvrKx/KX8r7C+S6s/Lenw3X1eS2XjEtGgkX05QUPwtyRuLMRUg0J3xV89/lj5R8r3X/OSnmfR7nS&#xA;rWfSbE3zWlhJEjwRmK4jEfGNgV+EHbbFXiXmb/Dn6evP8JfXP0LV/Q+t8fW9Opry9P8AZ406/TgS&#xA;+hv+cav+VQf4O8x/WuX6S+pt/if9I8fT+o0PL0OH+6f5/wBrlT/JwofP+vfon9Lan/hb9I/4T9Za&#xA;+v8Ab9Pl8Pq8Pg8eHL9eBL2Nf8N/8rl/Kr0v0l9X/Rem+l9d4evz5y/Vuf8Ak8qcqfs/Z2woetf8&#xA;5T/oD/lUt3+la/WPrMH6I405fW6mlK9vS9Tl7VxVf+Qn+DP+VF2vDj+ivRu/0/8AWaU9T4vrXq02&#xA;4en0/wAimKvk7W/Q/T2r/wDKt/0v/hvf1P7zl6VT/eej/ur+X1N6dd8CWb3H/Kvv+hdNQ/Qf6Q/S&#xA;P6Ys/wBI/W+FPrHpyenx4/B6Xp8+nx8vtbUwoer/AJh/4H/6Fm8v/pT9Ifoz6rp/6M+rcPrH1r0D&#xA;6fq8v3fD7XOv+x3pir548kfon/FHl/8Ax/8ApH/C3qL9T5cvS4cl6ept6FePqelvTpgVmn/OQX+F&#xA;f+Voz/4E+vf4q9Zv0v8AUq+l9aoefoen+99av97x+Gvvywqnn/OLP+GP8fz/AKZ/SX+OvRm9H6xX&#xA;6vxp+95/7t9Xh/vz4evemKvcvz//AMNf8qq1j/Ef1n9HfuafUuPr+t6y+jx5/BTnTlXtXFXwlb/V&#xA;frEf1n6x+ifW/eenTnx78eXwc+OBL6k81/8AKiv+hd9O9P1/0NzP6G9Pj+kv0j8Xq86/Dy+16tfg&#xA;4/Z/YwoeGflR/wCTD8q/pf8ASf1H63H+jPqnLny9UU9Ov+6+X956e9K4EvUPyh/5V/8ApP8ANj/E&#xA;Pq/oWkn1n1+NPqn1mT+Tf1vU4cOPelN8KHitz9Y5al/hn9Lf4P8AV/f8+X91t/vR6P7jlx8cCXoX&#xA;n7/lXX/Kl/KH+Hf0l6P6Uu/W+ucfU9X04vrfT93/AL79Ph8PWvxcsKHsP/OV/wCjv+VPabz9Wv6R&#xA;tP0fTj9v6vN/e+3pc/s/tU7Yqwj8+f8AlWX/ACrDyPz+tf4j/Q1n+gvT4ep9S9BOP139nhXpx35V&#xA;47csVYv/AM47fo3/AB9df4q/SFP0XdfWPVr9T+o/V29b6/z+L0fT+z+zy4+2KsI1v0P09q//ACrf&#xA;9L/4b39T+85elU/3no/7q/l9TenXfAlnr/8AKuP+hctR/RP6S+vfpa2+u/WOH+9npSelTj+79H0+&#xA;X2fjr17YUPHtK/RH11P0t9Y+pbep9U4er1FePqfD0rgS+tNJ/wCVS/8AQunmX/CHrfov6nL+k/U4&#xA;/X/rXAcfrFfhrXj9n4KfZwoeN6/+iP8AoXTyj/vR6/6avPU+xw6H1OPf7PDj71r2xV9J/mt/yrv/&#xA;AJU6P8V+t+gPQtvqPpcfrnrcB9X9Cu3q0rXtx5V+GuKvjCD679XT6z+lf8E/Wfi4cuFOX7Nf9H9X&#xA;+OBL3T84P+VMf8qZ8q/U/rn1r6u/+Fq0+uenyPrfW+Xw+l6nh+1/d7VwoYh/zjby/wCVvaV+mP0l&#xA;9e+ryfo7hy4en6L/AN/z+L0OH2eO1adsVej/AJXfob/oaXzt6Hr+t6d16XPhx9T1ovrHKm9OdeHt&#xA;1xV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:008011740720681180838CDF45844EAD</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:008011740720681180838CDF45844EAD</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:04801174072068118A6DEFCFEDA936CD</stRef:instanceID>
            <stRef:documentID>xmp.did:04801174072068118A6DEFCFEDA936CD</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03801174072068118A6DEFCFEDA936CD</stEvt:instanceID>
                  <stEvt:when>2011-06-16T14:48:33+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:04801174072068118A6DEFCFEDA936CD</stEvt:instanceID>
                  <stEvt:when>2011-06-16T14:49:21+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681180838CDF45844EAD</stEvt:instanceID>
                  <stEvt:when>2011-08-26T10:41:13+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>74.847800</stDim:w>
            <stDim:h>35.865856</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>89.999405</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>79.998795</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>69.999702</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>59.999104</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>39.999401</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>29.998802</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>19.999701</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>9.999103</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>4.998803</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Crosses Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=70 Y=80 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=50 Y=80 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=65 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>65.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=90 Y=10 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>10.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=85 Y=60 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>85.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
1 -1 scale 0 -12.4609 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 12.4609 li
158.739 12.4609 li
158.739 0 li
cp
clp
[1 0 0 1 0 0 ]ct
157.621 3.61035 mo
156.954 3.61035 li
156.954 2.21289 li
156.954 1.42969 156.466 .910156 155.78 .910156 cv
155.101 .910156 154.611 1.42969 154.611 2.21289 cv
154.611 3.61035 li
154.087 3.61035 li
153.507 3.61035 153.066 4.04883 153.066 4.63672 cv
153.066 5.27051 153.458 5.66016 154.087 5.66016 cv
154.611 5.66016 li
154.611 11.0615 li
154.611 11.8418 155.101 12.3613 155.78 12.3613 cv
156.466 12.3613 156.954 11.8418 156.954 11.0615 cv
156.954 5.66016 li
157.621 5.66016 li
158.223 5.66016 158.739 5.36621 158.739 4.63672 cv
158.739 3.88672 158.223 3.61035 157.621 3.61035 cv
cp
149.938 5.56445 mo
150.689 5.56445 151.213 6.01758 151.794 6.01758 cv
152.346 6.01758 152.692 5.38477 152.692 4.89551 cv
152.692 3.75977 150.753 3.41602 149.825 3.41602 cv
147.354 3.41602 145.634 5.5791 145.634 7.95508 cv
145.634 10.3926 147.305 12.4609 149.825 12.4609 cv
150.675 12.4609 152.692 12.0537 152.692 10.8496 cv
152.692 10.2969 152.232 9.82324 151.681 9.82324 cv
151.404 9.82324 150.526 10.3125 149.938 10.3125 cv
148.672 10.3125 147.97 9.1084 147.97 7.95508 cv
147.97 6.75098 148.607 5.56445 149.938 5.56445 cv
cp
139.08 7.1582 mo
139.193 6.16602 139.894 5.36621 140.935 5.36621 cv
142.025 5.36621 142.677 6.13086 142.804 7.1582 cv
139.08 7.1582 li
cp
145.147 7.67773 mo
145.147 5.72754 143.47 3.41602 140.935 3.41602 cv
138.457 3.41602 136.736 5.5791 136.736 7.95508 cv
136.736 10.542 138.492 12.4609 141.126 12.4609 cv
142.868 12.4609 144.949 11.4834 144.949 10.4746 cv
144.949 9.97168 144.497 9.46484 143.993 9.46484 cv
143.37 9.46484 142.542 10.4102 141.339 10.4102 cv
140.248 10.4102 139.292 9.87305 139.129 8.71875 cv
144.121 8.71875 li
144.836 8.71875 145.147 8.37891 145.147 7.67773 cv
cp
135.808 3.51465 mo
135.077 3.51465 134.604 3.83984 134.164 4.48828 cv
134.129 4.48828 li
134.129 3.74121 133.612 3.51465 132.995 3.51465 cv
132.408 3.51465 131.785 3.9043 131.785 4.68652 cv
131.785 11.0615 li
131.785 11.8418 132.274 12.3613 132.961 12.3613 cv
133.641 12.3613 134.129 11.8418 134.129 11.0615 cv
134.129 7.46582 li
134.129 6.53906 134.844 6.23047 135.545 5.9043 cv
136.246 5.5791 136.946 5.5293 136.946 4.76465 cv
136.946 3.92188 136.373 3.51465 135.808 3.51465 cv
cp
129.351 3.51465 mo
128.664 3.51465 128.176 4.03516 128.176 4.81445 cv
128.176 11.0615 li
128.176 11.8418 128.664 12.3613 129.351 12.3613 cv
130.03 12.3613 130.52 11.8418 130.52 11.0615 cv
130.52 4.81445 li
130.52 4.03516 130.03 3.51465 129.351 3.51465 cv
cp
129.351 0 mo
128.65 0 128.034 .619141 128.034 1.28516 cv
128.034 2 128.65 2.63672 129.351 2.63672 cv
130.081 2.63672 130.668 2.01758 130.668 1.28516 cv
130.668 .601563 130.052 0 129.351 0 cv
cp
121.516 10.0215 mo
119.873 10.0215 li
119.873 2.92773 li
121.354 2.92773 li
123.597 2.92773 124.573 4.44238 124.573 6.52344 cv
124.573 8.47461 123.612 10.0215 121.516 10.0215 cv
cp
121.381 .683594 mo
118.685 .683594 li
117.947 .683594 117.431 1.18945 117.431 1.93555 cv
117.431 11.0449 li
117.431 11.9727 118.181 12.2656 118.712 12.2656 cv
121.545 12.2656 li
124.893 12.2656 127.109 10.0527 127.109 6.63672 cv
127.109 3.02539 125.028 .683594 121.381 .683594 cv
cp
110.472 7.1582 mo
110.585 6.16602 111.286 5.36621 112.326 5.36621 cv
113.41 5.36621 114.062 6.13086 114.196 7.1582 cv
110.472 7.1582 li
cp
116.54 7.67773 mo
116.54 5.72754 114.862 3.41602 112.326 3.41602 cv
109.85 3.41602 108.129 5.5791 108.129 7.95508 cv
108.129 10.542 109.885 12.4609 112.519 12.4609 cv
114.26 12.4609 116.342 11.4834 116.342 10.4746 cv
116.342 9.97168 115.889 9.46484 115.379 9.46484 cv
114.763 9.46484 113.935 10.4102 112.731 10.4102 cv
111.641 10.4102 110.685 9.87305 110.521 8.71875 cv
115.513 8.71875 li
116.229 8.71875 116.54 8.37891 116.54 7.67773 cv
cp
105.071 5.56445 mo
105.82 5.56445 106.339 6.01758 106.927 6.01758 cv
107.479 6.01758 107.819 5.38477 107.819 4.89551 cv
107.819 3.75977 105.886 3.41602 104.958 3.41602 cv
102.484 3.41602 100.76 5.5791 100.76 7.95508 cv
100.76 10.3926 102.438 12.4609 104.958 12.4609 cv
105.803 12.4609 107.819 12.0537 107.819 10.8496 cv
107.819 10.2969 107.365 9.82324 106.813 9.82324 cv
106.536 9.82324 105.657 10.3125 105.071 10.3125 cv
103.805 10.3125 103.104 9.1084 103.104 7.95508 cv
103.104 6.75098 103.737 5.56445 105.071 5.56445 cv
cp
96.5664 3.41602 mo
95.459 3.41602 94.7617 3.74121 94.3047 4.375 cv
94.2236 3.83984 93.834 3.51465 93.2324 3.51465 cv
92.5488 3.51465 92.0605 4.03516 92.0605 4.81445 cv
92.0605 11.0615 li
92.0605 11.8418 92.5488 12.3613 93.2324 12.3613 cv
93.915 12.3613 94.4043 11.8418 94.4043 11.0615 cv
94.4043 6.97656 li
94.4043 6.06738 94.9385 5.36621 95.8984 5.36621 cv
96.7441 5.36621 97.4268 5.89063 97.4268 6.97656 cv
97.4268 11.0615 li
97.4268 11.8418 97.916 12.3613 98.5996 12.3613 cv
99.2822 12.3613 99.7705 11.8418 99.7705 11.0615 cv
99.7705 6.57031 li
99.7705 4.58789 98.4043 3.41602 96.5664 3.41602 cv
cp
85.166 7.1582 mo
85.2793 6.16602 85.9805 5.36621 87.0215 5.36621 cv
88.1113 5.36621 88.7598 6.13086 88.8906 7.1582 cv
85.166 7.1582 li
cp
91.2344 7.67773 mo
91.2344 5.72754 89.5566 3.41602 87.0215 3.41602 cv
84.5469 3.41602 82.8223 5.5791 82.8223 7.95508 cv
82.8223 10.542 84.5781 12.4609 87.2168 12.4609 cv
88.9551 12.4609 91.0391 11.4834 91.0391 10.4746 cv
91.0391 9.97168 90.583 9.46484 90.0801 9.46484 cv
89.4609 9.46484 88.6318 10.4102 87.4277 10.4102 cv
86.3379 10.4102 85.3789 9.87305 85.2158 8.71875 cv
90.207 8.71875 li
90.9238 8.71875 91.2344 8.37891 91.2344 7.67773 cv
cp
80.8555 0 mo
80.1582 0 79.5391 .619141 79.5391 1.28516 cv
79.5391 2 80.1582 2.63672 80.8555 2.63672 cv
81.5879 2.63672 82.1719 2.01758 82.1719 1.28516 cv
82.1719 .601563 81.5566 0 80.8555 0 cv
cp
80.8555 3.51465 mo
80.1719 3.51465 79.6846 4.03516 79.6846 4.81445 cv
79.6846 11.0615 li
79.6846 11.8418 80.1719 12.3613 80.8555 12.3613 cv
81.5391 12.3613 82.0273 11.8418 82.0273 11.0615 cv
82.0273 4.81445 li
82.0273 4.03516 81.5391 3.51465 80.8555 3.51465 cv
cp
76.1563 5.56445 mo
76.9063 5.56445 77.4258 6.01758 78.0107 6.01758 cv
78.5645 6.01758 78.9063 5.38477 78.9063 4.89551 cv
78.9063 3.75977 76.9707 3.41602 76.043 3.41602 cv
73.5713 3.41602 71.8477 5.5791 71.8477 7.95508 cv
71.8477 10.3926 73.5215 12.4609 76.043 12.4609 cv
76.8887 12.4609 78.9063 12.0537 78.9063 10.8496 cv
78.9063 10.2969 78.4492 9.82324 77.8975 9.82324 cv
77.6211 9.82324 76.7432 10.3125 76.1563 10.3125 cv
74.8887 10.3125 74.1875 9.1084 74.1875 7.95508 cv
74.1875 6.75098 74.8242 5.56445 76.1563 5.56445 cv
cp
65.7813 3.88672 mo
65.7813 3.20313 66.415 2.83203 67.1162 2.83203 cv
68.0898 2.83203 68.6133 3.32031 69.2793 3.32031 cv
69.9443 3.32031 70.3691 2.75 70.3691 2.11621 cv
70.3691 .828125 68.0898 .488281 67.1797 .488281 cv
65.0156 .488281 63.1465 1.9043 63.1465 4.18066 cv
63.1465 7.95508 68.5781 6.7998 68.5781 8.71875 cv
68.5781 9.51563 67.9941 10.1172 66.9209 10.1172 cv
65.8633 10.1172 64.9531 9.48438 64.1875 9.48438 cv
63.5195 9.48438 63.0977 10.0039 63.0977 10.6377 cv
63.0977 12.167 65.7988 12.4609 67.0488 12.4609 cv
69.293 12.4609 71.2148 11.0117 71.2148 8.6875 cv
71.2148 4.48828 65.7813 5.56445 65.7813 3.88672 cv
cp
52.2012 7.1582 mo
52.3184 6.16602 53.0156 5.36621 54.0557 5.36621 cv
55.1465 5.36621 55.7979 6.13086 55.9287 7.1582 cv
52.2012 7.1582 li
cp
58.2695 7.67773 mo
58.2695 5.72754 56.5938 3.41602 54.0557 3.41602 cv
51.5859 3.41602 49.8613 5.5791 49.8613 7.95508 cv
49.8613 10.542 51.6172 12.4609 54.251 12.4609 cv
55.9922 12.4609 58.0742 11.4834 58.0742 10.4746 cv
58.0742 9.97168 57.6211 9.46484 57.1152 9.46484 cv
56.4951 9.46484 55.666 10.4102 54.4629 10.4102 cv
53.373 10.4102 52.4141 9.87305 52.25 8.71875 cv
57.2461 8.71875 li
57.9609 8.71875 58.2695 8.37891 58.2695 7.67773 cv
cp
45.4688 6.11719 mo
45.4688 5.66016 45.8447 5.46484 46.2656 5.46484 cv
47.0313 5.46484 47.9258 6.14844 48.3652 6.14844 cv
48.917 6.14844 49.3242 5.64648 49.3242 5.10742 cv
49.3242 3.95313 47.5508 3.41602 46.3965 3.41602 cv
44.541 3.41602 43.2246 4.52344 43.2246 6.14844 cv
43.2246 8.83203 47.292 8.66992 47.292 9.74219 cv
47.292 10.1836 47.0801 10.4102 46.3652 10.4102 cv
45.2568 10.4102 44.8535 9.61426 43.9395 9.61426 cv
43.2881 9.61426 42.9316 10.2969 42.9316 10.6553 cv
42.9316 11.7109 44.8848 12.4609 46.2021 12.4609 cv
48.2197 12.4609 49.5371 11.2715 49.5371 9.70996 cv
49.5371 7.04492 45.4688 7.20703 45.4688 6.11719 cv
cp
42.0088 3.51465 mo
41.2754 3.51465 40.8047 3.83984 40.3623 4.48828 cv
40.3301 4.48828 li
40.3301 3.74121 39.8096 3.51465 39.1934 3.51465 cv
38.6055 3.51465 37.9902 3.9043 37.9902 4.68652 cv
37.9902 11.0615 li
37.9902 11.8418 38.4746 12.3613 39.1582 12.3613 cv
39.8418 12.3613 40.3301 11.8418 40.3301 11.0615 cv
40.3301 7.46582 li
40.3301 6.53906 41.0449 6.23047 41.7461 5.9043 cv
42.4473 5.5791 43.1445 5.5293 43.1445 4.76465 cv
43.1445 3.92188 42.5742 3.51465 42.0088 3.51465 cv
cp
31.1289 7.1582 mo
31.2422 6.16602 31.9385 5.36621 32.9795 5.36621 cv
34.0703 5.36621 34.7207 6.13086 34.8525 7.1582 cv
31.1289 7.1582 li
cp
37.1963 7.67773 mo
37.1963 5.72754 35.5176 3.41602 32.9795 3.41602 cv
30.5088 3.41602 28.7852 5.5791 28.7852 7.95508 cv
28.7852 10.542 30.54 12.4609 33.1777 12.4609 cv
34.916 12.4609 36.998 11.4834 36.998 10.4746 cv
36.998 9.97168 36.5449 9.46484 36.0381 9.46484 cv
35.4219 9.46484 34.5898 10.4102 33.3867 10.4102 cv
32.2969 10.4102 31.3369 9.87305 31.1738 8.71875 cv
36.1699 8.71875 li
36.8848 8.71875 37.1963 8.37891 37.1963 7.67773 cv
cp
29.582 1.75586 mo
29.582 1.07227 28.9795 .586914 28.3281 .586914 cv
27.7764 .586914 27.4355 .944336 27.2236 1.38379 cv
24.7031 8.14844 li
22.1797 1.38379 li
21.9707 .944336 21.627 .586914 21.0742 .586914 cv
20.4238 .586914 19.8223 1.07227 19.8223 1.75586 cv
19.8223 1.98535 19.8535 2.14844 19.9346 2.35742 cv
23.5 11.4199 li
23.709 11.9395 23.9883 12.3613 24.7031 12.3613 cv
25.418 12.3613 25.6953 11.9395 25.9072 11.4199 cv
29.4688 2.35742 li
29.5498 2.14844 29.582 1.98535 29.582 1.75586 cv
cp
17.7607 3.51465 mo
17.0781 3.51465 16.5898 4.03516 16.5898 4.81445 cv
16.5898 11.0615 li
16.5898 11.8418 17.0781 12.3613 17.7607 12.3613 cv
18.4443 12.3613 18.9336 11.8418 18.9336 11.0615 cv
18.9336 4.81445 li
18.9336 4.03516 18.4443 3.51465 17.7607 3.51465 cv
cp
17.7607 0 mo
17.0605 0 16.4434 .619141 16.4434 1.28516 cv
16.4434 2 17.0605 2.63672 17.7607 2.63672 cv
18.4941 2.63672 19.0781 2.01758 19.0781 1.28516 cv
19.0781 .601563 18.459 0 17.7607 0 cv
cp
13.0605 5.56445 mo
13.8086 5.56445 14.3281 6.01758 14.916 6.01758 cv
15.4688 6.01758 15.8086 5.38477 15.8086 4.89551 cv
15.8086 3.75977 13.875 3.41602 12.9473 3.41602 cv
10.4736 3.41602 8.74902 5.5791 8.74902 7.95508 cv
8.74902 10.3926 10.4277 12.4609 12.9473 12.4609 cv
13.7949 12.4609 15.8086 12.0537 15.8086 10.8496 cv
15.8086 10.2969 15.3555 9.82324 14.8027 9.82324 cv
14.5234 9.82324 13.6455 10.3125 13.0605 10.3125 cv
11.7939 10.3125 11.0928 9.1084 11.0928 7.95508 cv
11.0928 6.75098 11.7266 5.56445 13.0605 5.56445 cv
cp
2.68359 3.88672 mo
2.68359 3.20313 3.32031 2.83203 4.01855 2.83203 cv
4.99609 2.83203 5.51563 3.32031 6.18164 3.32031 cv
6.85059 3.32031 7.27148 2.75 7.27148 2.11621 cv
7.27148 .828125 4.99609 .488281 4.08594 .488281 cv
1.92188 .488281 .0498047 1.9043 .0498047 4.18066 cv
.0498047 7.95508 5.48438 6.7998 5.48438 8.71875 cv
5.48438 9.51563 4.89648 10.1172 3.82324 10.1172 cv
2.76563 10.1172 1.85547 9.48438 1.08984 9.48438 cv
.425781 9.48438 0 10.0039 0 10.6377 cv
0 12.167 2.70117 12.4609 3.95508 12.4609 cv
6.19922 12.4609 8.11719 11.0117 8.11719 8.6875 cv
8.11719 4.48828 2.68359 5.56445 2.68359 3.88672 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec

dvidict /dvispend get exec
 O O O
-196608 d U
6493820 r
f1(T)s
-18350 r(ransportation)s
131072 W(Research)S(Procedia)S(00)S(\(2014\))S(000{000)s O M U
-1959526 d U
1779630 d U
21379061 r
dvispsav undsclx dvispbeg 
111 111 0 sub div 60 60 0 sub div scale
0 neg 0 neg translate

%!PS-Adobe-3.0 EPSF-3.0
%ADO_ContainsXMP: MainFirst
%ImageData: 1536 827 1 1 0 192 7 "beginimage"
%BeginPhotoshop: 10846
% 3842494D04040000000000941C015A00031B25471C015A00031B25471C015A00
% 031B25471C015A00031B25471C015A00031B25471C015A00031B25471C015A00
% 031B25471C015A00031B25471C015A00031B25471C0200000200011C02500007
% 64757268616D6A1C0205003450726F636564696120536F6369616C20616E6420
% 4265686176696F72616C20536369656E6365735F6A6E6C2073697A652E706466
% 3842494D0425000000000010997BD3993B4C107B135F8AAA8696E7673842494D
% 043A0000000000B9000000100000000100000000000B7072696E744F75747075
% 74000000040000000050737453626F6F6C0100000000496E7465656E756D0000
% 0000496E746500000000436C726D0000000F7072696E745369787465656E4269
% 74626F6F6C000000000B7072696E7465724E616D655445585400000022006800
% 700020004C0061007300650072004A0065007400200034003300350030002000
% 5B004300340036003800370035005D002000400020006D0061006E006A007500
% 00003842494D043B0000000001B200000010000000010000000000127072696E
% 744F75747075744F7074696F6E7300000012000000004370746E626F6F6C0000
% 000000436C6272626F6F6C00000000005267734D626F6F6C000000000043726E
% 43626F6F6C0000000000436E7443626F6F6C00000000004C626C73626F6F6C00
% 000000004E677476626F6F6C0000000000456D6C44626F6F6C0000000000496E
% 7472626F6F6C000000000042636B674F626A6300000001000000000000524742
% 43000000030000000052642020646F7562406FE000000000000000000047726E
% 20646F7562406FE0000000000000000000426C2020646F7562406FE000000000
% 000000000042726454556E744623526C74000000000000000000000000426C64
% 20556E744623526C7400000000000000000000000052736C74556E7446235078
% 6C408F4000000000000000000A766563746F7244617461626F6F6C0100000000
% 50675073656E756D00000000506750730000000050675043000000004C656674
% 556E744623526C74000000000000000000000000546F7020556E744623526C74
% 00000000000000000000000053636C20556E7446235072634059000000000000
% 3842494D03ED00000000001003E800000001000203E80000000100023842494D
% 042600000000000E000000000000000000003F8000003842494D040D00000000
% 00040000001E3842494D04190000000000040000001E3842494D03F300000000
% 0009000000000000000001003842494D040A00000000000100003842494D2710
% 00000000000A000100000000000000023842494D040800000000001F00000001
% 00000240000002400000000300006E60010000BFFC000000002000003842494D
% 041E000000000004000000003842494D041A0000000003410000000600000000
% 000000000000033B000006000000000600740072007000740072006F00000001
% 0000000000000000000000000000000000000001000000000000000000000600
% 0000033B00000000000000000000000000000000010000000000000000000000
% 000000000000000010000000010000000000006E756C6C000000020000000662
% 6F756E64734F626A630000000100000000000052637431000000040000000054
% 6F70206C6F6E6700000000000000004C6566746C6F6E67000000000000000042
% 746F6D6C6F6E670000033B00000000526768746C6F6E67000006000000000673
% 6C69636573566C4C73000000014F626A6300000001000000000005736C696365
% 0000001200000007736C69636549446C6F6E67000000000000000767726F7570
% 49446C6F6E6700000000000000066F726967696E656E756D0000000C45536C69
% 63654F726967696E0000000D6175746F47656E65726174656400000000547970
% 65656E756D0000000A45536C6963655479706500000000496D67200000000662
% 6F756E64734F626A630000000100000000000052637431000000040000000054
% 6F70206C6F6E6700000000000000004C6566746C6F6E67000000000000000042
% 746F6D6C6F6E670000033B00000000526768746C6F6E67000006000000000375
% 726C54455854000000010000000000006E756C6C544558540000000100000000
% 00004D7367655445585400000001000000000006616C74546167544558540000
% 000100000000000E63656C6C54657874497348544D4C626F6F6C010000000863
% 656C6C546578745445585400000001000000000009686F727A416C69676E656E
% 756D0000000F45536C696365486F727A416C69676E0000000764656661756C74
% 0000000976657274416C69676E656E756D0000000F45536C6963655665727441
% 6C69676E0000000764656661756C740000000B6267436F6C6F7254797065656E
% 756D0000001145536C6963654247436F6C6F7254797065000000004E6F6E6500
% 000009746F704F75747365746C6F6E67000000000000000A6C6566744F757473
% 65746C6F6E67000000000000000C626F74746F6D4F75747365746C6F6E670000
% 00000000000B72696768744F75747365746C6F6E6700000000003842494D0428
% 00000000000C000000023FF00000000000003842494D04140000000000040000
% 000B3842494D040C0000000020BC00000001000000A000000056000001E00000
% A140000020A000180001FFD8FFED000C41646F62655F434D0001FFEE000E4164
% 6F626500648000000001FFDB0084000C08080809080C09090C110B0A0B11150F
% 0C0C0F1518131315131318110C0C0C0C0C0C110C0C0C0C0C0C0C0C0C0C0C0C0C
% 0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C010D0B0B0D0E0D100E0E10140E0E0E1414
% 0E0E0E0E14110C0C0C0C0C11110C0C0C0C0C0C110C0C0C0C0C0C0C0C0C0C0C0C
% 0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0CFFC0001108005600A003012200021101
% 031101FFDD0004000AFFC4013F00000105010101010101000000000000000300
% 01020405060708090A0B01000105010101010101000000000000000100020304
% 05060708090A0B1000010401030204020507060805030C330100021103042112
% 31054151611322718132061491A1B14223241552C16233347282D14307259253
% F0E1F163733516A2B283264493546445C2A3743617D255E265F2B384C3D375E3
% F3462794A485B495C4D4E4F4A5B5C5D5E5F55666768696A6B6C6D6E6F6374757
% 67778797A7B7C7D7E7F711000202010204040304050607070605350100021103
% 213112044151617122130532819114A1B14223C152D1F0332462E17282924353
% 15637334F1250616A2B283072635C2D2449354A317644555367465E2F2B384C3
% D375E3F34694A485B495C4D4E4F4A5B5C5D5E5F55666768696A6B6C6D6E6F627
% 37475767778797A7B7C7FFDA000C03010002110311003F00957FE2ABEA938633
% 5B9FD46F25D4B6EBE9A1CFA2DF5EB73EAB712FAF16DA2BC773F65AFC9FB465E3
% E357FA0C8B7D5BABB9447F8B4FA974B2BAF26FEB565DE9B1D63EAC2BF612E6B6
% C96B5BD3723D2FA5FCC3EEB2DC7FE62EFD2D6BADFAD9D16DB293955F55EA38AE
% BF370D8198F906A656DBEDC6E9B90CA5B5B7E85953FD7FD37ADE9657E969F4FD
% 7CBAF20AEEBD5F46EA747D5A6D3D47ACF50B697E6FAC050E3B1F6DC5C6FBACB7
% 068A595BDBE954DF4EAA58CFB3E3D5FB8929E3D9FE2A7EAA9AEADD97D54BEA6B
% 1D94462D8D0F0EA2CC8FD598EC373AA7EEAFF9BDD96FA5FF00E4EB7F5EC8A52A
% BFC527D5C7B6B073BA89739B4027ECAF60DC5D4FDA9DB5F8FF00A265D56652CA
% 5967F407B32ACC9B32BEC79956376A7EB656F764B70FA6E6E79C168FB6FD9850
% E155BB4D9660EE7E556DCACDC76FF48A703ED7E9BDECABF9D42FF9ED89666E0E
% 0E274FCDCCC9EA3855F51A994B6986D166EDBF68B2FC9A6AA5EDD9B5DEFF004F
% 7BEBAFD4DF624A78FAFF00C527D5C79FE9DD462C7566B9C57B61AEB2B739B66F
% C7FA7F64CCC5A37FE8BECF914E6E55D5FA58D97878499FE2A7EAABC0B865F551
% 4171B361C5B1B67A42BBBF450EC30FFB47DA316DB77FA1FCCFD9B17ECDEB6661
% E45FD98FAE38B5F4DAF273317228CE765B3A6BFA6C0368CCB36B9B8D5DD63A9C
% 5B2A7D4FFB4D399EB578F6E37BFF009CFD0A866FD721D33A65599D53A566E3E4
% DB935E0FD8AB6D773DD7D957DA1BF657D777A5958FFE0596D7FA4F5BF47E831E
% 929E3CFF008A4FAB8D6FA6ECEEA26F7B59456F6E2BCB064175F4BF22C031DDFA
% 93ADA377F3D5FA14FE96DCFF00473B12E517FF008AEFAA63D68CAEAE367A5737
% F53B9D14BFD0DF4FB707F58CB77AB67F35FA4C4FFB5187FA9652EF713EB107E6
% E462752C3BBA4BA9A4E554FCA75659663B363726F3918D65F8B4BF16E7FE9E97
% DFFCCD98F91FE17F421C5FADF859071EC761E6D1859AE0DC3CFB29FD05A5D657
% 8D8FFCCBAEC8C4665BEEADF8B667E3E232EAD253C6FF00E34BF55DEFB58CCCEA
% 608C815B0BB1DF018C763D37B0BCE231977A8FBDFE86757FAAFA5FA7FD629E9F
% 996281FF00153F556C6FAD565F55654E6B1CD63F16CDE035D7BF2B734E1D4FDF
% 7518AFAF1EBF477D377A167EB5F6EC3C7B7B0C7FAE0FCECDCAC5E97D1F3731BD
% 3B25F89997838F5303ABF51AEFB33B2726AFB4BFD5657FA3FD17A74DBEB59FE0
% AAB85D37EB80AFA2F477751C7C9B3AAF54A6BFB363D6CADD665385743F232A9F
% 42CFB263E3FEB1EBBBED96E17A74FA9FA1AD253C93BFC5A7D4B731B7577F5A6D
% 55D81B735D85797B839B6EC14B3F66B2CFE718D7597FA57D4CFE66CD9664D162
% 2BBFC52FD577DCF6D599D4DAD6D8CA807E3BCFB996D75E51F57EC95D76557579
% 14B31AF67E82AD9919BEA65E363E47D9FAA77D73B19937F4F3D232FF006A6363
% 9CDB3086C24E30BDB8DBA8B9AF3564E5FD95FF006BFB3E37AB4FABFA87DAFED4
% C51E8BD75B91D3FA0E575C1763E7E4615D966D6D8E18FB2A6D22ECBCFF00B33A
% AC3633228BEACBA7ED74FA387EA7A3EA5593E9FAA94F294FF8A9FAAB7318D665
% F5516D8E1635CFC5B18DF49D91F67153D96E1B3D3C8F4BD9BECB3D9FF2A7D9BE
% C090FF00153F554D4E8CBEABEA31CDB0B8E2D807A4E0FCC6D4DAFEC7B9F91F61
% AFECEF7B2CFD1E7FA6CB31BD7B6AE9EBADB3EBCE2D3453D4F23032E8E8576E03
% AB58C1B398C5B7EC94BEDCF6E26643FD2C8BF1A9FA789FA3FD6BF451BFEBD575
% B73F26AE959B93D3FA4DD7E367E555E812DB68756D77A78CEC86DF6E3ECB1F6D
% B91B59E8B3F33F9EFB3A53CB9FF14BF55D91BF33A99F4ECB0DBB71DE7756DFB5
% 7A75D5B711FF00A567D97F9EFD3332BF47E850CFDA78093BFC4FFD5F65CFA9F9
% D9E4FA8C6B76E3B8B40F56BDE0DCDA1D559BB172F169F5DBFA2AAFAB3731FBE9
% C7CAC5C3F4AC4CAA337169CCC677A98F935B6DA5F046E63C0B2B76D786BDBB98
% EFCE46494F960FF149F571ED8AF3BA8B5CF6BC565F8AF003AC751F62758D763B
% 3D98F565D6CCC67E8FD67FDA6CF5303EC39B5529FF00E2A7EAA8048CBEAA3D47
% 0B2AFD56C3B6A6574E55F55BB70FFA45953ED6E3BFF43FAC3FEC7F66C9CBC4C8
% A2CF5349253E5EEFF14BF55DF73DB5667536B5B632A01F8EF3EE65B5D7947D5F
% B2575D955D5E452CC6BD9FA0AB66466FA9978D8F91F67837FC527D5C7D558667
% 75116BA9DAE7BB15E1A6F78C6F46EF4DD8EC7538EC7657E9F1ACB7D4FE7BF5BA
% 3F66E7AF5349253FFFD0F42FAC5816F50E9A316A6B9C5D9388F7EC79ADC2BAF2
% B1EFC87B2E6BAB7D6FAE8AECB3F44FF5BFD0FE95099859ADFADF767963BEC567
% 4EAA816077B4DB5DD916B98EAFD76FBDB55FEC7BF0AEFF0009E9E5637E969CA5
% D4FEB363E0753AFA5558993D433ACA4641A315AC25953AD66232EB1D916E3336
% 3AFB3F31CFF458CB2FC8F468FD22B5D1FAC61758C2197885C0071AEEA6C1B2DA
% 6D669762E5527DD4E452EFA6CFFD15B1E929C5E92CEA3F57F233F11DD2EECD3D
% 47372BA8D791826B2CD96BD9B5996FEA19388DAB358D731BE952CF46CA7F99F5
% ADAF32C45E91D13A86175AC5C8735B4E2E3F47A306F6556B9D43AFAECDD5371F
% 1ED0EBF661B3ED1FACE5DDEA3EBCCA995FFDAA5D1A4929E48F4402EEB0737A2D
% D915E5751AB2F1061DF5B07B2AAF667E3BACCAE9CFC3CDFB4536BF36DAFD1C8B
% 1F93E9FAF9D47E95665567D69A71FA4BB269CBCA0CEAF5BBA6B721D8D567BF10
% E1657AD4E5B1DBF15B6D557ADBECC9C9FB6E67E9B7FECEBBD1B17A02A99DD368
% CEB30ECB9D634E0E40CAABD37964BC32DC7DB6399EF755B321FBEADDFA5FE6ED
% DF4FA955894F2FD4F03A8FD6E7B7229C4BBA537170B371837A9555875AFCFC7A
% 998FE87A4FCAB719947D2CBC8F65CCFE81B2CFD76BA0D918DD6FABD5D2FA73B0
% 9D8B6747CDC4BF3B2F24B5F45A31832CBBF665F6DB99D46D7DDBD8EA326E652F
% 7D7F68C7CCCAAEFF00B463AEB557EA396DC1E9F939AFDBB7169B2E76F2E0D8AD
% AEB0EF7555DF6B59EDFF000745CFFF0082B12539FF0055F1BA8E3E0E4FDBEB75
% 0EBF372F229A1EFADEE6557DD66456C7FD99BE931FFA473F67DA337FF0CFFDA6
% C7C4C5C5EA9878FD173CF4E75EDFAB98D9181954960764DBB598D8DF6DE895B9
% ECDCCB2DC3B7D3764BB1B232305F6FA18D67DA295D4749CEFDA5D2B0FA8ECF4B
% ED98F5647A73BB6FAAC6DBB37C337ECDFF004B62B6929E4A9A3AA753FACF7756
% FD93761630E957E036CC9B4516D97FAE1CDAB7E16465DB8F8FECB1F8F9D8F47A
% 9FA47DECF5D9F6455FA7F45CFEA785D1F0F370B230B1F0FA666749CF7596B6A7
% 873ABC3C3F5B1EAA1D92CCBAAD7E3E47D9BED2CF43F47F6EFF00B85EBF6A924A
% 78FB075FEA1F560FD5A1D3323073DF815E3DB96F38B5E1B4B9869B763B15F9BF
% A27FA3757F67C5C1F56BAECA7FA07AD4E4D5A5D07A76463F42CCC77FAD664DD9
% 3D41D37D8FA5CF2FC8C96D368B6868FB13322AF4AEF53031EB67E97ED78F4EFB
% 16F24929CCFAB38595D3FEAF74DC2CB2E3938F8D5576876C25AE6B1BBA9DD406
% D4E651FCCD6EFDCAFF009CB5FF00A55A69249294924924A524924929FFD1EB7A
% A7EDA7FD6FD9D1EDA5B6D7D29CF78CBAECBA86B9D77EACCDD50C77613F31D5DD
% EA5B56664FDA6BC2FD374FFD4B1AD585918F9AEA3A6F48C1A26AFAC19FD41FF5
% 80FA96515DB95417FDAB12BCD6579766274FCBB3132594D6CA3ED793818DE9BD
% F559F6CB175BD4FA8FD56E97D4EBCEEA5938D89D4BD118EC7D9635B69A2EB590
% D757BB7BF1FED15EEF55ECF4F1BF58B37D55FDA17394FD61FF0015FD42CBF0FE
% DD5FEBD963A87BDB6E2B6BC9632B6FDA28CCF4B0FEC96BBECDEAFABF68F5ADBE
% EBBF49FA7F492531AFEAFF00D76A99D531BA639BD328EA349F405B9D6E5FA190
% CC86FAF7517DD57AD433AB62DF9795BDB56464FDA3F4B6DF8777E85072ADEA1D
% 2FA75DD1B028CDE9D9B7E4E162961CA765D14E2E459774FC7774CCFB1F75BD2F
% 1EDFB1D9FAD5FD37ED58F9191551F65FE89F65E969FAABF57F2BA5D98F6BAEEA
% 78DD429A1B7E4DF9575EEBD9493918B60BFD6F633D5B1F7FEA9E8D3FA4FDC46A
% 3EA9F44AF0B370EDA5D975F5371766D994F75D6D807F47ADF936B9D7ECC366CA
% F0FF0049BE8F4FD5FE91EA5C929E72AC0FAD5D272ADEA1D3706CC7C6A7133BED
% 1837E6DD9F5DB920BB270F230282EFB43ADCFC8731CFB2DF4AEB19F6CABECD8B
% 91E8DF9C2CEC51898BF56BAD51D4B2C66755CFC0FB6BA8BAE38D98FC8151BADB
% B1AFB29F42A7538FFA0F4F1ABFD0ECC3FB1FA5E9FD97ADC2FABF8385D40E7D56
% 64DB6FA3E831B9193764358D7385B71A865DB7398FC87578FEAFBBFED353E9EC
% FD2FAB507D4AFABE7231B26EAEEC8B706E37E17A97DC5941DE2EAEAC5C565ACC
% 4A31E8D94D34D15D1B3D1A2AF53D4494F358CCB1F85F593EB13B23273F3BA2F5
% 1CD761E364E4DF5E2E39C5F51EDF42AC6B5DEBB3EC97ED7D76B2A65DFD03F414
% 7AB9376EB3A250DE94FEA3D3F333EB391897DAFAEBC92F6DAFCA67DA1D91E9E2
% B3A8E3D197F687FDA6ABFA163FF3F67E82AC9A7F40B7B0BA7E16036D6E252DA4
% 645D6645DB797DB6BBD4BAEB1C7DCE7B9DFF0043F45FCD56C59987F53BA16258
% 1FE95992DAEB7518D565DB664D7453632BC7BB1B129CA7DB5D555B5D5FA4FF00
% 09B2CB28F53ECDFA0494F1F95D36BE89FE2EF13EB1E1E5E7B3A9D3898768B5B9
% 6F876F2DFB3E2DD8F6FAD86FE9F89666FE8F13ECDFCD33D1F57F4D7D967A5ACF
% C9E85D3727A30E88EAE30595D75555FD3DA292C7637F3FEB32EF45F4D4ED992C
% BEABBFED457757EA2D0494A4924925292492494A4942E7BABA9F632B75CE634B
% 9B533687388122B67AAEAEADEFFF0084B2B62E4BFC5EFD78CAFADBFB4BED38D5
% E37D8EC61A7D3713FA3BBD5F4EBB37FD2B6AF43DF737D365BBFF0098A5253D82
% 4B92C7FF00191D2327EB48FAB75E364FAE2EBB19F71607345B4BB68DACA5D75A
% EC77FA776FC877A7F67FD1FAACF47D6B71FAD494A49249253FFFD2E73FC60D15
% 647F8CBCAC7B9CDAEABAEC4AEC7BDE2A6B5AEA719AF73F21CCBDB431ADFF000D
% E8DDE97D3F4AC5DDE5FF00899FAAD6E3ECC6B7271AF0D21976F6BC176CAEB6BA
% EA9ECF7B3D5ADD90F654EC7F7DF7FE92BA7ECF5E3F0FF5F329985FE342FCCB1D
% 656CC6C8C3B5CFA434D8D0CAB16C73A96DE1D4BAD6EDFD1FADFA2DFF00CE2ED7
% A87F8E7FAB7462FA9814646664BA36D0E029689153DDEADC7D5DBB7D5B6AFD15
% 77FE9F1ACFFB4FE864DA94F1FF00E2B7AE755E93F5A2BE856FA8DC4CCB1F5E56
% 23EB7B9D5DCC63F6D8DA9A3D4C7B5B654DAB29FB7D3F43FA57F4765B47A5637F
% 8C2FAB7766F55C2BACB30DFD17D4392FBDA031CDAACFB2DAFA1D53ADDFFA6754
% CAEB77A77DDEB55E8D562F32FF00159D1F37AB7D6D6F5501ADC6E9EE75F94EAC
% FA1EFB5B6B71EAA6AC6F4FD8FB7E950C6B317ECF5D9459ECFD05B4AAFABD95F5
% 9BFC60750E96F77D95F6E5E659936D4D37B29D8FB5EEFF00B8DBEAF5B663B2DB
% 3D0FE76BFF008B494FA874CFF1A9F553A97556F4CA9D915BEDB0558F7D957E8E
% D7B9EDA6A6D7E9BACB99EB6FDECFB45347B3F9DF495DFAC5F5FF00EACFD5DB5F
% 8D9B90EB336B6B5C70E8617D90F3ED977B31EB7ECFD37A775F5BFD1FF8CAB7E2
% E77F8B4FA9FD1B1DFD6DB8D7648E938CFBDD8765A0D590FA18FB77E56FAEC76F
% B5CDF7B2AD98BFF757D2F52AB38CFA97F547FE7D755EA9D5BAB1B31F11D63AC7
% 3B1BD939373FD77574BAFAF26B7554D7BFD566FF005ABF5717F7D253E8181FE3
% 5BEA6E6DFE83B26CC42EF4831F91596B1CEB04B99EA57EAB2AFB33FF00479166
% 47A347FA2B6DA7F4ABB05E59F5D7FC55748C2E836F52E89EB3327A7D2D7DB53D
% E1EDB595C9CAC87FA9B3D3C8F4BF4FFA177A3FA1F469C4DF6A8F40FF001817E1
% 7F8B5C8BAEBAB7751C1B074EE9ED6801E03AB6FD8EDB99B6DAFF00415B725D5B
% ADA99564FD87D1FE7F7D8929ECBAF7F8C0FAADD09AE19198DC8C96B9CC3898A5
% B6DA1CC736BB59606B8558EFAF77FDA9B69FA167A7EF55FA17F8CCFAA9D6EFAF
% 16ABACC4CBBECF4A9C7CA66C2F31B9BB6DA8DD8DFA477E8EA63EFF0056CB7F47
% E9FF0037BFCEBFC5DFD48FF9D79593D5BACBACB302BB087B859165F924D77D8C
% B5C43EDF4BD27FEB166FA6EDF757E8DBFCEFA7D2FD60FF0013181937D56F40BF
% EC2C758064D171758C6D70D6BACC53EEB9D6B76EFF0046FBB65DEA7F3F8DE9A4
% A7D172B2F170A8764E65D5E363D71BEEB5C18C6C90C6EEB2C2D63773DDB5715F
% F8F27D51FB57A1B32FD2F5367DABD26FA7B676FAFB7D6FB4FA5B7F49FD1FD7D9
% FE07D4F62E2BFC68E6DF8B674BFAA8DB77E2F45C4A5AF70207AB76C6D7EB594D
% 775DE9ECA58DF46BBD95E457EB5FFCE63DF4DB675781FE2A3EAA5FD0FECBF68F
% 5BAB5D8F55E73AABBD5159B5BFA3B71E967A355DD3EEB69BFD0F5AAF56EABD5F
% D63FD0A53DBF47EB5D2FADE10CEE9790DC9C62E2CDED05A439BF4996576065B5
% BFF3BF48CFA1FA4FA0F54BEB0FD72FABFF005736B3AA64ECC8B2B75B56356D73
% EC786FF2583655EABFF4753F21F4D4F7FF0084FD1D8BC8BEA2F50CDFAB1F5EDB
% D2EDB9C6AB725DD3B36BA7DCCB1E1CFC5C77C5BE9FB2ACB732CF57F9EF47D5FF
% 004965562C6E876FD72FF18BD431ACB6E18C72722EC8B9C0B6D663D4F35D55FA
% 595B2DADFF00D1F12BADF5FEABFF0071F651E9A4A7D031FF00C66FD53EBD8F95
% D3C58EC1B6FA5F5D43A80AEAA9E5CCB3DAEBC8EA189533DBEFFB652F67BFFA3E
% 57F32B0BFC45FF00DEDFFE82FF00EEDAD0FAC9FE293EAFB7A1DB6F48664559F8
% 78EF7D7B5CEB8E43D8D0FD9750EFF0B77A6E657F64FB3FE96FFE66CFE6567FF8
% 8BFF00BDBFFD05FF00DDB494EAF4D7FF008B4BBEBD3BA7E174DF4BACE2D8F155
% A18E6637AD437F48CA31DB67A2CB68F4ED7FA8FC3AABF5A8F5EAB7D6F46CB7B2
% EB1D6BA5F44C239DD5321B8D8C1C19BDC0B8973BE8B2BAEB0FB6C7FE77E8D9F4
% 3F49F418BC4BA5ECBFFC6A876455E9EEEAF6BCD5696CB1E2EB1F5B1CE6645357
% AB5DBB7F9BC9BBF4BFCD539FFD17227F5AADCDFADDFE315FD3A1CC0DC91D369D
% ADF50D7552F75775FB582A758C6BBED19B66FF00E699FA3F5BD2A9253E8BD37F
% C6D7D4FCEB6BA9F6DD84EB5C5A0E4D61AD066B6B3D4B697DF556CB7D57FE91EF
% D95FD9EEFB47A3FA1F5B4FA57D78E87D53AE66741A9D6519F8765956CB835A2D
% 3539F5DFF65731F67A9E9FA7BF63FD3B7D2FD27A7FA3BBD2E7DDFE263EAD9E9A
% DC717E437385601CC0441B07AB363B15DB99E93DF6D7BA96D9BFD2C6A3F4FEA7
% DA6EC8E3FF00C56517E07D7D76164FE87229AF228BABDE3E9D7A5957B322965F
% B1F5FE6B33FE87ABF67FD1FDB71129FFD3C1FAED45593FE356CC7BA9764D5764
% E157663B086BAC6BAAC563E963DCFA5AC7DAD3B377AD57FC656BD559F517EA7B
% 2D168E918C5C1C5D0581CD926E77F34E9AB67EB56FE8F66CFE8DFF0070F0FD0F
% 28FAC8CFB6FF008C0FDAB8ADFDB1D32DCBA5C2DDBEAD2F6D4FC6C4BF16DFB1D1
% 7FE8ABB9F5627F45BAFBB1EFC3BB6667DB71EDCAF57FF9EFF56CB697B2FBADAF
% 25AD7516558B93631E1CEAA9FD1D94E3BD8F7B6FC9A31ADAFE9D3956FD96DFD6
% 3F44929DBA69AA8A994D2C6D5554D0CAEB600D6B5AD1B58C631BED6B1AD5E4BF
% 505B9167F8D2EB2FB18D6D8C766BAF6B2E786B49BDAC76CDB5D7F6D67AAFD9E9
% E457433FED5FF3F4555AEF59F5F3EACD9B765F90EDFB766DC3CB3BB7FA1E9ED8
% C5F77A9F6DC2D9FF0086F17FEE454BCDFEA4E474BC3FF18B9796E34E2E1645CF
% AFA6B1F490F77DB5FBBA67D8B1FF004776232EC577F4AF43ECF562D9F67B7D2F
% B650929F52FAD78AFCCFAB1D571AB6D965B6625DE9D751707B9E18E7555B7D12
% 2C7EFB0359E8FF0087FE66CDF5BD70BFE24BACD07173FA1386DC86D9F6DACEA7
% 7B1C2AC6BBF37633D07D747F84FD2FDA3E87E8976589F5E3EAC665A29C7CB73A
% D73A868ACD17B1DFAD16B712DD9652C77D9EE75B4FEB3FD1FF0058C6DF6FEB34
% 7A9E3BD6BA45781D59DD4FEA966FA782EB1A31DE6D7E2DF8FEBB293532EB339B
% 84F65594CCBB1D8567AB6FAFD3E9C9BECB7D3C5CBB5253EC5F5EB36AC1FA9FD5
% EEB439CD7E33E801B04EEC81F63A8FB8B7D8DB6F67A9FC85E41D3F02D77F8B3E
% AB9B4B5D581D4686E4595BC9F52BADA1ACA32697BAA6331E9BF36BBAAB29FB55
% D6E47F3B8F5D547DA6BCF7E37D61EB5915D1D5FA8380A1DB5F6750C87BC6317B
% DD8C7ED754E464E0B1D938ECC7BACB68AD94BECC3FB57A556463D8FF005DE95D
% 43EA5F4EFABFFF00366ECBDB4E3639A33ABC8AEFC67C5CEA29C8BF22AC96B323
% 0EACBC8EA953D9639FE933D7FD0DBE9635BE8A5389FE24BA9E2BBA567F49DD19
% 75E47DAB69206EAEC65546EADBBBD477A5651FA6F66C67AD47FA45E819DD5BA5
% 74DD9FB47331F0FD59F4FED16B2ADDB637ECF55CCDFB37B372F05EABD0DFD17A
% AB723EAFF53DD53ACB198D7B9EEC2C8A4B5ECC3BB1B2DF94DC26559753F2765F
% 55767ABF64FD7B268C5C3B50A8E99D57AE7511FB77A97D9FD1D95E464E758FBA
% CA186E762FA7753376462FA791EA7F4DFB1E2D2FB29FB46463FDB717D74A74BF
% C69623A9FAF9936666EAB1B2DB8F6B2C606D8EF48575E359632AF52BF7B6DC7B
% FF00456D94EFD9FB9FA45D074EFF0012F859756366B3ADBAFC2C86D77376637A
% 6E7D4F0DB06C75B7BFD17D953BFC251FA3FF0044AC7D6FE9FF0052FAB747C6E9
% D467FD8BAA744C7F4EB764E35E325D463D4C3E865630A69C9F4B6DD465FDA3EC
% 96FA54B337231E9F46BCDD9C3FDABEB9E236EC7C7EAB92DA3A735CD7B1998FA8
% 575D4EB71C4E2DD6D1918ACDF8DE8D745F8F45DBEDC2A3D1F5B370EABD29F45F
% AB9FE2BBA1749EAF4643BAABB2FA8613858286B69037D645B63ACC6B465BDAC6
% D19781FF000D8EFB3ED55E47EB38BE872FFE2CB359D07EBC65748CAB6CAD991E
% AE106BCB58D37D567E83ED0C6DD6D3EAFE8AFC7ABD2B727F4F91E8D2FB3D5F51
% 4FFC5FF47E9DD13AD7ED4EB39CD666E039D4B7A662B2CC9BD96D965FD29DF6C6
% E2D57ED67AADF4EAF43D4DF665617A96D5F68C6AB2EA7D7CE83D3B2FABBBAAF4
% 2B9ADAB3EE7B7229CB3662B999537BB2AC73FA9D58B463E3DAFC7B595FAF95FA
% 5CDAB371B17FA2DB563A53EC7F583331707A1E7E5661AFECF563D85E2D68B18E
% 9696B6A75165943323D67BBD2FB3FAF57DA37FA3EA7BD79D7F88BFFBDBFF00D0
% 5FFDDB5CA53D3BEB3F5BBEBC1EBBD472C637A8E6B5B6BDF967ED2C18F5B317EC
% FEB7A58D97EAF54C4C57BF3EEC1A71ADC8B28BF22BC8AECA1747FE28F3A9E8A3
% A8FED16DD5BB39D8CDC6AEBA6DBAC7115E465FF31895DF756CB716DFB463D96D
% 6C66553EBBF1BD5FB3647A494E0F41B59FF8E932CAF27D763FA9DDB72B7B47AA
% 1CFB5ADB7D4A2DC0A5FF0068DDFE05DE95DEA7A75E1E5FF41BE785D431FA77F8
% D7BB2F2AE763D0CEAB94DB2D6EC1B45965D47E95D91FA2663FE93F59B3E9D78F
% EAFA3FA6D88BD1C177F8C4FDBAD739BD36EC9BFA85590C6D8F73F1ECC9B7A7D0
% 598D8AFAF35CFCACD7B30FD0F4FF00C2FEB1897E27AB5D97BFC62E27D5DEB978
% EB9D1726CFB75DE9B726ABE9C8A69B18463554E5372F2E9AB1717D3AB2F03D5F
% 5EEAB15F8F918D76FAEC7FEB694FB2AF17FA8B9B8597FE3532F2EA7B5F565DD9
% B6623DCD82E0F365CC7562CA2D7D6F751BDDF4F05FB3FED47FDA3CAE7F04FD6F
% CDC7661D7D4B2474D73598CFD97DD91456DB58C18D8D918FD3BEDB6D4CC9F5AB
% C3A29FB37BF23D4C4FE731F27D1DBFF17ACA7A17D7075F7D8EB3A7594D95E1E7
% 37D56B2F16173B0FD2A719B7B723232DB897B2BE9990EDFF006AA6EA7FE54C26
% 6324A7FFD4BA3AA7F8D9B2A71E95D1F0B1FA7DB4B5980CAACC77B69AA1FF0067
% B71EC6E5B69B5FE8D957F82FB27E82AF4B16BFD2FA937753FF001D277C749C46
% EFB18F6C3E9F6B5BE9EEA1939BFCD5DE9BFD4F537DFF00A7B7D1BAAFD07A3E34
% 924A7D9DFD5BFC73B9D5B9BD1709818EDCE6B5F5C3C6D733D3B37E7B9DB373BD
% 5FD17A6FDF5FFA2F52BB27FB67FC72FF00E51607F9EDFF00E492F1549253ECF6
% F56FF1CEF686B7A2E154439AEDCD7D6490D707BABFD267D8DD96B5BE959F9FB3
% F9AF4EDFD228BBA9FF008E93BE3A4E2377D8C7B61F4FB5ADF4F750C9CDFE6AEF
% 4DFEA7A9BEFF00D3DBE8DD57E83D1F1A49253ECF7756FF001CF654FAD9D170A9
% 73DA5ADB58FACB9A4881633D5CFB2ADECFF84AEC6247AB7F8E736B6C1D170835
% AD734D41F5ED7171616D8EFD7FD5DF5ECF66CB367E96CF53D4FD17A7E30924A7
% DABF6CFF008E5FFCA2C0FF003DBFFC92507F56FF001CEE756E6F45C26063B739
% AD7D70F1B5CCF4ECDF9EE76CDCEF57F45E9BF7D7FE8BD4AECF1849253ECADEA7
% FE3A5ACA1A7A4E238D31EA3CBE99B61AEAFF004FB735AC6EE7BBD7FD59B8FF00
% A567FA1FD0A57F53FF001D36CECE938944D6F60F4DF49873F6ECBFF4D9B6FE96
% 8DBFA2FF0001FA4FD3D377E8F678D24929F677F56FF1CEE756E6F45C26063B73
% 9AD7D70F1B5CCF4ECDF9EE76CDCEF57F45E9BF7D7FE8BD4AEC8D7D4FFC74B3D2
% DDD2712CF4EB2C7EE7D23D471D9FA7B7D3CD67E97D8EFE63D1A3F4D67E87F99F
% 4BC692494FB137A87F8EB0D6B4F4DC6716B6A6971763C935BB7DB63B6E5B5BBF
% 31BFA2C9DBECD9FD0FECB6FE914DBD4FFC748D93D2711DB2C7BDD2FA7DCD77A9
% B687C66FF354FA8CF4FD3D97FE82AF5AEB7F4FEB78D24929F673D5BFC739B5B6
% 0E8B841AD6B9A6A0FAF6B8B8B0B6C77EBFEAEFAF67B3659B3F4B67A9EA7E8BD3
% 9FED9FF1CBFF0094581FE7B7FF00924BC552494FB3BFAB7F8E773AB737A2E130
% 31DB9CD6BEB878DAE67A766FCF73B66E77ABFA2F4DFBEBFF0045EA57621D5BFC
% 738B5D61E8B845AE6B5A2A2FAF6B4B4BCBAC6FEBFEAEFB37FBF7D9B3F455FA7E
% 9FE97D4F1849253FFFD93842494D042100000000005900000001010000000F00
% 410064006F00620065002000500068006F0074006F00730068006F0070000000
% 1500410064006F00620065002000500068006F0074006F00730068006F007000
% 20004300530035002E003100000001003842494D042200000000018E49492A00
% 080000000E0000010300010000000006000001010300010000003B0300000201
% 0300010000000100000003010300010000000500000006010300010000000000
% 00001201030001000000010000001501030001000000010000001A0105000100
% 0000B60000001B01050001000000BE0000002801030001000000020000003101
% 020020000000C60000003201020014000000E60000003B01020008000000FA00
% 0000698704000100000004010000300100008096980010270000809698001027
% 000041646F62652050686F746F73686F70204353352E31204D6163696E746F73
% 6800323031343A30323A31322030393A33303A35350064757268616D6A000000
% 030001A0030001000000FFFF000002A00400010000000006000003A004000100
% 00003B03000000000000000006000301030001000000060000001A0105000100
% 00007E0100001B01050001000000860100002801030001000000020000000102
% 0400010000008E01000002020400010000000000000000000000480000000100
% 000048000000010000003842494D03FD0000000000080200000000000000
%EndPhotoshop
%begin_xml_code
/pdfmark where {pop true} {false} ifelse
/currentdistillerparams where {pop currentdistillerparams
/CoreDistVersion get 5000 ge } {false} ifelse
and not {userdict /pdfmark /cleartomark load put} if
[/NamespacePush pdfmark
[/_objdef {photoshop_metadata_stream} /type /stream /OBJ pdfmark
/MetadataString 28586 string def % exact length of metadata
/TempString 100 string def
/ConsumeMetadata {
currentfile TempString readline pop pop
currentfile MetadataString readstring pop pop
} bind def
ConsumeMetadata
%begin_xml_packet: 28586
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c061 64.140949, 2010/12/07-10:57:01        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:creator>
            <rdf:Seq>
               <rdf:li>durhamj</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Procedia Social and Behavioral Sciences_jnl size.pdf</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>image/epsf</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/">
         <xmp:MetadataDate>2014-02-12T09:30:55+05:30</xmp:MetadataDate>
         <xmp:ModifyDate>2014-02-12T09:30:55+05:30</xmp:ModifyDate>
         <xmp:CreateDate>2012-05-09T09:40:17+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Photoshop CS5.1 Macintosh</xmp:CreatorTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ED3B22F10B20681192B0FA6F4357087D</stRef:instanceID>
            <stRef:documentID>xmp.did:F97F1174072068118083BDAE84C3A76C</stRef:documentID>
            <stRef:originalDocumentID>uuid:EE1EB4DEF00C11DDB96CB2BFF74975D2</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:InstanceID>xmp.iid:EE3B22F10B20681192B0FA6F4357087D</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F97F1174072068118083BDAE84C3A76C</xmpMM:DocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:49109F02203011689DD09F117AB608B3</stEvt:instanceID>
                  <stEvt:when>2010-09-14T16:09:12+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74117FEE20071168B42D98B76B944B78</stEvt:instanceID>
                  <stEvt:when>2010-09-20T09:32:24+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CFA047EB07206811AFFD830048CE9F7C</stEvt:instanceID>
                  <stEvt:when>2012-03-10T08:42:32+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D0A047EB07206811AFFD830048CE9F7C</stEvt:instanceID>
                  <stEvt:when>2012-03-10T08:42:32+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D1A047EB07206811AFFD830048CE9F7C</stEvt:instanceID>
                  <stEvt:when>2012-03-10T08:42:38+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D2A047EB07206811AFFD830048CE9F7C</stEvt:instanceID>
                  <stEvt:when>2012-03-10T08:43:09+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:841532841E206811808399A2A1442FAC</stEvt:instanceID>
                  <stEvt:when>2012-03-12T13:27:52+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118083BDAE84C3A76C</stEvt:instanceID>
                  <stEvt:when>2012-05-09T09:40:17+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B6F217FC11206811AB08A0988E7F7268</stEvt:instanceID>
                  <stEvt:when>2012-05-09T09:41:26+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C09811B83F20681192B0FCD159D246EF</stEvt:instanceID>
                  <stEvt:when>2012-05-10T15:22:09+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2429339E4320681192B0FCD159D246EF</stEvt:instanceID>
                  <stEvt:when>2012-05-10T15:22:09+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2529339E4320681192B0FCD159D246EF</stEvt:instanceID>
                  <stEvt:when>2012-05-10T15:22:13+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2629339E4320681192B0FCD159D246EF</stEvt:instanceID>
                  <stEvt:when>2012-05-10T15:22:46+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2729339E4320681192B0FCD159D246EF</stEvt:instanceID>
                  <stEvt:when>2012-05-10T15:24:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6F2B098C122068118F62B634D66E5983</stEvt:instanceID>
                  <stEvt:when>2012-05-17T10:47:20+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:702B098C122068118F62B634D66E5983</stEvt:instanceID>
                  <stEvt:when>2012-05-17T10:47:20+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:712B098C122068118F62B634D66E5983</stEvt:instanceID>
                  <stEvt:when>2012-05-17T10:48:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:722B098C122068118F62B634D66E5983</stEvt:instanceID>
                  <stEvt:when>2012-05-17T10:48:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6D751E6618206811B1A49AEB9AB9F021</stEvt:instanceID>
                  <stEvt:when>2012-12-14T11:43+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6E751E6618206811B1A49AEB9AB9F021</stEvt:instanceID>
                  <stEvt:when>2012-12-14T11:43+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068118A6DC498A93AEC9B</stEvt:instanceID>
                  <stEvt:when>2014-02-11T16:42:37+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F1174072068118A6DC498A93AEC9B</stEvt:instanceID>
                  <stEvt:when>2014-02-11T16:42:37+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EB3B22F10B20681192B0FA6F4357087D</stEvt:instanceID>
                  <stEvt:when>2014-02-12T09:30:44+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC3B22F10B20681192B0FA6F4357087D</stEvt:instanceID>
                  <stEvt:when>2014-02-12T09:30:44+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED3B22F10B20681192B0FA6F4357087D</stEvt:instanceID>
                  <stEvt:when>2014-02-12T09:30:55+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from image/tiff to image/epsf</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>derived</stEvt:action>
                  <stEvt:parameters>converted from image/tiff to image/epsf</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE3B22F10B20681192B0FA6F4357087D</stEvt:instanceID>
                  <stEvt:when>2014-02-12T09:30:55+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:EE1EB4DEF00C11DDB96CB2BFF74975D2</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:ColorMode>0</photoshop:ColorMode>
         <photoshop:DocumentAncestors>
            <rdf:Bag>
               <rdf:li>uuid:40598207-536f-114e-b402-337044cc25c1</rdf:li>
               <rdf:li>uuid:83CC3A8F983111E0BA6BA67B41C3504C</rdf:li>
               <rdf:li>uuid:85E75CAB5AE411E081458946EE22E779</rdf:li>
               <rdf:li>uuid:9196F851C36611E0898384BC13890026</rdf:li>
               <rdf:li>uuid:91BD0AB307B411E1A6EDA6988BA7222B</rdf:li>
               <rdf:li>uuid:ea364750-5153-6040-b75a-0efb12c7393c</rdf:li>
               <rdf:li>xmp.did:DAB43E32F5246811871FDD69147F9B04</rdf:li>
               <rdf:li>xmp.did:F87F1174072068118083BDAE84C3A76C</rdf:li>
               <rdf:li>xmp.did:F97F1174072068118083BDAE84C3A76C</rdf:li>
            </rdf:Bag>
         </photoshop:DocumentAncestors>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpRights="http://ns.adobe.com/xap/1.0/rights/">
         <xmpRights:Marked>False</xmpRights:Marked>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                            
<?xpacket end="w"?>
%end_xml_packet
[{photoshop_metadata_stream} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark
[{photoshop_metadata_stream} MetadataString  /PUT pdfmark
[/_objdef {nextImage} /NI pdfmark
%end_xml_code
gsave % EPS gsave
40 dict begin
/_image systemdict /image get def
/_setgray systemdict /setgray get def
/_currentgray systemdict /currentgray get def
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank
{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}
ifelse def
/inverted? negative def
/level2 systemdict /languagelevel known
{languagelevel 2 ge} {false} ifelse def
/level3 systemdict /languagelevel known
{languagelevel 3 ge} {false} ifelse def
gsave % Image Header gsave
/rows 827 def
/cols 1536 def
110.592 59.544 scale
level2 {
/DeviceGray
setcolorspace currentdict /PhotoshopDuotoneColorSpace undef currentdict /PhotoshopDuotoneAltColorSpace undef } if
/picstr1 192 string def
/_rowpadstr 192 string def
/rawreaddata {hasDecodeFile 0 eq {/decodeFile currentfile /ASCII85Decode filter def
                                  /hasDecodeFile 1 def} if
              decodeFile exch readstring pop} def
/padreaddata { _topPad 0 gt       { /_topPad _topPad 1 sub def pop _rowpadstr }
			 { _subImageRows 0 gt { /_subImageRows _subImageRows 1 sub def
									dup _leftPad _picsubstr rawreaddata putinterval }
								  { pop _rowpadstr } ifelse } ifelse } def
/image2 level2 {/image load def} {{begin
Width Height BitsPerComponent ImageMatrix
/DataSource load image end} def} ifelse
/beginimage level2 {{
image2
} def}
{{pop .9 setgray 0 0 moveto 0 1 lineto
1 1 lineto 1 0 lineto fill 0 setgray
0 1 translate 1 cols div 1 rows div scale
/ratio {cols 400 div mul} def
/Helvetica findfont 15 ratio scalefont setfont
5 ratio -20 ratio moveto
(ASCII85 encoded image needs PostScript Level 2) show
/x 128 string def
{currentfile x readline {} {pop exit} ifelse
(~>) search {pop pop pop exit} {pop} ifelse
} loop } def}
ifelse
/hasDecodeFile 0 def
/readdata /rawreaddata load bind def
12 dict begin
/ImageType 1 def
/Width cols def
/Height rows def
/ImageMatrix [cols 0 0 rows neg 0 rows] def
/BitsPerComponent 1 def
/Decode [0 1] def
/DataSource {picstr1 readdata} def
currentdict end
beginimagezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!zzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s*u3k
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s*u3ks8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!rr=/@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
rW!3's8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu@!%s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!qu?j!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s6p!gz!!!9(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
qu?j!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s1eU7z!!!'"s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu?j!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s*t(Lz!!!"Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!qu?j!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu?]sz!!!!@
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu?j!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu?]sz!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu?j!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!qu?]sz!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!qu?j!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu?]sz!!!!@s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!quQits8W-!s8W-!s8W-!s8W+L+92B@qu?j!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!qu?]sz!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p]:Eps8W-!
s8W-!s8W-!s8W+L&-)\0rW!3's8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu?]s
z!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!n,WLgs8W-!s8W-!s8W-!s8W*!#QOi(rr<<(
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu?]sz!!!!0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(s1f`Vs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!qu?]sz!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!
s8W*!#QOi(s6r8Qs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!qu?]sz!!!!@s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!^]6V!s8W-!s8W-!s8W-!s8W*!#QOi(s7lWos8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!rr<$!z!!!!`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huH"A
s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s1eU7z!!!$!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kWz!!!'"s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s1eX7s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!
s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53qXs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,
s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53qXs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!
#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53qXs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!
s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53qXs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!
s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qX
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!huJ9,s8W-!s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53qXs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huJ9,s8W-!
s8W-!s8W-!s8W*!#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53qXs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huH"As8W-!s8W-!s8W-!s8W*!#QOi(
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!s8W-!!!iQ(
s8W,7!.Y%Ks8W-!s8W-!!!E9$s8W-!s8Duus8W-!s8W-!p](j)s8W-!s8W-!huH"A
s8W-!s8W,s!"],0^]6V!s8W-!s8N'$s8W-!s8W*!#QOi(s8W-!s8W-!qu@!%s8W-!
s8W-!s*t*!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!s8W,u!!3-"s8W&u!'gM`s8W-!s8W,g
!!*'!s8W-!s7cQo+92B@s8W-!n,NIgs8W-!s8W,u!!!Q0s8W-!s8W,g!!iQ(J,hh6
s8W-!s6p!gs8W-!s8Vus"98E$s8W-!s8W-!huEb,s8W-!s8W-!rVup?s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53qXs8W-!re:Bj!!%NKs8N?)!!3-!,QIfCJH,U6!!"8Ds8W-!r#bt>"@)qd
rt,5.J,fQOs8W-!s8W+T!!!(Ms8W-!q@ETK!!)pa!!!99?iU0+r'15^(]Wt8s7?j&
!<<6%s7&>Rs8W,oJ,fQ]s8W-!s.I.,O8o7ds8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!p]1>E
!!!Q0s8Duu!!%N<!WW2t!.XbD!!!$!s8W-!p](9o!$D7@rW#1X!!!!"s8W-!s8W&u
!!!!@s8W-!huW`U!!%6Dz&-)\0p](9o!WTq?s1eU7!!!$!s*tX[s8W,Wzs8W-!rr=/@
z5QCc`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53qXs8W-!p],dD!!!9(s82is!!#7Q!<<)o!'g5Y!!!"Ks8W-!
n,NFg!"],0qu@i.zs8W-!s8Vus!!!!0s8W-!huWTQ!!$s<z#QOi(n,NFg!<7QOs*t(L
!!!"Ks*t@Ss8W,7zs8W-!rW!K.z+92B@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!n,Rn;!!!9(s53kW
!!!8n!<<)o!'fBA!!!!@s8W-!^]4?7!!3-"p])Cdz&-)\0s8VQg!!!!$s8W-!huW<I
zz#QOi(^]4?7!$?^lrr<$!!!!!`rr<<(s8W*!z+92B@rW!Juz&-)\0s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53qXs8W-!huJ!%!!!9(s1eU7!!!,Z!<<)o!'bu6!!!!0s8W-!J,fQL!!*'!p])B9
z#QOi(s8V!Wzs8W-!huVa9zz"98E$z!"XS\rr<$!!!!!`rr<<(s8W&uz&-)\0rW!Je
z"98E$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53qXs8W-!huI]r!!!9(s*t(L!!!&X!<<)o!'^G`!!!!(s8W-!
z!!%NKp])?8z"98E$s8Tk7zJ,fQKhuUUnzz!WW3!z!!e#TrVuou!!!!`rr<<(s8Vus
z#QOi(rr<SFz!WW3"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huI-b!!!9(rr<$!!!!#W!<<)o!.FnJ
!!!!(s8W,uz!!#7`p])?8z"98E$s8N'!z+92B@huE`Wzz!WW2tz!!e#TrVuou!!!!`
rr<<(s8Vusz!<<*!rr<R[z!<<*!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huE`W!!!9(qu?]s!!!"<
!<<)o!-eJD!!!!"s8W,sz!!",@p])-2z!<<*!s8Duuz#QOi(huE`Wzz!WW2hz!!.TN
rVuou!!!!`rr<<(s8VQgz!.Y%Krr<N/z!'gM`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huE`W!!!9(
qu?]s!!!!A!<<)o!-eJDzs8W,oz!!!Q0p](9oz!.Y%Ks82isz"98E$huE`Wzz"98DZ
z!!!!"rr<$!!!!!`rr<<(s8Tk7z!.Y%Krr<N/z!'gM`s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huE`W
!!!Q0n,NFgz!<<)o!&+BQzJ,fQ<z!!!9(p](9oz!'gM`s7cQoz!WW3"huE`Wzz#QOh>
z!!!!"rr<$!!!!!`rr<<(s8RTLz!$D7@rr<H-z!$D7@s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huE`W
!!",@huE`Wz!<<)ozz5QCcAz!!!9(p](9oz!$D7@s6p!gz!<<*!huE`W!!%6Dz#QOgS
z!!!!"s*t(L!!!$!rr<<(s8N'!z!"],0rr<$!z!"],0s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huE`W
s6r8Q^]4?Vrr<$!!<<)o!!!!$s53kW+92AV!!%NH!!!9(p](9o"97ij!$D7@s53kW
+8u6?!.Y%KhuE`Xs1j'`z+92@k!!*&o!!!!"s1eU7!!!'"rr<<(s8Duu!WVWh!!iQ(
rr<$!!<;fo!!iQ(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huE`Xs8;os^]4@as*t(L!<<)o!!!!(
s7cQo+92@k!!3-"!!!9(p](9o#QOQ!!!iQ(s53kW5Q:]`!.Y%KhuE`Zs5<nWzJ,fNK
!!3-!!!!!"s53kW!!!-$rr<<(s8Duu"98,r!!iQ(rr<$!!WW-!!!iQ(s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53qXs8W-!huE`Zs8W-!J,fWMs53kW!<<)o!!!!@s82is+92?@!!iQ(^]4W>p](9o
+92<?!!E9$s1eU7s8Tk7!.Y%KhuE`fs8W-!^]5JVs8W*!!!iQ(J,fQMs8W*!"98E$
rr<<(s82is#QOc'!!E9$rr<$!"98CO!!iQ(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huEaAs8W-!
!!!Q0s82is!<<)o!!!'"s8RTL+92?@!.Y%Kqu@!%p](9ps8W,W!!3-"s*t(ks8Vus
!'gM`huEb,s8W-!huH"As8W&u!'gM`p](9ps8W*!#QOi(rr<<(s7cQos8W,W!!E9$
rr<$!s8W,g!!iQ(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huEaAs8W-!!!",@s8Duu!<<)o!!!-$
s8Tk7+92<?!<<*!rW!K/p](9rs8W,g!!3-"rVup?s8W&u!$D7@huEcWs8W-!huJ9,
s8Vus!.Y%Kqu?]ts8W*!#QOi(rr<<(s7cQps8W,g!!3-"rr<$"s8W,o!!E9$s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53qXs8W-!huEb,s8W-!!!%NKs8Tk7!<<)o!!!Q0s8V!W&-)V/!WW3"s*tX[
p](:)s8W,s!!3-"qu?^]s8W,7!$D7@huEfXs8W-!huJ9,s8Vus!WW3"rr<$"s8W*!
#QOi(rr<<(s6p!js8W,s!!*'!rr<$"s8W,s!!E9$s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huEfX
s8W,u!!*'!s8Tk7!<<)o!!",@s8Vio"98?#"98E$s55"!p](:9s8W,u!!3-"qu?`s
s8W,W!"],0huElZs8W-!huJ9,s8Vus#QOi(s*t(Ms8W*!#QOi(rr<<(s1eU>s8W-!
!!*'!rr<$(s8W,u!!3-"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huEfXs8W,u!!3-"s8V!W!<<)o
!!#7`s8Vio"98?##QOi(s6r8Qp](:Ys8W-!!!*'!p](?ps8W,g!!iQ(huElZs8W-!
huJ9,s8Vio#QOi(s1eU8s8W*!#QOi(rr<<(s1eUFs8W-!J,k*!rr<$0s8W,u!!*'!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53qXs8W-!huElZs8W,s!!E9$s8VQg!<<)o!!%NKs8Vus"98?##QOi(
s7h*Dp](;Ds8W-!J,k*!p](Ers8W,o!!E9$huF;fs8W-!huJ9,s8VQg&-)\0s53kX
s8W*!#QOi(rr<<(s1eUVs8W-!^]6V!rr<$@s8W-!!!*'!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!
huElZs8W,o!!iQ(s8Vio!<<)o!!*'!s8Vus"98?#&-)\0s8W-!p](;Ds8W-!^]6V!
p](R!s8W,u!!E9$huFl!s8W-!huJ9,s8V!W+92B@s53kXs8W*!#QOi(rr<<(s1eV!
s8W-!huFl!rr<$`s8W-!!!%NKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huF#^s8W,g!"],0s8Vus
!<<)o!!3-"s8Vus"989!&-)\0s8W-!p](;Ds8W-!^]6V!p](R!s8W,u!!E9$huFl!
s8W-!huJ9,s8Tk7+92B@s6p!hs8W*!#QOi(rr<<(s*t*!s8W-!n,OR1rr<$`s8W-!
!!%NKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53qXs8W-!huF;fs8W,g!!iQ(s8Vus!<<)o!!3-"s8W&u"98,r
&-)\0s8W-!p](<os8W-!huH"An,O"!s8W,u!!E9$huFl!s8W-!huJ9,s8Tk75QCc`
s6p!hs8W*!#QOi(rr<<(rr<'!s8W-!n,OR1rr<$`s8W-!J,k*!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qX
s8W-!huFl!s8W,g!"],0s8Vus!<<)o!!3-"s8W*!"98,r&-)\0s8W-!p](?ps8W-!
huH"AhuH"As8W,u!!3-"huH"As8W-!huJ9,s8Tk75QCc`s7cQps8W*!#QOi(rr<<(
rW!!!s8W-!n,OR1rr<'!s8W-!^]8las8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huFl!s8W,g!$D7@
s8W&u!<<)o!!E9$s8W+L"98,r&-)\0s8W-!p](Ers8W-!n,P]QhuFl!s8W-!!!3-"
huH"As8W-!huJ9,s8Tk7J,fQKs82its8W*!#QOi(rr<<(rW!'#s8W-!p])E9rr<'!
s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huFl!s8W,g!'gM`s8W*!!<<)o!!iQ(s8W+L
"98,r&-)\0s8W-!p](Ers8W-!n,OR1huH"As8W-!J-#]MhuJ9,s8W-!huJ9,s8RTL
s8W-!s82its8W*!#QOi(rr<<(rW!'#s8W-!qu@9-rr<*"s8W-!huJ9,s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53qXs8W-!huF;fs8W,W!'gM`s8W+L!<<)o!!iQ(s8W+L"98,r+92B@s8W-!p](R!
s8W-!n,O"!huJ9,s8W-!^]=E7huNfWs8W-!huJ9,s8RTMs8W-!s82its8W*!#QOi(
rr<<(rW!3's8W-!qu@!%rr<*"s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huFl!s8W,W
!'gM`s8W+L!<<)o!"],0s8W+L!WVop+92B@s8W-!p](R!s8W-!n,O"!^]8las8W-!
^]8lahuNfWs8W-!huJ9,s8RTMs8W-!s82its8W*!#QOi(rr<<(rW!K/s8W-!rW!3'
rr<*"s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huFl!s8W,7!'gM`s8W+L!<<)o!"],0
s8W+L!WVop&-)\0s8W-!p](R!s8W-!p](j)^]=E7s8W-!^]8lahuNfWs8W-!huJ9,
s8N'"s8W-!s82its8W*!#QOi(rr<<(rW!K/s8W-!rW!'#rr<*"s8W-!huJ9,s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53qXs8W-!huFl!s8W,7!'gM`s8W+L!<<)o!"],0s8W+L"98,r&-)\0s8W-!
p](Ers8W-!p](j)^]FK8s8W-!^]6V!huNfWs8W-!huJ9,s8N'"s8W-!s8E!!s8W*!
#QOi(rr<<(rW!K/s8W-!rW!'#rr<*"s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huFl!
s8W+L!.Y%Ks8W+L!<<)o!"],0s8W+L"98,r&-)\0s8W-!p](R!s8W-!qu@9-^]=E7
s8W-!huH"AhuNfWs8W-!huJ9,s8N'"s8W-!s8E!!s8W*!#QOi(rr<<(rW!K/s8W-!
rr<0$rr<*"s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huH"As8W+L!.Y%Ks8W+L!<<)o
!$D7@s8W+L"989!&-)\0s8W-!p](R!s8W-!rW!K/J,oWLs8W-!huH"AhuNfWs8W-!
huJ9,s8N'"s8W-!s8N'"s8W*!#QOi(rr<<(p](j)s8W-!s*t4Orr<<(s8W-!huJ9,
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!<<*!s8W+L!<<)o!$D7@s8W+L"98?#&-)\0
s8W-!p](j)s8W-!rW!K/J,oWLs8W-!n,P]QhuNfWs8W-!huJ9,s8N'$s8W-!s8N'"
s8W*!#QOi(rr<<(p](j)s8W-!s*t4Orr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!
huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98?##QOi(s8W-!p](j)s8W-!rW!K/
!!3-"s8W-!p]*PYhuNfWs8W-!huJ9,s8N'(s8W-!s8RTMs8W*!#QOi(rr<<(n,O"!
s8W-!s*t4Orr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W
!<<)o!'gM`s8W+L"98?#!WW3"s8W-!p])E9s8W-!rW!K/!!3-"s8W-!p]*PYhuNfW
s8W-!huJ9,s8N'(s8W-!s8RTMs8W*!#QOi(rr<<(n,OR1s8W-!s*t4Orr<T0s8W-!
huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L"98E$s8W,W!<<)o!'gM`s8W+L"98?#
!WW3"s8W-!p])E9s8W-!rW!K.!!E9$s8W-!p]*PYhuNfWs8W-!huJ9,s8N'(s8W-!
s8RTMs8W*!#QOi(rr<<(n,OR1s8W-!s*t4Orr<T0s8W-!huJ9,s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qX
s8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!.Y%Ks8W+L"98?#!'gM`s8W-!p])E9s8W-!
rW!K.!!iQ(s8W-!p]*PYhuNfWs8W-!huJ9,s8N'0s8W-!s8RTMs8W*!#QOi(rr<<(
n,OR1s8W-!s*t4Orr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"
s8W,W!<<)o!.Y%Ks8W+L"98?#!"],0s8W-!p])E9s8W-!rW!K.!!iQ(s8W-!p]*PY
huNfWs8W-!huJ9,s8N'0s8W-!s8RTMs8W*!#QOi(rr<<(n,P]Qs8W-!s*t4Orr<T0
s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L
"98B$!!iQ(s8W-!p])E9s8W-!rW!3&!!iQ(s8W-!p]*PYhuNfWs8W-!huJ9,s8N'0
s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s*t4Orr<T0s8W-!huJ9,s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98B$!!!Q0s8W-!p])E9
s8W-!rW!3&!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8N'0s8W-!s8RTMs8W*!#QOi(
rr<<(n,Rt<s8W-!s*t.Mrr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L
!WW3"s8W,W!<<)o!'gM`s8W+L"98CO!!!-$s8W-!p])E9s8W-!rW!3&!"],0s8W-!
p]*PYhuNfWs8W-!huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s*t.M
rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`
s8W+L"98D:!!!$!s8W-!p])E9s8W-!rW!K.!"],0s8W-!p]*PYhuNfWs8W-!huJ9,
s8E!/s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!rr<'!rr<T0s8W-!huJ9,s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98DZzJ,fQKp])E9
s8W-!rW!K.!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(
rr<<(n,Rt<s8W-!s*t+Lrr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L
!WW3"s8W,W!<<)o!'gM`s8W+L"98Djz+92B@p])E9s8W-!rW!K.!"],0s8W-!p]*PY
huNfWs8W-!huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s1eX7rr<T0
s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L
"98Drz&-)\0p])E9s8W-!rW!K.!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8E!/s8W-!
s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s1eX7rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qX
s8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98E!z!.Y%Kp])E9s8W-!rW!K.
!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<
s8W-!s1eX7rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W
!<<)o!'gM`s8W+L"98E!z!'gM`p])E9s8W-!rW!K.!"],0s8W-!p]*PYhuNfWs8W-!
huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s1eX7rr<T0s8W-!huJ9,
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98E$J,fQL
!$D7@p])E9s8W-!rW!K.!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8E!/s8W-!s8RTM
s8W*!#QOi(rr<<(n,Rt<s8W-!s1eX7rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!
huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98E$^]4?7!!3-"p])E9s8W-!rW!K.
!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<
s8W-!s1eX7rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W
!<<)o!'gM`s8W+L"98E$huE`W!!*'!p])E9s8W-!rW!K.!"],0s8W-!p]*PYhuNfW
s8W-!huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s1eX7rr<T0s8W-!
huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98E$
rr<$!!!%NKp])E9s8W-!rW!K.!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8E!/s8W-!
s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s1eX7rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qX
s8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98E$s*t(L!!#7`p])E9s8W-!
rW!3&!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(rr<<(
n,Rt<s8W-!s1eX7rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"
s8W,W!<<)o!'gM`s8W+L"98E$s1eU7!!",@p])E9s8W-!rW!3&!"],0s8W-!p]*PY
huNfWs8W-!huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s*t+Lrr<T0
s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L
"98E$s8V!W!!!Q0p])E9s8W-!rW!3&!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8E!/
s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s*t.Mrr<T0s8W-!huJ9,s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98E$s8Vio!!!Q0p])E9
s8W-!rW!K.!"],0s8W-!p]*PYhuNfWs8W-!huJ9,s8E!/s8W-!s8RTMs8W*!#QOi(
rr<<(n,Rt<s8W-!s*t.Mrr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L
!WW3"s8W,W!<<)o!'gM`s8W+L"98E$s8W&u!!!Q0p])E9s8W-!rW!K.!"],0s8W-!
p]*PYhuNfWs8W-!huJ9,s8N'0s8W-!s8RTMs8W*!#QOi(rr<<(n,Rt<s8W-!s*t.M
rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`
s8W+L"98E$s8W-!!!!9(p])E9s8W-!rW!K.!!iQ(s8W-!p]*PYhuNfWs8W-!huJ9,
s8N'0s8W-!s8RTMs8W*!#QOi(rr<<(n,P]Qs8W-!s*t.Mrr<T0s8W-!huJ9,s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98E$s8W-!J,f]O
p])E9s8W-!rW!K.!!iQ(s8W-!p]*PYhuNfWs8W-!huJ9,s8N'0s8W-!s8RTMs8W*!
#QOi(rr<<(n,P]Qs8W-!s*t4Orr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,
s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98E$s8W-!n,NLhp])E9s8W-!rW!K.!!E9$
s8W-!p]*PYhuNfWs8W-!huJ9,s8N'0s8W-!s8RTMs8W*!#QOi(rr<<(n,OR1s8W-!
s*t4Orr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o
!'gM`s8W+L"98E$s8W-!p](?pp])E9s8W-!rW!K/!!E9$s8W-!p]*PYhuNfWs8W-!
huJ9,s8N'0s8W-!s8RTMs8W*!#QOi(rr<<(n,OR1s8W-!s*t4Orr<T0s8W-!huJ9,
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,W!<<)o!'gM`s8W+L"98E$s8W-!
qu?ctp](j)s8W-!rW!K/!!3-"s8W-!p]*PYhuNfWs8W-!huJ9,s8N'0s8W-!s8RTM
s8W*!#QOi(rr<<(p])E9s8W-!s*t4Orr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!
huJ9,s8W+L!WW3"s8W,7!<<)o!'gM`s8W+L"98E$s8W-!rVurup](j)s8W-!rW!K/
!!*'!s8W-!n,P]QhuNfWs8W-!huJ9,s8N'(s8W-!s8N'"s8W*!#QOi(rr<<(p](j)
s8W-!s*t4Orr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!WW3"s8W,7
!<<)o!'gM`s8W+L"98E$s8W-!rr<*"p](j)s8W-!qu@9-J,oWLs8W-!huH"AhuNfW
s8W-!huJ9,s8N'(s8W-!s8N'"s8W*!#QOi(rr<<(p](j)s8W-!s*t4Orr<T0s8W-!
huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W+L!<<*!s8W+L!<<)o!'gM`s8W+L"98E$
s8W-!s*t.Mp](R!s8W-!p](j)^]=E7s8W-!huH"AhuNfWs8W-!huJ9,s8N'$s8W-!
s8E!!s8W*!#QOi(rr<<(qu@9-s8W-!rr<0$rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qX
s8W-!huJ9,s8W+L!.Y%Ks8W+L!<<)o!'gM`s8W+L"98E$s8W-!s1e[8p](R!s8W-!
p](j)^]=E7s8W-!^]6V!huNfWs8W-!huJ9,s8N'"s8W-!s8E!!s8W*!#QOi(rr<<(
qu@9-s8W-!rW!'#rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W,7!'gM`
s8W+L!<<)o!'gM`s8W+L"98E$s8W-!s1e[8p](R!s8W-!n,O"!^]FK8s8W-!^]8la
huNfWs8W-!huJ9,s8N'"s8W-!s8E!!s8W*!#QOi(rr<<(rW!K/s8W-!qu?j!rr<T0
s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W,7!'gM`s8W+L!<<)o!'gM`s8W+L
"98E$s8W-!s1eX7p](R!s8W-!n,OR1huNfWs8W-!^]8lahuNfWs8W-!huJ9,s8N'"
s8W-!s82its8W*!#QOi(rr<<(rW!3's8W-!qu?j!rr<T0s8W-!huJ9,s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53qXs8W-!huJ9,s8W,W!'gM`s8W+L!<<)o!'gM`s8W+L"98E$s8W-!s53nWp](R!
s8W-!n,OR1huJ9,s8W-!^]=E7huNfWs8W-!huJ9,s8RTMs8W-!s82its8W*!#QOi(
rr<<(rW!'#s8W-!qu@!%rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W,g
!'gM`s8W+L!<<)o!'gM`s8W+L"98E$s8W-!s1eX7p](R!s8W-!n,P]QhuH"As8W-!
^]=E7huNfWs8W-!huJ9,s8RTMs8W-!s82its8W*!#QOi(rr<<(rW!!!s8W-!qu@9-
rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W,g!'gM`s8W*!!<<)o!'gM`
s8W+L"98E$s8W-!s1eX7p](Ers8W-!n,P]QhuH"As8W-!J-#]MhuNfWs8W-!huJ9,
s8Tk7s8W-!s82its8W*!#QOi(rr<<(rW!!!s8W-!p](j)rr<T0s8W-!huJ9,s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53qXs8W-!huJ9,s8W,g!$D7@s8W*!!<<)o!'gM`s8W+L"98E$s8W-!s1eX7
p](?ps8W-!huH"AhuH"As8W-!!!3-"huNfWs8W-!huJ9,s8Tk7J,fQKs82its8W*!
#QOi(rr<<(rW!!!s8W-!n,O"!rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,
s8W,g!"],0s8W&u!<<)o!'gM`s8W+L"98E$s8W-!s1e[8p](<os8W-!^]6V!huH"A
s8W,u!!3-"huNfWs8W-!huJ9,s8Tk75QCc`s7cQps8W*!#QOi(rr<<(rr<*"s8W-!
huFl!rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W,g!"],0s8Vus!<<)o
!'gM`s8W+L"98E$s8W-!s1e[8p](<os8W-!J,hh6n,O"!s8W,s!!E9$huNfWs8W-!
huH"As8Tk75QCc`s6p!hs8W*!#QOi(rr<<(s*t+Ls8W-!huFl!rr<T0s8W-!huJ9,
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53qXs8W-!huJ9,s8W,o!!iQ(s8Vus!<<)o!'gM`s8W+L"98Cns8W-!
s53qXp](;Ds8W-!J,k*!p](R!s8W,o!!E9$huNfWs8W-!huH"As8Tk75QCc`s6p!h
s8W*!#QOi(rr<<(s1eVas8W-!huFl!rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!
huJ9,s8W,o!"],0s8Vio!<<)o!'gM`s8W+L"98B+s8W-!s1e[8p](;Ds8W-!!!*'!
qu@!%s8W,g!!E9$huNfWs8W-!^]6V!s8V!W5QCc`s53kXs8W*!#QOi(rr<<(s1eV!
s8W-!^]6V!rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W,s!!iQ(s8VQg
!<<)o!'gM`s8W+L"989!s8W-!s*t.Mp](;Ds8W,u!!3-"qu?cts8W,W!!iQ(huNfW
s8W-!huH"As8VQg+92B@s53kXs8W*!#QOi(rr<<(s1eUVs8W-!!!%NKrr<T0s8W-!
huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W,u!!3-"s8VQg!<<)o!'gM`s8W+L"98,r
J,fQKrr<*"p](:Ys8W,s!!3-"qu?`ss8W,7!"],0huNfWs8W-!n,P]Qs8Vio&-)\0
s1eU8s8W*!#QOi(rr<<(s53kfs8W,u!!%NKrr<T0s8W-!huJ9,s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qX
s8W-!huJ9,s8W,u!!*'!s8V!W!<<)o!'gM`s8W+L"98,r5QCc`rr<*"p](:9s8W,s
!!3-"rVuqJs8W+L!"],0huNfWs8W-!p]*PYs8Vio#QOi(s*t(Ms8W*!#QOi(rr<<(
s53k^s8W,s!!*'!rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W-!!!*'!
s8Tk7!<<)o!'gM`s8W+L"97ij+92B@rW!!!p](:)s8W,W!!E9$rr<%Ks8W*!!"],0
huNfWs8W-!p]*PYs8Vus"98E$rr<$"s8W*!"98E$rr<<(s6p!js8W,g!!*'!rr<T0
s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W-!J,g\ks8Duu!<<)o!'gM`s8W+L
"97ij!WW3"p](Erp](9ps8W,7!!iQ(rr<$0s8W&u!'gM`huNfWs8W-!p])E9s8Vus
!.Y%Kp](9ps8W*!!WW3"rr<<(s7cQos8W,W!!E9$rr<T0s8W-!huJ9,s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53qXs8W-!huJ9,s8W-!J,g,[s82is!<<)o!'gM`s8W+L"97ij!<<*!n,N^np](9o
s8W+L!"],0s*t(Ss8Vio!.Y%KhuNfWs8W-!qu@i=s8W&u!'gM`n,NFhs8W+L!<<*!
rr<<(s7cQo5QCc!!!iQ(rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W-!
J,f]Os6p!g!<<)o!'gM`s8W+L"97ij!.Y%KhuF;fp](9o5QC``!$D7@s*t(Ms8V!W
!.Y%KhuNfWs8W-!qu?j!iW&oX!"],0^]4?8s8W+L!.XtYrr<<(s7cQo&-)Z[!!iQ(
rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W-!^]4?Vqu?]s!<<)o!'gM`
s8W+L"97ij!!%ND!!!Q0p](9o!<9h7!$D7@s1eU7&,ZD-!<<*!huNfWs8W-!qu?`r
!.Y"K!!%ND!!!!"s8W*!!$Au]rr<<(s82is!.Wo,!"],0rr<T0s8W-!huJ9,s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53qXs8W-!huJ9,s8W-!huE`^p](9o!<<)o!'gM`s8W+L"97ij!!#7A!!!Q0
p](9o!.TM!!'gM`s6p!g"7Q9j!WW3"huNfWs8W-!qu?_E!'gJ`!!",!!!!!"s8W+L
!"XSbrr<<(s8Duu!$?^k!$D7@rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,
s8W-!n,NFgz!<<)o!'gM`s8W+L"97ijz!!",@p](9oz!.Y%Ks6p!gz"98E$huNfW
s8W-!qu?]s!'gL6z!!!!"s8W+L!!!!$rr<<(s8N'!z!'gM`rr<T0s8W-!huJ9,s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53qXs8W-!huJ9,s8W-!p](9o!!!",!<<)o!'gM`s8W+L"98,rz!!#7`p](9o
z!<<*!s7cQoz#QOi(huNfWs8W-!qu?]s!$D6Vz!!!!"s8W,7!!!!$rr<<(s8RTLz
!.Y%Krr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W-!p](9o!!!#W!<<)o
!'gM`s8W+L"98?#z!!%NKp](j*z!WW3"s8Duuz&-)\0huNfWs8W-!qu?]s!$D7!z
!!@`Ps8W,W!!!!$rr<<(s8Tk7z!<<*!rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!
huJ9,s8W-!qu?]s!!!&X!<<)o!'gM`s8W+L"98B$z!!*'!p])-2z"98E$s8Duuz+92B@
huNfWs8W-!rVuou!$D71z!!e#Ts8W,W!!!!$rr<<(s8V!Wz!WW3"rr<T0s8W-!huJ9,
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53qXs8W-!huJ9,s8W-!rVuou!!!,Z!<<)o!'gM`s8W+L"98B$z!!3-"
p])96z#QOi(s8N'!zJ,fQKhuNfWs8W-!rr<$!!$D79z!"XS\s8W,g!!!!$rr<<(s8VQg
z"98E$rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!huJ9,s8W-!s*t(L!!!Pf!<<)o
!'gM`s8W+L"98Djz!!E9$p])B9z+92B@s8Tk7zs8W-!huNfWs8W-!rr<$!!'gM_z
!'bu7s8W,g!!!!(rr<<(s8Vusz&-)\0rr<T0s8W-!huJ9,s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!
huJ9,s8W-!s1eU7!!!Pf!.Y%D!.Y%Ks8W+L"98Drz!"],0p])Cdz5QCc`s8V!W!!!!"
s8W-!huNfWs8W-!s*t(L!'gM`z!.TM"s8W,o!!!!(rr<<(s8W&uz+92B@rr<T0s8W-!
huJ9,s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53qXs8W-!n,Rt<s8W-!s82is!!%N,!<<)o!.Y%Ks8W,7"98E$
J,fQL!'gM`p])E*!!!!"s8W-!s8W&u!!!!(s8W-!huWlXs8W-!s1eU7!.Y%KhuE`W
!WRZPs8W,s!!!!0s*t@Ss8W,WzJ,fQKrW!K/s8W-!n,Rt<s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!
p],gDs8W-!s8Duu!!*&g!WW2p!.Y%Ks8W,W"98E$^]4?7!<<*!p])E2!!!!$s8W-!
s8W*!!!!!0s8W-!huWlXs8W-!s53kW!WW3"n,NFg"93lVs8W-!!!!!@s*tX[s8W,g
zs8W-!rW!K/s8W-!p],gDs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53qXs8W-!quHcss8W-!s8Duu!!3,h"98Dr
!.Y%Ks8W,g"98E$huE`W!WW3"p])E6!!!!(s8W-!s8W+L!!!!`s8W-!huj#Zs8W-!
s6p!g!WW3"p](9o#QMRMs8W-!J,fR6s*u3ks8W,o!!!!"s8W-!rr=/@s8W-!quHcs
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s7c]rs8W-!rW3'!s8W-!s8N'!!!E8r#QOi!!<<*!s8W,o&-)\0n,NFg
"98E$p])E8!!!!0s8W-!s8W,7!!!$!s8W-!n-B!ns8W-!s7cQo"98E$qu?]s&-(Q0
s8W-!^]4@!s1gl!s8W,o!!!!(s8W-!rr>:`s8W-!rW3'!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W&u!<<*!s8W-!s8W-!s8W-!s8W-!s6p!hs8W-!p])E9p](R!s8W-!
s8W-!!!%NKs8W-!s8W-!s8W-!s8V!WJ,fQKs6p!js8W-!s8W-!rW!3's8W-!s8W-!
p](Ers8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W+L"98E$
s8W-!s8W-!s8W-!s8W-!s82j-s8W-!p])E9rWF>Cs8W-!s8W-!^]=E7s8W-!s8W-!
s8W-!s8VQjs8W-!s8E!/s8W-!s8W-!s*u3ks8W-!s8W-!rr<T0s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!p])E9s8N&us8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8Tk6s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p])E9s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!qu@i=s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
rW#1_s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rr@QKs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s+(.Ls8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W*!5QCc`s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u+92B@s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u
&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,oz"98E$s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W,gz!<<*!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,W
z!'gM`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W+Lz!!3-"s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W+Lz!!*'!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W*!z!!#7`s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W&uz!!!9(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8Vusz!!!9(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!!!-$s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u
&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8Vioz!!!'"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!!!$!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!!!"Ks8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vioz!!!!`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio#QOi(^]4?Vs8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio&-)\0huE`fs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vio+92B@qu?^%s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s1eU:
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s53kZs8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vio5QCc`s6p!js8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`
s7cQrs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s82its8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u
&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8Vio5QCc`s8E!!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio
5QCc`s8Tk7s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk7J,fQKs8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk7J,fQKs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8Vio5QCc`s8Tk7J,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk7J,fQK
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk7J,fQKs8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vio5QCc`s8Tk7J,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8V!W
5QCc`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W&u&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8VQg5QCc`s1eU7&-)\0s8W+L
!!!Q0s8W-!s7cQo!WW3"s8W-!n,NFns8E9's8N3$n,NGQs8W,g!!!'"s8W&u&-),!
!!E9$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vio5QCc`s8VQg5QCc`rr<$!#QOi(s8W*!!!!-$s8W-!s6p!g!<<*!
s8W-!^]4?:s6p9ns8E'!huEaAs8W,7!!!"Ks8W&u&-(Pf!!3-"s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`
s8VQg5QCc`rVuou"98E$s8W&u!!!'"s8W-!s53kW!.Y%Ks8W-!J,fQLs54"Zs82ls
^]4?Vs8W+L!!!!`s8W&u&-'EF!!*'!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8VQg5QCc`^]4?7!'gM`
s8V!W!!!!0s8W-!qu?]s!!iQ(s8W,oz+5d/!s7cSC!!!!0s8Vio!!!!$s8W&u&,ZD-
!!",@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vio5QCc`s8VQg5QCc`^]4?7!$D7@s8RTL!!!!(s8W-!p](9o!!E9$
s8W,gz+5d/!s6p#;!!!!(s8VQg!!!!"s8W&u&,6,)!!!Q0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8VQg
5QCc`J,fQL!"],0s8N'!!!!!$s8W-!n,NFg!!3-"s8W,Wz&)[G;s6p"N!!!!(s8V!W
zs8W&u&+BQ!!!!9(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8VQg5QCc_z!!3-"s82iszs8W-!^]4?7!!%NK
s8W,7z"5j0/s6p"J!!!!(s8N'!z5QC]_&&8/F!!!'"s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8VQg5QCcY
z!!3-"s7cQozJ,fQKJ,fQL!!#7`s8W+Lz!T3s-s6p"B!!!!(s8Duuz+92<?%tFW[
!!!$!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vio5QCc`s8VQg5QCcQz!!*'!s6p!gz5QCc`J,fQL!!#7`s8W*!z!8mj,
s6p"2!!!!(s82isz&-)V/%tFW[!!!"Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8V!W5QCcAz!!#7`s53kW
z+92B?z!!!Q0s8Vusz!!!"Ks6p!g!!!!0s7cQoz#QOc'*WQ0?!!!!`s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio
5QCc`s8Tk75QCc!z!!#7`s1eU7z+92B=z!!!9(s8Vioz!!!"Ks6p!g!!!!0s6p!g
z"98?#*WQ0?!!!!`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk7J,fP!z!!",@s1eU7z&-)\-z!!!9(s8VQg
z!!!"Ks6p!g!!!!@s53kWz!WW-!$ig8-!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk7J,fP!!!!-%
!!!Q0s*t(L#64`(&-)\!z!!!'"s8V!Wz!!!"Ks6p!g!!!!`s1eU7!5JR7!<<#uz!!!!0
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vio5QCc`s8Tk7J,fNK!"],/!!!Q0rr<$0s8RTL&-)[f!!3-"huEcWs8Tk7
!WW28!!!"Ks6p!g"98E$s*t(Ms8VQg!.XtJ!!!9(s*t(Ss8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk7
s8W&u!$D7@!!!9(rVup?s8Tk7&-)[f!!E9$n,NIgs8Tk7"98DZ!!!"Ks6p!g#QOi(
rr<$(s8Vio!.XtJ!!!Q0s1eU>s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8RTMs8Vus!'gM`^]4W>rVup_
s8VQg&-)Z[!!iQ(qu?`ss8RTL#QOi!!!!"Ks6p!g#QOi(rVup/s8Vus!.XtJ!!#7`
s53k^s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vio5QCc`s8RTMs8Vio!WW3"p](R!rW!!!s8W&u&-)Y0!'gM`rr<%K
s8N'!+92B@!!!"Ks6p!g5QCc`qu?^]s8W+L!.XtJ!!*'!s7cQrs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`
s8N'$s8Vio"98E$p](Erqu?j!s8W*!+92?@!.Y%Ks*t)6s8Duu5QCc`!!!"Ks6p!g
J,fQKqu?_Hs8W,7!<<#u!!3-"s82its8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8E!#s8VQg#QOi(qu?ct
qu@!%s8W+L5QC``!<<*!s*t(ks8DuuJ,fQKJ,fS!s6p!gs8W-!qu?`ss8W,W!WW-!
!!E9$s8Duus8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8Vio5QCc`s82j!s8V!W+92B@rr<%Kqu@9-s8W-!s8W&u!WW3"
s53l!s8Duus8W-!^]4@as6p!hs8W-!p](?ps8W,s"98?#!!iQ(s8N'!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio
5QCc`s6p!js8Tk7+92B@s*t*!p](j)s8W-!s8Vus"98E$s53l!s82its8W-!huEb,
s6p!hs8W-!p](Ers8W,u#QOc'!"],0s8RTLs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s53k^s8V!W5QCc`
s*t*!p])E9s8W-!s8Vus#QOi(s6p"1s7cQrs8W-!n,NH<s6p!js8W-!n,O"!s8W-!
#QOc'!$D7@s8RTLs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s1eUFs8V!WJ,fQKs*t*!n,O"!s8W-!s8Vio
#QOi(s7cR9s6p!ns8W-!p](;Ds6p!ns8W-!huFl!s8W-!s8W&u!'gM`s8RTLs8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8Vio5QCc`s*t(ks8Tk7s8W-!s*t*!n,O"!s8W-!s8Vio&-)\0s82j-s7cR)s8W-!
qu?_Hs6p"!s8W-!huH"As8W-!s8W&u!'gM`s8RTLs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`n,NGQs8Tk7
s8W-!s1eVan,O"!s8W-!s8Vio+92B@s82j-s7cR)s8W-!qu?_Hs6p!ns8W-!huH"A
s8W-!s8W&u!.Y%Ks8Tk7s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`^]4@as8RTLs8W-!s53m,n,OR1s8W-!
s8Vio5QCc`s82j%s7cR9s8W-!rr<%Ks6p"!s8W-!huJ9,s8W-!s8W&u!<<*!s8V!W
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vio5QCc`J,fTLs8N'!s8W-!s53lAn,OR1s8W-!s8VQg5QCc`s82j!s6p"Q
s8W-!rr<%Ks6p"!s8W-!^]=E7s8W-!s8W&u!WW3"s8VQgs8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!!!'"s8E!!
s8W-!s6p"Qn,P]Qs8W-!s8V!WJ,fQKs8E!#s6p"Qs8W-!s*t*!s6p"1s8W-!^]FK8
s8W-!s8W&u!WW3"s8VQgs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!!!-$s8N'$s8W-!s6p"1n,OR1s8W-!s8Tk7
J,fQKs8N'$s53m,s8W-!s*t*!s6p"Qs8W-!!!*'!s8W-!s8W&u!WW3"s8V!WJ,fQK
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8Vioz!!!9(s8N'(s8W-!s6p"1n,OR1s8W-!s8Tk7J,fQKs8RTOs1eVas8W-!s*t*!
s6p"Qs8W-!!!*'!s8W-!s8W&u!WW3"s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!!!9(s8N'(s8W-!s6p"!
n,O"!s8W-!s8Tk7s8W-!s8RTOs1eVas8W-!s*t*!s6p"Qs8W-!!!3-"s8W-!s8W&u
"98E$s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8Vioz!!#7`s8N'(s8W-!s7cR)n,OR1s8W-!s8Tk8s8W-!s8RTO
s1eVas8W-!s*t*!s6p"Qs8W,u!!E9$s8W-!s8W&u"98E$s8V!WJ,fQKs8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!!%NK
s8E!'s8W-!s7cR)n,O"!s8W-!s8Tk8s8W-!s8RTOs*t*!s8W-!s*t*!s6p"Qs8W,u
!!iQ(s8W-!s8W&u#QOi(s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!!*'!s82j%s8W-!s82j-p](j)s8W-!
s8Tk8s8W-!s8Tk:s*t+Ls8W-!s*t*!s6p"Qs8W,u!!iQ(s8W-!s8W&u#QOi(s8V!W
J,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vioz!$D7@s82j-s8W-!s82j-p](R!s8W-!s8Tk8s8W-!s8RTOs1e[8s8W-!
s1eVas6p"Qs8W,u!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!'gM`s7cR)s8W-!
s82j-qu?j!s8W-!s8Tk8s8W-!s8RTOs1e[8s8W-!s1eVas6p"Qs8W,u!"],0s8W-!
s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8Vioz!.Y%Ks7cR)s8W-!s82j-qu?cts8W-!s8Tk8s8W-!
s8Tk:s1ea:s8W-!s1eVas6p"Qs8W,u!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio
z!.Y%Ks7cR)s8W-!s82j-qu?_Hs8W-!s8RTMs8W-!s8Tk:s1ea:s8W-!s53m,s6p"Q
s8W,u!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vioz!.Y%Ks7cR)s8W-!s82j-rVup_
s8W-!s8RTMs8W-!s8RTMs*t4Os8W-!s53m,s6p"Qs8W,u!"],0s8W-!s8W&u&-)\0
s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vioz!$D7@s6p!ns8W-!s82j-rVup's8W-!s8N'"s8W-!s8RTMs*t4O
s8W-!s53m,s6p"Qs8W,u!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio+92*9!"],0
s6p!gz!!!!0rVup!s8W-!s8N'!z!!!!"s*t4Os8W-!s53m,s6p"Qs8W,u!"],0s8W-!
s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8Vio5QCW]!"],0s6p!gz!!!!0rVuouJ,fQKs8N'!z!!!!"
s*t4Os8W-!s1eVas6p"Qs8W,u!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QC``
!!E9$s6p!gz!!!!0s*t(L!'gM`s8N'!z!!!!$s*t4Os8W-!s1eVas6p"Qs8W,s!"],0
s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCcQ!!3-"s6p!gz!!!!0s*t(L!!iQ(s8N'!
z!!!!$s*t4Os8W-!s1eVas6p"Qs8W,o!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio
5QCcQ!!*'!s6p!gz!!!!0s1eU7!!E9$s8N'!z!!!!$s*t4Os8W-!s53m,s6p"Qs8W,o
!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCcY!!%NKs6p!gz!!!!0s53kW!!!9(
s8N'!z!!!!$s*t4Os8W-!s53m,s6p"Qs8W,o!$D7@s8W-!s8W&u&-)\0s8V!WJ,fQK
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8Vio5QCc_!!#7`s6p!gz!!!!0s6p!g!!!'"s8N'!z!!!!$s*t4Os8W-!s53m,s6p"Q
s8W,o!$D7@s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`!!#7`s6p!gz!!!!@s7cQo
!!!$!s8N'!z!!!!$s*t4Os8W-!s53m,s6p"Qs8W,o!$D7@s8W-!s8W&u&-)\0s8V!W
J,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vio5QCc`J,g\ks6p!gz!!!!@s82is!!!!0s8N'!z!!!!$s*t4Os8W-!s53m,
s6p"Qs8W,o!$D7@s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`^]4oFs6p!gz!!!!`
s8Tk7!!!!(s8N'!z!!!!(s*t4Os8W-!s53m,s6p"Qs8W,o!$D7@s8W-!s8W&u&-)\0
s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vio5QCc`huF#^s6p!gz!!!"Ks8V!W!!!!$s8N'!z!!!!0s*t4Os8W-!
s53m,s6p"Qs8W,o!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`n,N^ns6p!g
z!!!$!s8VQg!!!!"s8N'!z!!!!@s*t4Os8W-!s53m,s6p"Qs8W,o!"],0s8W-!s8W&u
&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8Vio5QCc`p](R!s6p!js8W-!s8W-!s8W,WzJ,]KKs8W-!s8V]j
s*t4Os8W-!s1eVas6p"Qs8W,o!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`
p](R!s6p"1s8W-!s8W-!s8W,gz5Q:]as8W-!s8W-!s*t4Os8W-!s1eVas6p"Qs8W,o
!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`qu?j!s6p"1s8W-!s8W-!s8W,s
z5Q:]cs8W-!s8W-!s*t4Os8W-!s1eVas6p"Qs8W,s!"],0s8W-!s8W&u&-)\0s8V!W
J,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vio5QCc`rVurus6p"Qs8W-!s8W-!s8W-!rVuou+9)<Cs8W-!s8W-!s*t4O
s8W-!s1eVas6p"Qs8W,s!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`rr<'!
s6p"Qs8W-!s8W-!s8W-!s1eU7&,uV3s8W-!s8W-!s*t4Os8W-!s1eVas6p"Qs8W,u
!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`rr<%Ks6p"Qs8W-!s8W-!s8W-!
s53kW&,uV3s8W-!s8W-!s*t4Os8W-!s53m,s6p"Qs8W,u!"],0s8W-!s8W&u&-)\0
s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vio5QCc`s*t*!s6p"1s8W-!s8W-!s8W-!s8RTL&,uV3s8W-!s8W-!
s*t4Os8W-!s53m,s6p"Qs8W,u!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`
s*t*!s6p"!s8W-!s8W-!s8W-!s8V!W#QFc)s8W-!s8W-!s1ea:s8W-!s53m,s6p"Q
s8W,u!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s1eV!s6p"!s8W-!s8W-!
s8W-!s8VQg"93lPs8W-!s8W-!s1ea:s8W-!s1eVas6p"Qs8W,u!"],0s8W-!s8W&u
&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8Vio5QCc`s53l!s7cR)s8W-!s8W-!s8W-!s8Vus!WRZNs8W-!
s8W-!s1ea:s8W-!s1eVas6p"Qs8W,u!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio
5QCc`s53l!s7cR)s8W-!s8W-!s8W-!s8W&u!WTq9s8W-!s8W-!s*t4Os8W-!s1eVa
s6p"Qs8W,u!"],0s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s6p"!s82j-s8W-!
s8W-!s8W-!s8W&u!WTq9s8W-!s8W-!s*t.Ms8W-!s1eVas6p"Qs8W,u!!iQ(s8W-!
s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s6p"!s8E!'s8W-!s8W-!s8W-!s8W*!!WTq9
s8W-!s8W-!s*t.Ms8W-!s*t*!s6p"Qs8W,u!!E9$s8W-!s8W&u&-)\0s8V!WJ,fQK
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8Vio5QCc`s7cR)s8N'(s8W-!s8W-!s8W-!s8W+L!WTq9s8W-!s8W-!s1eX7s8W-!
s*t*!s6p"Qs8W,u!!E9$s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s7cR!s8N'(
s8W-!s8W-!s8W-!s8W+L!WTq8s8W-!s8W-!s1eVas8W-!s*t*!s6p"Qs8W,u!!3-"
s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s82j!s8N'(s8W-!s8W-!s8W-!s8W,7
!WTq8J,fQKs8W-!s1eVas8W-!s*t*!s6p"Qs8W-!!!3-"s8W-!s8W&u&-)\0s8V!W
J,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vio5QCc`s82j!s8N'$s8W-!s8W-!s8W-!s8W,7!WTq85QCc`s8W-!s53m,
s8W-!s*t*!s6p"Qs8W-!!!*'!s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8E!#
s8N'"s8W-!s8W-!s8W-!s8W,7!WTq85QCc`s8W-!s53m,s8W-!s*t*!s6p"Qs8W-!
J-#]Ms8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8E!#s8E!!s8W-!s8W-!s8W-!
s8W,7!WV'X5QCc`s8W-!s6p#<s8W-!rr<%Ks6p"Qs8W-!^]=E7s8W-!s8W&u&-)\0
s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vio5QCc`s8N'$s8N'!s8W-!s8W-!s8W-!s8W,7!WVWh+92B@s8W-!
s7cRYs8W-!rVuqJs6p"Qs8W-!^]8las8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`
s8RTMs8RTLs8W-!s8W-!s8W-!s8W,7!WVWh+92B@s8W-!s7cR9s8W-!qu?_Hs6p"Q
s8W-!huH"As8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8RTLJ,d:aJ,fQKs8W-!
s8W-!s8W,7!WVop&-)\0s8W-!s7cR)s8W-!p](;Ds6p"Qs8W-!^]6V!s8W-!s8W&u
&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk7J,eF,5QCc`s8W-!s8W-!s8W,7!WVop#QOi(
s8W-!s7cR)s8W-!p](;Ds6p"Qs8W-!huFl!s8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio
5QCc`s8Tk7J,eF,+92B@s8W-!s8W-!s8W+L!WVop"98E$s8W-!s7cR!s8W-!n,NH<
s6p"Qs8W-!huF;fs8W-!s8W&u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk7J,eF,+92B@
s8P=`qud!!s8W*!!WVop!WW3"s8W-!s82j!s8W-!huEb,s6p"Qs8W-!n,N^ns8W,o
"98?#&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8Tk75QAM!&-)\0s8F,?p]:Eps8W&u!WW&t
!<<*!s8Tq8s8E!!s8W-!^]4@as6p"Qs8W-!p](Ers8W,o!<<#u&-)\0s8V!WJ,fQK
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8Vio5QCc`s8V!W5QBXA"98E$s83-%n,WLgs8W&u"98?#!.Y%Ks8N*!s8Duus8W-!
J,fS!s6p"Qs8W-!p](?ps8W,7!<<#u&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8VQg+92*9
!WW3"s1em>n,OR1s8Vus"98B$!'gM`s82kHs8DuuJ,fQK!!!"Ks6p"Qs8W-!p](<o
s8W+L!.XtJ&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8VQg+92*9!<<*!s*t4On,O"!s8Vio
#QOf(!$D7@s6p#<s8N'!5QCc_!!!"Ks6p"Qs8W-!qu?_Hs8W+L!.XtJ&-)\0s8V!W
J,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8Vio5QCc`s8VQg&-)P-!.Y%Krr<*"huF#^s8VQg&-)Z[!"],0s1eV!s8N'!
+92B=!!!"Ks6p"Qs8W-!qu?^]s8W*!!.XtJ&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8VQg
&-)V/!!iQ(huEcWhuEaAs8RTL&-)[F!!*'!rVup?s8Tk7"98DZ!!!"Ks6p"Qs8W-!
rr<$$s8V!W!.XtJ&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8VQg&-)Y0!!E9$^]4B7n,NG1
s8N'!+92B!!!%NKp](:9s8Tk7!WW28!!!"Ks6p"Qs8W-!s*t(Ms8RTL!.XtJ&-)\0
s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8Vio5QCc`s8Vio#QOgS!!3-"!!!'"n,NFns82is+92B1!!",@huEa!
s8V!W!.Y"K!!!"Ks6p"Qs8W-!s1eU7s8Duu!<<#u&-)\0s8V!WJ,fQKs8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`
s8Vus#QOh>z!!!-$n,NFgz5QCcYz!!!!`s8VQgz!!!"Ks6p"Qs8W-!s53kWz!WW-!
&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8Vio5QCc`s8Vus#QOh^z!!!9(n,NFgzJ,fQHz!!!"Ks8Vioz
!$D8ks6p"Qs8W-!s6p!gz"98?#&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8W&u#QOhnz!!!Q0
p](9ozs8W,uz!!!$!s8Vusz!+5eVs6p"Qs8W-!s6p!gz#QOc'&-)\0s8V!WJ,fQK
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8Vio5QCc`s8W*!"98Drz!!",@rVuou!!!!"s8W-!z!!!'"s8W&uz!T3s-s6p"Qs8W-!
s82isz&-)V/&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8W*!!WW2tz!!#7`s*t(L!!!!$s8W-!
J,fQL!!!-$s8W*!z"5j0/s6p"Qs8W-!s8Duuz5QC]_&-)\0s8V!WJ,fQKs8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`
s8W*!!WW3!z!!#7`s1eU7!!!!(s8W-!^]4?7!!!9(s8W+Lz"5j0/s6p"Qs8W-!s8Duu
z5QC]_&-)\0s8V!WJ,fQKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8Vio5QCc`s8W*!"98E$J,fQL!!3-"s6p!g!!!!@s8W-!
huE`W!!",@s8W,Wz&)[G;s6p"Qs8W-!s8RTL!!!!$s8W&u&-)\0s8V!Ws8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vio
5QCc`s8W+L"98E$^]4?7!!iQ(s7cQo!!!!@s8W-!p](9o!!%NKs8W,gz+5d/!s6p#<
s8W-!s8V!W!!!!(s8W&u&-)\0s8V!Ws8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vus5QCc`s8W,7#QOi(huE`W!"],0
s82is!!!!`s8W-!qu?]s!!*'!s8W,oz5O\[Qs6p$gs8W-!s8VQg!!!!0s8W&u+92B@
s8VQgs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W&uJ,fQKs8W,7&-)\0rr<$!!'gM`s8V!W!!!9(s8W-!s1eU7!"],0
s8W-!J,fQOs7c]rs8E'!s8W-!s8W*!!!!'"s8W*!5QCc`s8Vuss8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W+Ls8W-!
s8W,W+92B@s*t(L!WW3"s8Vio!!",@s8W-!s6p!g!'gM`s8W-!^]4?Fs83-%s8N3$
s8W-!s8W,7!!!-$s8W,7J,fQKs8W'!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W+Ms8W-!s8W,g+92B@s1eU7#QOi(
s8Vus!!#7`s8W-!s7cQo!.Y%Ks8W-!huEa!s8F,?s8RlSs8W-!s8W,W!!!9(s8W,W
s8W-!s8W*$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vus!!",@s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8VQg!!!9(s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8V!W!!!-$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Tk7!!!$!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8RTL!!!$!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8N'!!!!"Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Duu
!!!!`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s82is!!!!`s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s7cQo!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s6p!g!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s6p!g!!!!@s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s6p!g!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53kW!!!!0s8W-!s8W&u!.Y%Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!
s8W&u!.Y%Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8VQg!"],0s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53kW!!!!0s8W-!s8V!W!!E9$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0
s8W-!s8RTL!!%NKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8N'!!!%NKs8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s7cQo!!",@s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW
!!!!0s8W-!s6p!g!!!Q0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s53kW!!!9(
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s53kW!!!9(s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53kW!!!!0s8W-!s*t(L!!!'"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s*t(L
!!!$!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s*t(L!!!$!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53kW!!!!0s8W-!rr<$!!!!$!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!
rr<$!!!!"Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!rr<$!z!!!Q0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!
rVuou!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!huE`Wz!!!!(
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!@s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!J,fQLzz5QCc`s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW
!!!!0s8W-!p](9o!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
zzz+92B@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!@s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,ozzz!WW3"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0
s8W-!p](9o!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W+Lzzz!!iQ(
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!@s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W+Lzzz!!E9$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!
p](9o!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Vuszzz!!",@s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8Viozzz!!!Q0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o
!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8VQgzzz!!!'"s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8V!Wzzz!!!'"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!0
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Tk7zzz!!!!@s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53kW!!!!0s8W-!p](9o!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8RTLzzz!!!!$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!0s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N'!zzz!!!!"s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53kW!!!!0s8W-!p](9o!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8Duuzzzzs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!0s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s82iszzzz5QCc`s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW
!!!!0s8W-!p](9o!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s7cQo
zzzz+92B@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!@s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s7cQozzzz#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0
s8W-!p](9o!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s7cQozzzz
"98E$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!p](9o!!!!@s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53kWzzzz!WW3"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!
qu?]s!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kWzzzz!.Y%K
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53kWzzzz!.Y%Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!rVuou
!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s1eU7zzzz!"],0s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53kW!!!!0s8W-!rr<$!!!!"Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s1eU7zzzz!!iQ(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!rr<$!!!!"K
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s1eU7zzzz!!E9$s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53kW!!!!0s8W-!rr<$!!!!"Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s1eU7zzzz!!3-"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s*t(L!!!$!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s1eU7zzzz!!*'!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53kW!!!!0s8W-!s*t(L!!!'"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s*t(Lzzzz!!%NKs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s1eU7!!!'"s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s*t(Lzzzz!!#7`s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW
!!!!0s8W-!s53kW!!!-$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s*t(L
zzzz!!",@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s6p!g!!!9(s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s*t(Lzzzz!!!Q0s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0
s8W-!s7cQo!!!Q0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s*t(Lzzzz
!!!Q0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s82is!!",@s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!rr<$!zzzz!!!Q0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!
s8Duu!!#7`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuouzzzz!!!9(
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8N'!!!*'!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!rVuouzzzz!!!-$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8V!W
!!iQ(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuouzzzz!!!$!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53kW!!!!0s8W-!s8VQg!"],0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!rVuouzzzz!!!$!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8Vus!'gM`
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuouzzzz!!!$!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53kW!!!!0s8W-!s8W,7"98E$s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!rVuouzzzz!!!"Ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuouzzzz!!!"Ks8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
rVuouzzzz!!!!`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuouzzzz!!!!@s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW
!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou
zzzz!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!rVuouzzzz!!!!@s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuouzzzz
!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!rVuouzzzz!!!!(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuouzzzz!!!!"
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!rVuouzzzz!!!!"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!$s8W-!s8RTL
z!!!!"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!rVuou!!!!(s8W-!s8W+Lz!!!!"s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW
!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou
!!!!0s8W-!s8W+Lz!!!!"s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!@s8W-!s8W,oz!!!!"s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!rVuou!!!!0s8W-!s8W,szzs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!
J,fQLzs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!J,fQLzJ,fQKs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW
!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou
!!!!`s8W-!s8W-!p](9oz5QCc`s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!qu?]szJ,fQK
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!rVuou!!!!`s8W-!s8W-!rVuouz+92B@s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!
s8W-!rr<$!z+92B@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!s*t(Lz+92B@s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
rVuou!!!!`s8W-!s8W-!s1eU7z&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!s53kW
z&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!s6p!gz&-)\0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`
s8W-!s8W-!s7cQoz&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!s7cQoz&-)\0s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!rVuou!!!!`s8W-!s8W-!s82isz&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!
s8Duuz&-)\0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!s8N'!z&-)\0s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW
!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou
!!!!`s8W-!s8W-!s8N'!z#QOi(s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!s8N'!z"98E$
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s53kW!!!!0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!rVuou!!!!`s8W-!s8W-!s8RTLz"98E$s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s53kW!!!!0s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!
s8W-!s8RTLz"98E$s82is5QCc`s8W&u!!!Q0s8W-!s8W-!s8W&u!!!!"s8W-!s8W-!
s8W-!s8W-!s8W-!s8W&uzJ,fQKs8W-!s8W-!s8W-!s8W*!!!!!"s8W-!s8W-!s8W-!
s8W-!s8W-!huE`W&-)\0s53kW!!!!0s8W-!s8W&u!.Y%Ks8W-!s8W-!s8W-!J,fQL
+92B@s8W,W!'gM`s8W-!rVuou!!!!`s8W-!s8W-!s8Tk7z!WW3"s1eU7"98E$s8V!W
!!!$!s8W-!s8W-!s8V!Wz"98E$s8W-!s8W-!s8W-!s8W-!s8Tk7z"98E$s8W-!s8W-!
s8W-!s8V!Wz&-)\0s8W-!s8W-!s8W-!s8W,gz!.Y%Ks53kW!!!!0s8W-!s8V!W!!iQ(
s8W-!s8W-!s8W,oz!WW3"s8Vus!!*'!s8W-!rVuou!!!!`s8W-!s8W-!s8V!Wz!WW3"
rr<$!"98E$s8RTL!!!!`s8W-!s8W-!s8N'!z!$D7@s8W-!s8W-!s8W-!s8W-!s8N'!
z!$D7@s8W-!s8W-!s8W-!s8Duuz!WW3"s8W-!s8W-!s8W-!s8W,Wz!$D7@s53kW!!!!0
s8W-!s8RTL!!3-"s8W-!s8W-!s8W*!z!.Y%Ks8VQg!!%NKs8W-!rVuou!!!!`s8W-!
s8W-!s8V!Wz!WW3"rVuou!WW3"s8N'!!!!!@s8W-!s8W-!s8Duuz!"],0s8W-!s8W-!
s8W-!s8W-!s8Duuz!"],0s8W-!s8W-!s8W-!s82isz!<<*!s8W-!s8W-!s8W-!s8W,7
z!"],0s53kW!!!!0s8W-!s8N'!!!*'!s8W-!s8W-!s8W&uz!'gM`s8V!W!!%NKs8W-!
rVuou!!!!`s8W-!s8W-!s8V!Wz!WW3"p](9o!'gM`s7cQo!!!!(s8W-!s8W-!s1eU7
z!!3-"s8W-!s8W-!s8W-!s8W-!s1eU7z!!E9$s8W-!s8W-!s8W-!s53kWz!!E9$s8W-!
s8W-!s8W-!s8Vioz!!*'!s53kW!!!!0s8W-!s7cQo!!#7`s8W-!s8W-!s8Vioz!!E9$
s8Tk7!!!Q0s8W-!rVuou!!!!`s8W-!s8W-!s8V!Wz!WW3"n,NFg!$D7@s*t(Lzs8W-!
s8W-!n,NFgz!!!9(s8W-!s8W-!s8W-!s8W-!p](9oz!!!9(s8W-!s8W-!s8W-!p](9o
z!!#7`s8W-!s8W-!s8W-!s8RTLz!!!Q0s53kW!!!!0s8W-!s6p!g!!!Q0s8W-!s8W-!
s8N'!z!!#7`s8Duu!!!'"s8W-!rVuou!!!!`s8W-!s8W-!s8V!Wz!WW3"huE`W!"],0
s*t(Lzs8W-!s8W-!n,NFgz!!!9(s8W-!s8W-!s8W-!s8W-!n,NFgz!!!-$s8W-!s8W-!
s8W-!p](9oz!!#7`s8W-!s8W-!s8W-!s8N'!z!!!Q0s53kW!!!!0s8W-!s6p!g!!!Q0
s8W-!s8W-!s8Duuz!!",@s8Duu!!!'"s8W-!rVuou!!!!`s8W-!s8W-!s8V!Wz!<<*!
^]4?7!!iQ(qu?]sz+92B@s8W-!zz!!!$!s8W-!s8W-!s8W-!s8W-!zz!!!$!s8W-!
s8W-!s8W-!J,fQLz!!!9(s8W-!s8W-!s8W-!s82isz!!!9(s53kW!!!!0s8W-!s53kW
!!!9(s8W-!s8W-!s6p!gz!!!9(s82is!!!'"s8W-!rVuou!!!!`s8W-!s8W-!s8VQg
z!<<*!^]4?7!!E9$n,NFgz&-)\0s8W,uzz!!!!`s8W-!s8W-!s8W-!s8W,uzz!!!!0
s8W-!s8W-!s8W-!zz!!!'"s8W-!s8W-!s8W-!s53kWz!!!$!s53kW!!!!0s8W-!s*t(L
!!!'"s8W-!s8W-!s1eU7z!!!-$s82is!!!$!s8W-!rVuou!!!!`s8W-!s8W-!s8VQg
z!<<*!J,fQL!!3-"huE`Wz#QOi(s8W,gzz!!!!$s8W-!s8W-!s8W-!s8W,ozz!!!!$
s8W-!s8W-!s8W,ozz!!!!`s8W-!s8W-!s8W-!s*t(Lz!!!!`s53kW!!!!0s8W-!s*t(L
!!!'"s8W-!s8W-!rr<$!z!!!"Ks7cQo!!!"Ks8W-!rVuou!!!!`s8W-!s8W-!s8VQg
z!<<*!J,fQL!!3-"^]4?7z"98E$s8W,gzz!!!!"s8W-!s8W-!s8W-!s8W,gzz!!!!"
s8W-!s8W-!s8W,ozz!!!!`s8W-!s8W-!s8W-!rr<$!z!!!!@s53kW!!!!0s8W-!s*t(L
!!!'"s8W-!s8W-!rVuouz!!!!`s6p!g!!!!`s8W-!rVuou!!!!`s8W-!s8W-!s8VQg
z!<<*!J,fQL!!3-"zz!WW3"s8W*!zzzs8W-!s8W-!s8W-!s8W*!zzz5QCc`s8W-!
s8W+Lzz!!!!$s8W-!s8W-!s8W-!qu?]sz!!!!0s53kW!!!!0s8W-!s*t(L!!!$!s8W-!
s8W-!n,NFgz!!!!@s6p!g!!!!`s8W-!rVuou!!!!`s8W-!s8W-!s8VQgz!<<)uz!!%NH
zz!<<*!s8Viozzz5QCc`s8W-!s8W-!s8Vuszzz&-)\0s8W-!s8Vuszz!!!!"s8W-!
s8W-!s8W-!p](9oz!!!!"s53kW!!!!0s8W-!rr<$!!!!$!s8W-!s8W-!huE`Wz!!!!(
s53kW!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8VQgz!<<)uz!!%NDzz!<<*!s8VQg
zzz+92B@s8W-!s8W-!s8Viozzz"98E$s8W-!s8Viozzz5QCc`s8W-!s8W-!^]4?7
zzs53kW!!!!0s8W-!rr<$!!!!$!s8W-!s8W-!J,fQLz!!!!$s53kW!!!!@s8W-!rVuou
!!!!`s8W-!s8W-!s8Vusz!<<)uz!!%NDzz!<<*!s8VQgzzz&-)\0s8W-!s8W-!s8VQg
zzz!WW3"s8W-!s8VQgzzz5QCc`s8W-!s8W-!^]4?7zzs53kW!!!!0s8W-!rr<$!!!!$!
s8W-!s8W-!zz!!!!"s53kW!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!<<)uz
!!%N,zz!<<*!s8Tk7zzz!WW3"s8W-!s8W-!s8RTLzzz!<<*!s8W-!s8Tk7zzz&-)\0
s8W-!s8W-!zzz5MuMA!!!!0s8W-!rr<$!!!!$!s8W-!s8W,uzzzs53kW!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8Vioz!<<)uz!!%Mazz!.Y%Ks8N'!zzz!.Y%Ks8W-!s8W-!
s8Duuzzz!$D7@s8W-!s8RTLzzz#QOi(s8W-!s8W,szzz+5d,!!!!!0s8W-!rVuou
!!!"Ks8W-!s8W,gzzzJ%u$a!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!.Y%J
z!!%Mazz!'gM`s8Duuzzz!'gM`s8W-!s8W-!s82iszzz!"],0s8W-!s8N'!zzz#QOi(
s8W-!s8W,ozzz+5d,!!!!!0s8W-!qu?]s!!!"Ks8W-!s8W,gzzz5C`_6!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_z!!%M!zz!'gM`s82iszzz!"],0s8W-!s8W-!
s7cQozzz!!iQ(s8W-!s8Duuzzz"98E$s8W-!s8W,gzzz&)[Ef!!!!0s8W-!rVuou
!!!"Ks8W-!s8W,Wzzz++O=k!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_
z!!%HJzz!'gM`s7cQozzz!!E9$s8W-!s8W-!s6p!gzzz!!E9$s8W-!s7cQozzz!.Y%K
s8W-!s8W,7zzz"5j.Z!!!!0s8W-!rVuou!!!"Ks8W-!s8W+Lzzz%tFW[!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_z!!%BHzz!'gM`s53kWzzz!!3-"s8W-!s8W-!
s*t(Lzzz!!3-"s8W-!s53kWzzz!'gM`s8W-!s8W+Lzzz!T3qX!!!!0s8W-!rVuou
!!!"Ks8W-!s8W&uzzz#CldS!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_
z!!%BHzz!'gM`s1eU7zzz!!3-"s8W-!s8W-!s*t(Lzzz!!*'!s8W-!s53kWzzz!$D7@
s8W-!s8W*!zzz!T3qX!!!!0s8W-!rVuou!!!"Ks8W-!s8Vuszzz"+U@O!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_z!!%BHzz!'gM`s*t(Lzzz!!*'!s8W-!s8W-!
rr<$!zzz!!%NKs8W-!s1eU7zzz!"],0s8W-!s8W&uzzz!+5d,!!!!0s8W-!rVuou
!!!"Ks8W-!s8Viozzz!It.M!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_
z!!%6Dzz!'gM`rr<$!zzz!!#7`s8W-!s8W-!qu?]szzz!!#7`s8W-!s*t(Lzzz!!iQ(
s8W-!s8Vuszzz!8mhW!!!!0s8W-!rVuou!!!"Ks8W-!s8VQgzzz!It.M!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_z!!$s<zz!'gM`rVuouzzz!!",@s8W-!s8W-!
p](9ozzz!!",@s8W-!rr<$!zzz!!E9$s8W-!s8Viozzz!+5d,!!!!0s8W-!rVuou
!!!"Ks8W-!s8V!Wzzz!5JR7!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_
z!!$C,zz!'gM`qu?]szzz!!",@s8W-!s8W-!p](9ozzz!!!Q0s8W-!rVuouzzz!!3-"
s8W-!s8VQgzzz!$D7A!!!!0s8W-!rVuou!!!"Ks8W-!s8Tk7zzz!.Y%L!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_z!!$C,zz!'gM`p](9ozzz!!!Q0s8W-!s8W-!
n,NFgzzz!!!9(s8W-!qu?]szzz!!*'!s8W-!s8V!Wzzzz!!!!0s8W-!rVuou!!!"K
s8W-!s8RTLzzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_z!!#7azz!'gM`
n,NFgzzz!!!-$s8W-!s8W-!^]4?7zzz!!!-$s8W-!huE`Wzzz!!%NKs8W-!s8Tk7
zzzz!!!!0s8W-!rVuou!!!"Ks8W-!s8N'!zzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8Vioz!'gM_z!!#7azz!'gM`huE`Wzzz!!!-$s8W-!s8W-!^]4?7zzz!!!'"s8W-!
^]4?7zzz!!#7`s8W-!s8RTLzzzz!!!!0s8W-!rVuou!!!"Ks8W-!s8Duuzzzz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_z!!#7azz!'gM`^]4?7zzz!!!'"s8W-!
s8W-!J,fQLzzz!!!$!s8W-!J,fQLzzz!!",@s8W-!s8N'!zzzz!!!!0s8W-!rVuou
!!!"Ks8W-!s82iszzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!'gM_zzzz
!<<*!J,fQLzzz!!!$!s8W-!s8W,uzzzz!!!"Ks8W-!zzzz!!!Q0s8W-!s8N'!zzz
z!!!!0s8W-!rVuou!!!"Ks8W-!s82iszzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8Vioz!'gM_zzzz!<<*!zzzz!!!!`s8W-!s8W,szzzz!!!!`s8W-!zzzz!!!9(s8W-!
s8Duuzzzz!!!!0s8W-!rVuou!!!"Ks8W-!s7cQozzzz!!!!@s8W-!rVuou!!!!`s8W-!
s8W-!s8Vioz!'gM_zzzz!<<)uzzzz!!!!`s8W-!s8W,szzzz!!!!@s8W-!zzzz!!!9(
s8W-!s82iszzzz!!!!0s8W-!rVuou!!!"Ks8W-!s7cQozzzz!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8Vioz!'gM_zzzz!<<)szzzz!!!!@s8W-!s8W,ozzzz!!!!0s8W,uz
zzz!!!9(s8W-!s7cQozzzz!!!!0s8W-!rVuou!!!"Ks8W-!s6p!gzzzz!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8Vioz!<<)uzzzz!<<)ozzzz!!!!(s8W-!s8W,Wzzzz!!!!0
s8W,szzzz!!!'"s8W-!s6p!gzzzz!!!!0s8W-!rVuou!!!"Ks8W-!s6p!gzzzz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!<<)uzzzz!<<)ozzzz!!!!$s8W-!s8W,7
zzzz!!!!@s8W,gzzzz!!!$!s8W-!s6p!gzzzz!!!!0s8W-!rVuou!!!"Ks8W-!s53kW
zzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!<<)uzzzz!<<)gzzzz!!!!$s8W-!
s8W,7zzzz!!!!0s8W,gzzzz!!!$!s8W-!s6p!gzzzz!!!!0s8W-!rVuou!!!"Ks8W-!
s1eU7zzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Vioz!<<)uzzzz!WW2Xzzzz!!!!$
s8W-!s8W+Lzzzz!!!!(s8W,gzzzz!!!!`s8W-!s1eU7zzzz!!!!0s8W-!rVuou!!!"K
s8W-!s*t(Lzzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8VQgz!<<)uzzzz!WW28
zzzz!!!!"s8W-!s8W+Lzzzz!!!!(s8W,Wzzzz!!!!@s8W-!s1eU7zzzz!!!!0s8W-!
rVuou!!!"Ks8W-!s*t(Lzzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8VQgz!<<)u
zzzz"98COzzzzzs8W-!s8W*!zzzz!!!!(s8W,7zzzz!!!!@s8W-!s1eU7zzzz!!!!0
s8W-!rVuou!!!"Ks8W-!rr<$!zzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8VQg
z!<<)uzzzz#QOf(zzzzzJ,fQKs8W&uzzzz!!!!(s8W+Lzzzz!!!!@s8W-!s*t(Lz
zzz!!!!0s8W-!rVuou!!!"Ks8W-!rVuouzzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8V!Wz!<<)uzzzz"98B$zzzzz5QCc`s8W&uzzzz!!!!(s8W+Lzzzz!!!!0s8W-!rr<$!
zzzz!!!!0s8W-!rVuou!!!"Ks8W-!qu?]szzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8V!Wz!<<)uzzzz#QOc'zzzzz5QCc`s8Vuszzzz!!!!(s8W*!zzzz!!!!(s8W-!rr<$!
zzzz!!!!0s8W-!rVuou!!!"Ks8W-!qu?]szzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8V!Wz!<<)uzzzz&-)P-zzzzz+92B@s8Viozzzz!!!!(s8W&uzzzz!!!!$s8W-!rVuou
zzzz!!!!0s8W-!rVuou!!!"Ks8W-!qu?]szzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8V!Wz!WW3!zzzz+926=zzzzz&-)\0s8VQgzzzz!!!!(s8W&uzzzz!!!!$s8W-!qu?]s
zzzz!!!!0s8W-!rVuou!!!"Ks8W-!p](9ozzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8V!Wz!WW3!zz!!!"K^]4?75QC3Qzzs8W,Wzz+92B@s8Vioz!!!!(s8W*!z!!!!(
s8W&uz!!!!"s8W&uz!!!!"s8W-!p](9oz!!%NKrVuouz!!!!0s8W-!rVuou!!!"K
s8W-!p](9oz!!3-"qu?]sz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8V!Wz!WW3!z
z!!!$!^]4?7J,f!<z!!!!"s8W,gzz#QOi(s8V!Wz!!!!0s8W+Lz!!!!(s8Vusz!!!!"
s8W*!z!!!!"s8W-!n,NFgz!!*'!rr<$!z!!!!0s8W-!rVuou!!!"Ks8W-!n,NFgz
!!E9$rVuouz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8Tk7z!WW3!zz!!!Q0s*t(L
s8VQgz!!!!@s8W,uzz#QOi(s8V!Wz!!!!`s8W,oz!!!!(s8Vioz!!!!@s8W,gz!!!!"
s8W-!n,NFgz!$D7@s6p!gz!!!!0s8W-!rVuou!!!"Ks8W-!huE`Wz!.Y%Ks1eU7z
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8RTLz!WW3!zz!!*'!s82j%s8V!Wz!!!"K
s8W-!huE`Wz#QOi(s8Tk7z!!!$!s8W,uz!!!!(s8Vioz!!!!`s8W,ozzs8W-!n,NFg
z!'gM`s7cQoz!!!!0s8W-!rVuou!!!"Ks8W-!huE`Wz!WW3"s7cQoz!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8RTLz"98E#zz!"],0s8W-!s8V!Wz!!!9(s8W-!n,NFg
z"98E$s8Tk7z!!!Q0s8W-!n,NFg!!!!0s8VQgz!!!-$s8W-!J,fQLzs8W-!n,NFg
z"98E$s8RTLz!!!!0s8W-!rVuou!!!"Ks8W-!^]4?7z"98E$s8Duuz!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8N'!z"98E#zz!"],0s8W-!s8Tk7z!!!Q0s8W-!p](9o
z!WW3"s8RTLz!!",@s8W-!p](9o!!!!@s8VQgz!!!9(s8W-!^]4?7zJ,fQKhuE`W
z#QOi(s8Tk7z!!!!0s8W-!rVuou!!!"Ks8W-!^]4?7z#QOi(s8N'!z!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8N'!z"98E#zz!$D7@s8W-!s8Tk7z!!#7`s8W-!rVuou
z!<<*!s8N'!z!!%NKs8W-!qu?]s!!!!0s8VQgz!!",@s8W-!n,NFgz5QCc`^]4?7
z+92B@s8VQgz!!!!0s8W-!rVuou!!!"Ks8W-!^]4?7z5QCc`s8Tk7z!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8N'!z"98E#zz!<<*!s8W-!s8Tk7z!!3-"s8W-!s1eU7
z!<<*!s8N'!z!!*'!s8W-!rVuou!!!!0s8Tk7z!!*'!s8W-!p](9oz5QCc`^]4?7
zs8W-!s8Vusz!!!!0s8W-!rVuou!!!"Ks8W-!J,fQLzs8W-!s8Vioz!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8Duuz"98E#zz"98E$s8W-!s8N'!z!!E9$s8W-!s53kW
z!<<*!s8Duuz!!E9$s8W-!s1eU7!!!!`s8V!Wz!!3-"s8W-!rr<$!z+92B@J,fQL
!!!!"s8W-!s8W&uz!!!!0s8W-!rVuou!!!"Ks8W-!J,fQL!!!!"s8W-!s8Vusz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8Duuz#QOi'zz#QOi(s8W-!s8N'!z!!E9$s8W-!
s6p!gz!<<*!s8Duuz!!E9$s8W-!s1eU7!!!!`s8Tk7z!!E9$s8W-!rr<$!z+92B@
J,fQL!!!!$s8W-!s8W*!z!!!!0s8W-!rVuou!!!"Ks8W-!z!!!!$s8W-!s8W&uz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s82isz&-)\/zz&-)\0s8W-!s8N'!z!"],0s8W-!
s82isz!.Y%Ks8Duuz!$D7@s8W-!s7cQo!!!!`s8RTLz!!iQ(s8W-!s1eU7z+92B@
J,fQL!!!!(s8W-!s8W+Lz!!!!0s8W-!rVuou!!!"Ks8W,uz!!!!0s8W-!s8W*!z!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s7cQoz&-)\/zz+92B@s8W-!s8Duuz!$D7@s8W-!
s8Duuz!.Y%Ks82isz!'gM`s8W-!s8Duu!!!"Ks8RTLz!$D7@s8W-!s53kWz+92B@
z!!!!0s8W-!s8W,7z!!!!0s8W-!rVuou!!!"Ks8W,uz!!!!@s8W-!s8W+Lz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s6p!gz&-)\/zz5QCc`s8W-!s82isz!'gM`s8W-!
s8N'!z!'gM`s82isz!<<*!s8W-!s8Tk7!!!$!s8N'!z!$D7@s8W-!s6p!gz&-)\/
z!!!!@s8W-!s8W,Wz!!!!0s8W-!rVuou!!!"Ks8W,sz!!!!`s8W-!s8W,7z!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s53kWz&-)\/zzJ,fQKs8W-!s7cQoz!'gM`s8W-!
s8RTLz!'gM`s7cQoz!WW3"s8W-!s8V!W!!!'"s8Duuz!$D7@s8W-!s6p!gz&-)\0
z!!!!`s8W-!s8W,gz!!!!0s8W-!rVuou!!!"Ks8W,sz!!!"Ks8W-!s8W,Wz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s1eU7z+92B?zzs8W-!s8W-!s7cQoz!<<*!s8W-!
s8Tk7z!'gM`s6p!gz"98E$s8W-!s8VQg!!!-$s82isz!.Y%Ks8W-!s82isz#QOi'
z!!!"Ks8W-!s8W,oz!!!!0s8W-!rVuou!!!"Ks8W,sz!!!$!s8W-!s8W,gz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s*t(Lz+92B?z!!!!"s8W-!s8W-!s7cQoz!WW3"s8W-!
s8V!Wz!"],0s6p!gz"98E$s8W-!s8Vio!!!9(s82isz!<<*!s8W-!s8Duuz"98E!
z!!!$!s8W-!s8W,sz!!!!0s8W-!rVuou!!!"Ks8W,sz!!!$!s8W-!s8W,oz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!rr<$!z+92B?z!!!!$s8W-!s8W-!s7cQoz"98E$s8W-!
s8VQgz!"],0s53kWz#QOi(s8W-!s8Vus!!!Q0s82isz!WW3"s8W-!s8Duuz"98E!
z!!!'"s8W-!s8W,uz!!!!0s8W-!rVuou!!!"Ks8W,oz!!!'"s8W-!s8W,sz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!rVuouz+92B?z!!!!(s8W-!s8W-!s7cQoz"98E$s8W-!
s8Vioz!"],0s53kWz&-)\0s8W-!s8W&u!!",@s82isz#QOi(s8W-!s8Duuz"98E!
z!!!-$s8W-!s8W-!z!!!!0s8W-!rVuou!!!"Ks8W,oz!!!-$s8W-!s8W,uz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!qu?]szJ,fQJz!!!!(s8W-!s8W-!s7cQoz&-)\0s8W-!
s8Vusz!!iQ(s53kWz+92B@s8W-!s8W+L!!#7`s7cQoz#QOi(s8W-!s8N'!z!WW2t
z!!!9(s8W-!s8W-!J,fQL!!!!0s8W-!rVuou!!!"Ks8W,oz!!!9(s8W-!s8W-!z!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!p](9ozJ,fQJz!!!!0s8W-!s8W-!s6p!gz+92B@s8W-!
s8Vusz!!iQ(s53kWz5QCc`s8W-!s8W,7!!3-"s7cQoz&-)\0s8W-!s8RTLz"98E!
z!!!9(s8W-!s8W-!J,fQL!!!!0s8W-!rVuou!!!"Ks8W,Wz!!!Q0s8W-!s8W-!z!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!huE`Wz5QCc_z!!!!0s8W-!s8W-!s53kWz+92B@s8W-!
s8W&uz!!E9$s53kWz5QCc`s8W-!s8W,W!!3-"s7cQoz+92B@s8W-!s8Tk7z"98Dr
z!!!9(s8W-!s8W-!^]4?7!!!!0s8W-!rVuou!!!"Ks8W,Wz!!!Q0s8W-!s8W-!z!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!^]4?7zJ,fQJz!!!!0s8W-!s8W-!s53kWz5QCc`s8W-!
s8W*!z!!3-"s53kWz5QCc`s8W-!s8W-!J3X)6s7cQoz5QCc`s8W-!s8Tk7z!WW2p
z!!!Q0s8W-!s8W-!huE`W!!!!0s8W-!rVuou!!!"Ks8W,Wz!!!Q0s8W-!s8W-!J,fQL
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!J,fQLzs8W,uz!!!!`s8W-!s8W-!s53kWz5QCc`
s8W-!s8W+Lz!!E9$s1eU7zJ,fQKs8W-!s8W-!s8W-!s7cQozJ,fQKs8W-!s8Tk7z
!WW2pz!!!Q0s8W-!s8W-!huE`W!!!!0s8W-!rVuou!!!"Ks8W,Wz!!#7`s8W-!s8W-!
huE`W!!!!@s8W-!rVuou!!!!`s8W-!s8W,sz!!!!"s8W,uz!!!!`s8W-!s8W-!s53kW
zJ,fQKs8W-!s8W+Lz!!E9$s1eU7!!!!"s8W-!s8W-!s8W-!s8W-!s6p!gzJ,fQKs8W-!
s8V!Wz!WW2pz!!",@s8W-!s8W-!n,NFg!!!!0s8W-!rVuou!!!"Ks8W,Wz!!#7`s8W-!
s8W-!huE`W!!!!@s8W-!rVuou!!!!`s8W-!s8W,gz!!!!"s8W,uz!!!!`s8W-!s8W-!
s53kWzs8W-!s8W-!s8W+Lz!!3-"s*t(L!!!!"s8W-!s8W-!s8W-!s8W-!s6p!gzJ,fQK
s8W-!s8V!Wz!<<)gz!!#7`s8W-!s8W-!n,NFg!!!!0s8W-!rVuou!!!"Ks8W,Wz!!#7`
s8W-!s8W-!huE`W!!!!@s8W-!rVuou!!!!`s8W-!s8W,Wz!!!!"s8W,uz!!!"Ks8W-!
s8W-!s53kW!!!!"s8W-!s8W-!s8W,7z!!*'!rr<$!!!!!"s8W-!s8W-!s8W-!s8W-!
s6p!gzs8W-!s8W-!s8V!Wz!.Y%,z!!%NKs8W-!s8W-!n,NFg!!!!0s8W-!rVuou!!!"K
s8W,7z!!%NKs8W-!s8W-!n,NFg!!!!@s8W-!rVuou!!!!`s8W-!s8W&uz!!!!"s8W,u
z!!!"Ks8W-!s8W-!s*t(L!!!!"s8W-!s8W-!s8W,7z!!*'!s*t(L!!!!$s8W-!s8W-!
s8W-!s8W-!s1eU7zs8W-!s8W-!s8VQgz!.Y%,z!!%NKs8W-!s8W-!p](9o!!!!0s8W-!
rVuou!!!"Ks8W,7z!!*'!s8W-!s8W-!n,NFg!!!!@s8W-!rVuou!!!!`s8W-!s8VQg
z!!!!$s8W,uz!!!$!s8W-!s8W-!s*t(L!!!!"s8W-!s8W-!s8W,Wz!!*'!s*t(L!!!!(
s8W-!s8W-!s8W-!s8W-!s1eU7zs8W-!s8W-!s8Vioz!.Y$az!!*'!s8W-!s8W-!p](9o
!!!!0s8W-!rVuou!!!"Ks8W,7z!!3-"s8W-!s8W-!n,NFg!!!!@s8W-!rVuou!!!!`
s8W-!s8V!Wz!!!!(s8W,uz!!!$!s8W-!s8W-!s*t(L!!!!"s8W-!s8W-!s8W,gz!!*'!
rr<$!!!!!0s8W-!s8W-!s8W-!s8W-!s1eU7zs8W-!s8W-!s8Vusz!.Y$az!!*'!s8W-!
s8W-!qu?]s!!!!0s8W-!rVuou!!!"Ks8W+Lz!!E9$s8W-!s8W-!n,NFg!!!!@s8W-!
rVuou!!!!`s8W-!s8Duuz!!!!(s8W,uz!!!$!s8W-!s8W-!rr<$!!!!!$s8W-!s8W-!
s8W,gz!!*'!rr<$!!!!!0s8W-!s8W-!s8W-!s8W-!s1eU7!!!!$s8W-!s8W-!s8Vus
z!.Y$az!!*'!s8W-!s8W-!rVuou!!!!0s8W-!rVuou!!!"Ks8W+Lz!!E9$s8W-!s8W-!
p](9o!!!!@s8W-!rVuouzzzz!!!!0s8W,uz!!!-$s8W-!s8W-!rr<$!!!!!$s8W-!
s8W-!s8W,oz!!%NKrVuou!!!!@s8W-!s8W-!s8W-!s8W-!s1eU7!!!!"s8W-!s8W-!
s8W&uz!.Y$az!!E9$s8W-!s8W-!rVuou!!!!0s8W-!rVuou!!!"Ks8W,7z!!E9$s8W-!
s8W-!p](9o!!!!@s8W-!rVuouzzzz!!!!0s8W,uz!!!-$s8W-!s8W-!rr<$!!!!!(
s8W-!s8W-!s8W,oz!!%NKrVuou!!!!@s8W-!s8W-!s8W-!s8W-!s*t(L!!!!$s8W-!
s8W-!s8W&uz!<<)7z!!E9$s8W-!s8W-!rVuou!!!!0s8W-!rVuou!!!"Ks8W+Lz!!E9$
s8W-!s8W-!qu?]s!!!!@s8W-!rVuouzzzz!!!!0s8W,uz!!!-$s8W-!s8W-!rr<$!
!!!!0s8W-!s8W-!s8W,oz!!*'!rVuou!!!!@s8W-!s8W-!s8W-!s8W-!s*t(L!!!!(
s8W-!s8W-!s8W&uz!.Y$az!!E9$s8W-!s8W-!rVuou!!!!0s8W-!rVuou!!!"Ks8W*!
z!!iQ(s8W-!s8W-!rVuou!!!!@s8W-!rVuouzzzz!!!!@s8W,uz!!!9(s8W-!s8W-!
rr<$!!!!!0s8W-!s8W-!s8W,oz!!%NKrVuou!!!!@s8W-!s8W-!s8W-!s8W-!s*t(L
!!!!0s8W-!s8W-!s8W&uz!'gL6z!!E9$s8W-!s8W-!rr<$!!!!!0s8W-!rVuou!!!"K
s8W&uz!!iQ(s8W-!s8W-!rVuou!!!!@s8W-!rVuouzzzz!!!!`s8W,uz!!!9(s8W-!
s8W-!rr<$!!!!!@s8W-!s8W-!s8W,sz!!%NKqu?]s!!!!@s8W-!s8W-!s8W-!s8W-!
s*t(L!!!!0s8W-!s8W-!s8W&uz!'gL6z!!E9$s8W-!s8W-!rr<$!!!!!0s8W-!rVuou
!!!"Ks8W*!z!!iQ(s8W-!s8W-!rVuou!!!!@s8W-!rVuouzzzz!!!"Ks8W,uz!!!9(
s8W-!s8W-!rVuou!!!!@s8W-!s8W-!s8W,sz!!%NKp](9o!!!!@s8W-!s8W-!s8W-!
s8W-!s*t(L!!!!0s8W-!s8W-!s8W&uz!'gL6z!!E9$s8W-!s8W-!rr<$!!!!!0s8W-!
rVuou!!!"Ks8W+Lz!"],0s8W-!s8W-!rVuou!!!!@s8W-!rVuouzzzz!!!"Ks8W,u
z!!!9(s8W-!s8W-!rVuou!!!!@s8W-!s8W-!s8W,sz!!%NKp](9o!!!!`s8W-!s8W-!
s8W-!s8W-!s*t(L!!!!0s8W-!s8W-!s8W&uz!'gL6z!!iQ(s8W-!s8W-!rr<$!!!!!0
s8W-!rVuou!!!"Ks8W*!z!$D7@s8W-!s8W-!rVuou!!!!@s8W-!rVuouzzzz!!!$!
s8W,uz!!!Q0s8W-!s8W-!rVuou!!!!@s8W-!s8W-!s8W-!z!!",@p](9o!!!!`s8W-!
s8W-!s8W-!s8W-!s*t(L!!!!0s8W-!s8W-!s8W&uz!'gL6z!!iQ(s8W-!s8W-!s1eU7
!!!!0s8W-!rVuou!!!"Ks8W&uz!$D7@s8W-!s8W-!rr<$!!!!!@s8W-!rVuouzzz
z!!!'"s8W,uz!!",@s8W-!s8W-!rVuou!!!!`s8W-!s8W-!s8W-!z!!",@p](9o!!!!`
s8W-!s8W-!s8W-!s8W-!s*t(L!!!!@s8W-!s8W-!s8W&uz!'gL6z!"],0s8W-!s8W-!
s1eU7!!!!0s8W-!rVuou!!!"Ks8W&uz!$D7@s8W-!s8W-!rr<$!!!!!@s8W-!rVuou
zzzz!!!'"s8W,uz!!!Q0s8W-!s8W-!rVuou!!!"Ks8W-!s8W-!s8W-!z!!",@p](9o
!!!"Ks8W-!s8W-!s8W-!s8W-!rr<$!!!!!`s8W-!s8W-!s8W&uz!'gL6z!$D7@s8W-!
s8W-!s1eU7!!!!0s8W-!rVuou!!!"Ks8W&uz!$D7@s8W-!s8W-!rr<$!!!!!@s8W-!
rVuouzzzz!!!-$s8W,uz!!",@s8W-!s8W-!rVuou!!!"Ks8W-!s8W-!s8W-!J,fQL
!!",@n,NFg!!!$!s8W-!s8W-!s8W-!s8W-!rVuou!!!!`s8W-!s8W-!s8W*!z!$D5k
z!"],0s8W-!s8W-!s1eU7!!!!0s8W-!rVuou!!!"Ks8W&uz!'gM`s8W-!s8W-!s*t(L
!!!!@s8W-!rVuouzzzz!!!9(s8W,uz!!#7`s8W-!s8W-!rVuou!!!"Ks8W-!s8W-!
s8W-!J,fQL!!",@n,NFg!!!$!s8W-!s8W-!s8W-!s8W-!rr<$!!!!!`s8W-!s8W-!
s8W*!z!$D5kz!"],0s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8W&uz!'gM`s8W-!
s8W-!s*t(L!!!!@s8W-!rVuouzzzz!!!Q0s8W,uz!!#7`s8W-!s8W-!rVuou!!!"K
s8W-!s8W-!s8W-!J,fQL!!!Q0n,NFg!!!$!s8W-!s8W-!s8W-!s8W-!rr<$!!!!!`
s8W-!s8W-!s8W*!z!$D5kz!$D7@s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vus
z!'gM`s8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzzz!!!Q0s8W,uz!!#7`s8W-!s8W-!
rVuou!!!"Ks8W-!s8W-!s8W-!J,fQL!!!Q0n,NFg!!!$!s8W-!s8W-!s8W-!s8W-!
rr<$!!!!!`s8W-!s8W-!s8W*!z!$D5kz!'gM`s8W-!s8W-!s53kW!!!!0s8W-!rVuou
!!!"Ks8Vusz!'gM`s8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzzz!!#7`s8W,uz!!#7`
s8W-!s8W-!rVuou!!!"Ks8W-!s8W-!s8W-!J,fQL!!!Q0n,NFg!!!'"s8W-!s8W-!
s8W-!s8W-!rr<$!!!!!`s8W-!s8W-!s8W*!z!$D5kz!'gM`s8W-!s8W-!s53kW!!!!0
s8W-!rVuou!!!"Ks8Vusz!.Y%Ks8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzzz!!%NK
s8W,uz!!#7`s8W-!s8W-!p](9o!!!$!s8W-!s8W-!s8W-!J,fQL!!",@huE`W!!!'"
s8W-!s8W-!s8W-!s8W-!qu?]s!!!"Ks8W-!s8W-!s8W*!z!$D5kz!'gM`s8W-!s8W-!
s1eU7!!!!0s8W-!rVuou!!!"Ks8Vusz!.Y%Ks8W-!s8W-!s*t(L!!!!@s8W-!rVuou
zzzz!!%NKs8W,uz!!#7`s8W-!s8W-!p](9o!!!$!s8W-!s8W-!s8W-!^]4?7!!",@
huE`W!!!'"s8W-!s8W-!s8W-!s8W-!qu?]s!!!"Ks8W-!s8W-!s8W+Lz!$D5kz!'gM`
s8W-!s8W-!s1eU7!!!!0s8W-!rVuou!!!"Ks8Vusz!.Y%Ks8W-!s8W-!s*t(L!!!!@
s8W-!rVuouzzzz!!%NKs8W,uz!!#7`s8W-!s8W-!p](9o!!!$!s8W-!s8W-!s8W-!
huE`W!!!Q0n,NFg!!!'"s8W-!s8W-!s8W-!s8W-!qu?]s!!!"Ks8W-!s8W-!s8W,7
z!$D4@z!'gM`s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!.Y%Ks8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzzz!!*'!s8W,uz!!#7`s8W-!s8W-!p](9o!!!$!s8W-!
s8W-!s8W-!^]4?7!!!Q0n,NFg!!!-$s8W-!s8W-!s8W-!s8W-!qu?]szzzzz!$D1?
z!'gM`s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L
!!!!@s8W-!rVuouzzzz!!3-"s8W,uz!!#7`s8W-!s8W-!p](9o!!!'"s8W-!s8W-!
s8W-!^]4?7!!!Q0n,NFg!!!-$s8W-!s8W-!s8W-!s8W-!qu?]szzzzz!$D1?z!'gM`
s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@
s8W-!rVuouzzzz!!E9$s8W,uz!!#7`s8W-!s8W-!p](9o!!!'"s8W-!s8W-!s8W-!
^]4?7!!!Q0huE`W!!!-$s8W-!s8W-!s8W-!s8W-!qu?]szzzzz!$D1?z!'gM`s8W-!
s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!
rVuouzzzz!$D7@s8W,uz!!%NKs8W-!s8W-!p](9o!!!'"s8W-!s8W-!s8W-!^]4?7
!!!Q0huE`W!!!-$s8W-!s8W-!s8W-!s8W-!qu?]szzzzz!$D1?z!'gM`s8W-!s8W-!
s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou
zzzz!'gM`s8W,uz!!%NKs8W-!s8W-!p](9o!!!'"s8W-!s8W-!s8W-!^]4?7!!!Q0
huE`W!!!-$s8W-!s8W-!s8W-!s8W-!qu?]szzzzz!$D1?z!.Y%Ks8W-!s8W-!s53kW
!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzz
z!.Y%Ks8W,uz!!%NKs8W-!s8W-!n,NFg!!!'"s8W-!s8W-!s8W-!^]4?7!!!Q0huE`W
!!!-$s8W-!s8W-!s8W-!s8W-!p](9ozzzzz!$D1?z!.Y%Ks8W-!s8W-!s53kW!!!!0
s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzzz!.Y%K
s8W,uz!!%NKs8W-!s8W-!n,NFg!!!'"s8W-!s8W-!s8W-!^]4?7!!!Q0huE`W!!!9(
s8W-!s8W-!s8W-!s8W-!p](9ozzzzz!$D1?z!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!
rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzzz!WW3"s8W,u
z!!%NKs8W-!s8W-!n,NFg!!!'"s8W-!s8W-!s8W-!^]4?7!!!Q0huE`W!!!Q0s8W-!
s8W-!s8W-!s8W-!p](9ozzzzz!$D1?z!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou
!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzzz#QOi(s8W,uz!!%NK
s8W-!s8W-!n,NFg!!!-$s8W-!s8W-!s8W-!^]4?7!!!Q0huE`W!!!9(s8W-!s8W-!
s8W-!s8W-!p](9ozzzzz!!iK'z!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"K
s8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzzz&-)\0s8W,uz!!%NKs8W-!
s8W-!n,NFg!!!9(s8W-!s8W-!s8W-!huE`W!!!9(huE`W!!!-$s8W-!s8W-!s8W-!
s8W-!p](9ozzzzz!"]&/z!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vus
z!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzzz+92B@s8W,uz!!%NKs8W-!s8W-!
n,NFg!!!9(s8W-!s8W-!s8W-!n,NFg!!!9(huE`W!!!-$s8W-!s8W-!s8W-!s8W-!
p](9ozzzzz!$D1?z!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"
s8W-!s8W-!s*t(L!!!!@s8W-!rVuouzzzzJ,fQKs8W,uz!!%NKs8W-!s8W-!n,NFg
!!!9(s8W-!s8W-!s8W-!n,NFg!!!9(huE`W!!!-$s8W-!s8W-!s8W-!s8W-!p](9o
zzzzz!$D+=z!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!
s8W-!s*t(L!!!!@s8W-!rVuouzzzzs8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!huE`W!!!9(huE`W!!!-$s8W-!s8W-!s8W-!s8W-!p](9ozzzz
z!$D+=z!<<*!s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vioz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!!!!"s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!9(s8W-!s8W-!s8W-!s8W-!p](9ozzzz
z!$D+=z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!!!!$s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!p](9ozzzz
z!$D+=z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!!!!@s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!p](9ozzzz
z!$D+=z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!!!'"s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!p](9ozzzz
z!$D+=z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!!!'"s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!n,NFgzzzz
z!$D+=z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!!!Q0s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzz
z!$D+=z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!!",@s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzz
z!$D+=z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!!#7`s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzz
z!$D+=z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!!3-"s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzz
z!$D+=z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!$D7@s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzz
z!'gA]z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz!WW3"s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzz
z!'gA]z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz"98E$s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzz
z!'gA]z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzzz5QCc`s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzz
z!'gA]z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuouzz!!!!"s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(
s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzz
z!.XnHz!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!
n,NFg!!!9(s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!
huE`Wzzzzz!.XnHz!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"
s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NK
s8W-!s8W-!n,NFg!!!9(s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0s8W-!s8W-!
s8W-!s8W-!huE`Wzzzzz!.XnHz!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"K
s8VQgz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!
s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!Q0
s8W-!s8W-!s8W-!s8W-!huE`Wzzzzz!<;rsz!WW3"s8W-!s8W-!s53kW!!!!0s8W-!
rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(s8W-!s8W-!s8W-!^]4?7!!!9(
huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!huE`Wzzzzz!WW&tz!WW3"s8W-!s8W-!s53kW
!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(s8W-!s8W-!s8W-!
^]4?7!!!9(huE`W!!!9(s8W-!s8W-!s8W-!s8W-!n,NFgzzzzz!WW&tz!WW3"s8W-!
s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(s8W-!
s8W-!s8W-!^]4?7!!!9(huE`W!!!-$s8W-!s8W-!s8W-!s8W-!p](9ozzzzz!WW&t
z!WW3"s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!s8W-!s*t(L
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg
!!!9(s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!-$s8W-!s8W-!s8W-!s8W-!p](9o
zzzzz"989!z!<<*!s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8VQgz!WW3"s8W-!
s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!
s8W-!n,NFg!!!9(s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!-$s8W-!s8W-!s8W-!
s8W-!p](9ozzzzz#QO]%z!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vus
z!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,u
z!!%NKs8W-!s8W-!n,NFg!!!9(s8W-!s8W-!s8W-!^]4?7!!!9(huE`W!!!-$s8W-!
s8W-!s8W-!s8W-!p](9ozzzzz&-)V/z!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou
!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(s8W-!s8W-!s8W-!^]4?7!!!9(huE`W
!!!-$s8W-!s8W-!s8W-!s8W-!p](9ozzzzz+92<?z!.Y%Ks8W-!s8W-!s53kW!!!!0
s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!
s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!9(s8W-!s8W-!s8W-!^]4?7
!!!Q0huE`W!!!-$s8W-!s8W-!s8W-!s8W-!p](9ozzzzz5QC]_z!.Y%Ks8W-!s8W-!
s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou
!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg!!!'"s8W-!s8W-!
s8W-!^]4?7!!!Q0huE`W!!!Q0s8W-!s8W-!s8W-!s8W-!p](9ozzzz!!!!"s8W&u
z!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!n,NFg
!!!'"s8W-!s8W-!s8W-!^]4?7!!!Q0huE`W!!!9(s8W-!s8W-!s8W-!s8W-!p](9o
zzzz!!!!$s8W&uz!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"
s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NK
s8W-!s8W-!n,NFg!!!'"s8W-!s8W-!s8W-!^]4?7!!!Q0huE`W!!!-$s8W-!s8W-!
s8W-!s8W-!p](9ozzzz!!!!0s8W&uz!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou
!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!p](9o!!!'"s8W-!s8W-!s8W-!^]4?7!!!Q0huE`W
!!!-$s8W-!s8W-!s8W-!s8W-!p](9ozzzz!!!!`s8W&uz!.Y%Ks8W-!s8W-!s53kW
!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!p](9o!!!'"s8W-!s8W-!s8W-!
huE`W!!!Q0n,NFg!!!-$s8W-!s8W-!s8W-!s8W-!p](9ozzzz!!",@s8W&uz!.Y%K
s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!p](9o!!!'"
s8W-!s8W-!s8W-!^]4?7!!!Q0n,NFg!!!-$s8W-!s8W-!s8W-!s8W-!p](9ozzzz
!!#7`s8W&uz!.Y%Ks8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!
s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!
s8W-!p](9o!!!$!s8W-!s8W-!s8W-!J,fQL!!!Q0n,NFg!!!-$s8W-!s8W-!s8W-!
s8W-!p](9o!!!$!s8W-!s8W-!s8W-!s8W-!s8W&uz!'gM`s8W-!s8W-!s53kW!!!!0
s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!
s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!p](9o!!!$!s8W-!s8W-!s8W-!^]4?7
!!!Q0n,NFg!!!9(s8W-!s8W-!s8W-!s8W-!qu?]s!!!"Ks8W-!s8W-!s8W-!s8W-!
s8W&uz!'gM`s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!WW3"s8W-!s8W-!
s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!
p](9o!!!$!s8W-!s8W-!s8W-!huE`W!!!Q0n,NFg!!!'"s8W-!s8W-!s8W-!s8W-!
qu?]s!!!"Ks8W-!s8W-!s8W-!s8W-!s8W&uz!'gM`s8W-!s8W-!s53kW!!!!0s8W-!
rVuou!!!"Ks8Vusz!<<*!s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!p](9o!!!$!s8W-!s8W-!s8W-!^]4?7!!!Q0
huE`W!!!'"s8W-!s8W-!s8W-!s8W-!qu?]s!!!"Ks8W-!s8W-!s8W-!s8W-!s8W*!
z!'gM`s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!.Y%Ks8W-!s8W-!s1eU7
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!p](9o
!!!$!s8W-!s8W-!s8W-!J,fQL!!",@huE`W!!!'"s8W-!s8W-!s8W-!s8W-!qu?]s
!!!"Ks8W-!s8W-!s8W-!s8W-!s8W+Lz!'gM`s8W-!s8W-!s53kW!!!!0s8W-!rVuou
!!!"Ks8Vusz!.Y%Ks8W-!s8W-!s53kW!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!qu?]s!!!"Ks8W-!s8W-!s8W-!J,fQL!!!Q0n,NFg
!!!$!s8W-!s8W-!s8W-!s8W-!qu?]s!!!!`s8W-!s8W-!s8W-!s8W-!s8W+Lz!'gM`
s8W-!s8W-!s1eU7!!!!0s8W-!rVuou!!!"Ks8Vusz!.Y%Ks8W-!s8W-!s1eU7!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!J,fQL!!!Q0n,NFg!!!$!s8W-!s8W-!s8W-!s8W-!qu?]s!!!!`
s8W-!s8W-!s8W-!s8W-!s8W+Lz!'gM`s8W-!s8W-!s1eU7!!!!0s8W-!rVuou!!!"K
s8Vusz!.Y%Ks8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!
s8W,uz!!%NKs8W-!s8W-!qu?]s!!!"Ks8W-!s8W-!s8W-!J,fQL!!!Q0n,NFg!!!$!
s8W-!s8W-!s8W-!s8W-!qu?]s!!!!`s8W-!s8W-!s8W-!s8W-!s8W*!z!'gM`s8W-!
s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vusz!.Y%Ks8W-!s8W-!s*t(L!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!p](9o!!!"Ks8W-!
s8W-!s8W-!J,fQL!!",@n,NFg!!!$!s8W-!s8W-!s8W-!s8W-!rr<$!!!!!`s8W-!
s8W-!s8W-!s8W-!s8W&uz!'gM`s8W-!s8W-!s53kW!!!!0s8W-!rVuou!!!"Ks8Vus
z!'gM`s8W-!s8W-!s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,u
z!!%NKs8W-!s8W-!qu?]s!!!"Ks8W-!s8W-!s8W-!z!!",@p](9o!!!$!s8W-!s8W-!
s8W-!s8W-!rr<$!!!!!`s8W-!s8W-!s8W-!s8W-!s8W*!z!$D7@s8W-!s8W-!s53kW
!!!!0s8W-!rVuou!!!"Ks8W&uz!'gM`s8W-!s8W-!s1eU7!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!rVuou!!!"Ks8W-!s8W-!s8W-!
z!!",@p](9o!!!"Ks8W-!s8W-!s8W-!s8W-!rr<$!!!!!`s8W-!s8W-!s8W-!s8W-!
s8W+Lz!"],0s8W-!s8W-!s1eU7!!!!0s8W-!rVuou!!!"Ks8W&uz!'gM`s8W-!s8W-!
s*t(L!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!
rVuou!!!!`s8W-!s8W-!s8W-!z!!",@p](9o!!!!`s8W-!s8W-!s8W-!s8W-!rr<$!
!!!!@s8W-!s8W-!s8W-!s8W-!s8W+Lz!"],0s8W-!s8W-!s1eU7!!!!0s8W-!rVuou
!!!"Ks8W&uz!'gM`s8W-!s8W-!rr<$!!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!rVuou!!!!@s8W-!s8W-!s8W,sz!!",@p](9o!!!!`
s8W-!s8W-!s8W-!s8W-!rr<$!!!!!0s8W-!s8W-!s8W-!s8W-!s8W+Lz!!iQ(s8W-!
s8W-!s1eU7!!!!0s8W-!rVuou!!!"Ks8W&uz!$D7@s8W-!s8W-!rr<$!!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!rVuou!!!!@s8W-!
s8W-!s8W,sz!!",@p](9o!!!!`s8W-!s8W-!s8W-!s8W-!s*t(L!!!!0s8W-!s8W-!
s8W-!s8W-!s8W+Lz!!iQ(s8W-!s8W-!s1eU7!!!!0s8W-!rVuou!!!"Ks8W&uz!$D7@
s8W-!s8W-!rr<$!!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NK
s8W-!s8W-!rVuou!!!!@s8W-!s8W-!s8W,sz!!#7`p](9o!!!!`s8W-!s8W-!s8W-!
s8W-!s*t(L!!!!0s8W-!s8W-!s8W-!s8W-!s8W+Lz!!iQ(s8W-!s8W-!s*t(L!!!!0
s8W-!rVuou!!!"Ks8W&uz!$D7@s8W-!s8W-!rr<$!!!!!@s8W-!rVuou!!!!`s8W-!
s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!rr<$!!!!!0s8W-!s8W-!s8W,sz!!%NK
p](9o!!!!`s8W-!s8W-!s8W-!s8W-!s*t(L!!!!0s8W-!s8W-!s8W-!s8W-!s8W+L
z!!iQ(s8W-!s8W-!rr<$!!!!!0s8W-!rVuou!!!"Ks8W&uz!$D7@s8W-!s8W-!rr<$!
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!rr<$!
!!!!0s8W-!s8W-!s8W,oz!!%NKrVuou!!!!@s8W-!s8W-!s8W-!s8W-!s*t(L!!!!(
s8W-!s8W-!s8W-!s8W-!s8W+Lz!!E9$s8W-!s8W-!rr<$!!!!!0s8W-!rVuou!!!"K
s8W*!z!!iQ(s8W-!s8W-!rVuou!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!
s8W,uz!!%NKs8W-!s8W-!rr<$!!!!!(s8W-!s8W-!s8W,oz!!*'!rVuou!!!!@s8W-!
s8W-!s8W-!s8W-!s*t(L!!!!(s8W-!s8W-!s8W-!s8W-!s8W+Lz!!E9$s8W-!s8W-!
rr<$!!!!!0s8W-!rVuou!!!"Ks8W+Lz!!iQ(s8W-!s8W-!rVuou!!!!@s8W-!rVuou
!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!rr<$!!!!!$s8W-!s8W-!
s8W,oz!!*'!rVuou!!!!@s8W-!s8W-!s8W-!s8W-!s*t(L!!!!(s8W-!s8W-!s8W-!
s8W-!s8W+Lz!!3-"s8W-!s8W-!rr<$!!!!!0s8W-!rVuou!!!"Ks8W+Lz!!iQ(s8W-!
s8W-!qu?]s!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!
s8W-!rr<$!!!!!$s8W-!s8W-!s8W,oz!!*'!rVuou!!!!0s8W-!s8W-!s8W-!s8W-!
s*t(L!!!!"s8W-!s8W-!s8W-!s8W-!s8W+Lz!!*'!s8W-!s8W-!rVuou!!!!0s8W-!
rVuou!!!"Ks8W+Lz!!iQ(s8W-!s8W-!p](9o!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!rr<$!!!!!$s8W-!s8W-!s8W,gz!!*'!rr<$!
!!!!0s8W-!s8W-!s8W-!s8W-!s*t(L!!!!"s8W-!s8W-!s8W-!s8W-!s8W,7z!!*'!
s8W-!s8W-!rVuou!!!!0s8W-!rVuou!!!"Ks8W,7z!!E9$s8W-!s8W-!p](9o!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!rr<$!!!!!$
s8W-!s8W-!s8W,gz!!*'!rr<$!!!!!(s8W-!s8W-!s8W-!s8W-!s*t(L!!!!$s8W-!
s8W-!s8W-!s8W-!s8W,7z!!*'!s8W-!s8W-!rVuou!!!!0s8W-!rVuou!!!"Ks8W+L
z!!E9$s8W-!s8W-!p](9o!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,u
z!!%NKs8W-!s8W-!s*t(L!!!!"s8W-!s8W-!s8W,Wz!!*'!rr<$!!!!!$s8W-!s8W-!
s8W-!s8W-!s1eU7!!!!"s8W-!s8W-!s8W-!s8W-!s8W,7z!!*'!s8W-!s8W-!rVuou
!!!!0s8W-!rVuou!!!"Ks8W+Lz!!E9$s8W-!s8W-!p](9o!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s*t(L!!!!"s8W-!s8W-!s8W,7
z!!E9$s1eU7!!!!"s8W-!s8W-!s8W-!s8W-!s1eU7zs8W-!s8W-!s8W-!s8W-!s8W,7
z!!%NKs8W-!s8W-!p](9o!!!!0s8W-!rVuou!!!"Ks8W,7z!!*'!s8W-!s8W-!n,NFg
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s*t(L
zs8W-!s8W-!s8W,7z!!E9$s1eU7!!!!"s8W-!s8W-!s8W-!s8W-!s1eU7zs8W-!s8W-!
s8W-!s8W-!s8W,Wz!!%NKs8W-!s8W-!qu?]s!!!!0s8W-!rVuou!!!"Ks8W,7z!!3-"
s8W-!s8W-!n,NFg!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NK
s8W-!s8W-!s1eU7zJ,fQKs8W-!s8W+Lz!!E9$s1eU7!!!!"s8W-!s8W-!s8W-!s8W-!
s53kWzJ,fQKs8W-!s8W-!s8W-!s8W,Wz!!#7`s8W-!s8W-!p](9o!!!!0s8W-!rVuou
!!!"Ks8W,7z!!*'!s8W-!s8W-!n,NFg!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!s53kWz5QCc`s8W-!s8W+Lz!!E9$s1eU7!!!!"s8W-!
s8W-!s8W-!s8W-!s6p!gzJ,fQKs8W-!s8W-!s8W-!s8W,Wz!!#7`s8W-!s8W-!n,NFg
!!!!0s8W-!rVuou!!!"Ks8W,7z!!%NKs8W-!s8W-!n,NFg!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s53kWz5QCc`s8W-!s8W+Lz!!iQ(
s*t(Lzs8W-!s8W-!s8W-!s8W-!s6p!gz+92B@s8W-!s8W-!s8W-!s8W,Wz!!#7`s8W-!
s8W-!n,NFg!!!!0s8W-!rVuou!!!"Ks8W,Wz!!%NKs8W-!s8W-!huE`W!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s6p!gz+92B@s8W-!
s8W*!z!!E9$s53kWz5QCc`s8W-!s8W-!s8W-!s7cQoz+92B@s8W-!s8W-!s8W-!s8W,g
z!!",@s8W-!s8W-!huE`W!!!!0s8W-!rVuou!!!"Ks8W,Wz!!#7`s8W-!s8W-!J,fQL
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s6p!g
z&-)\0s8W-!s8W&uz!!E9$s53kWz5QCc`s8W-!s8W-!s8W-!s7cQoz+92B@s8W-!
s8W-!s8W-!s8W,oz!!!Q0s8W-!s8W-!huE`W!!!!0s8W-!rVuou!!!"Ks8W,Wz!!#7`
s8W-!s8W-!J,fQL!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NK
s8W-!s8W-!s6p!gz&-)\0s8W-!s8Vusz!!iQ(s1eU7z5QCc`s8W-!s8W,o!!iQ(s6p!g
z&-)\0s8W-!s8W-!s8W-!s8W,oz!!!9(s8W-!s8W-!huE`W!!!!0s8W-!rVuou!!!"K
s8W,Wz!!#7`s8W-!s8W-!J,fQL!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!
s8W,uz!!%NKs8W-!s8W-!s7cQoz&-)\0s8W-!s8Vioz!!iQ(s53kWz+92B@s8W-!
s8W,g!!3-"s7cQoz#QOi(s8W-!s8W-!s8W-!s8W,sz!!!9(s8W-!s8W-!J,fQL!!!!0
s8W-!rVuou!!!"Ks8W,Wz!!",@s8W-!s8W-!z!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s7cQoz#QOi(s8W-!s8Vioz!"],0s6p!gz
&-)\0s8W-!s8W*!!!#7`s7cQoz#QOi(s8W-!s8W-!p](j)s8W,sz!!!-$s8W-!s8W-!
J,fQL!!!!0s8W-!rVuou!!!"Ks8W,Wz!!!9(s8W-!s8W,uz!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s7cQoz"98E$s8W-!s8VQgz!"],0
s6p!gz#QOi(s8W-!s8W&u!!#7`s7cQoz"98E$s8W-!s8W-!n,O"!s8W,sz!!!'"s8W-!
s8W-!J,fQL!!!!0s8W-!rVuou!!!"Ks8W,Wz!!!9(s8W-!s8W,sz!!!!@s8W-!rVuou
!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s7cQoz!WW3"s8W-!s8V!W
z!"],0s6p!gz#QOi(s8W-!s8Vus!!",@s82isz!WW3"s8W-!s8W-!^]4E8s8W,sz
!!!$!s8W-!s8W-!z!!!!0s8W-!rVuou!!!"Ks8W,oz!!!-$s8W-!s8W,sz!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8Duuz!<<*!s8W-!
s8Tk7z!$D7@s7cQoz"98E$s8W-!s8VQg!!!Q0s82isz!<<*!s8W-!s8W,u!!!$!s8W,s
z!!!"Ks8W-!s8W,uz!!!!0s8W-!rVuou!!!"Ks8W,oz!!!$!s8W-!s8W,oz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8Duuz!.Y%K
s8W-!s8RTLz!'gM`s82isz!WW3"s8W-!s8V!W!!!9(s82isz!.Y%Ks8W-!s8W,s!!!"K
s8W,uz!!!!`s8W-!s8W,sz!!!!0s8W-!rVuou!!!"Ks8W,oz!!!"Ks8W-!s8W,gz
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8Duu
z!'gM`s8W-!s8N'!z!'gM`s82isz!<<*!s8W-!s8Tk7!!!-$s82isz!'gM`s8W-!
s8W,s!!!!`s8W-!z!!!!@s8W-!s8W,oz!!!!0s8W-!rVuou!!!"Ks8W,oz!!!"Ks8W-!
s8W,gz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!
s8Duuz!$D7@s8W-!s8Duuz!'gM`s8Duuz!.Y%Ks8W-!s8N'!!!!'"s8N'!z!$D7@
s8W-!s8W,W!!!!@s8W,uz!!!!0s8W-!s8W,gz!!!!0s8W-!rVuou!!!"Ks8W,sz!!!!`
s8W-!s8W,gz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!
s8W-!s8N'!z!"],0s8W-!s82isz!.Y%Ks8Duuz!'gM`s8W-!s82is!!!"Ks8N'!z
!"],0s8W-!s8W+L!!!!0s8W-!J,fQL!!!!(s8W-!s8W,Wz!!!!0s8W-!rVuou!!!"K
s8W,uz!!!!0s8W-!s8W+Lz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,u
z!!%NKs8W-!s8W-!s8N'!z!!iQ(s8W-!s7cQoz!.Y%Ks8Duuz!"],0s8W-!s7cQo
!!!"Ks8N'!z!!E9$s8W-!s8W*!!!!!(s8W-!J,fQL!!!!$s8W-!s8W,7z!!!!0s8W-!
rVuou!!!"Ks8W,uz!!!!0s8W-!s8W*!z!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!s8N'!z!!E9$s8W-!s6p!gz!.Y%Ks8Duuz!!iQ(
s8W-!s7cQo!!!!`s8RTLz!!3-"s8W-!s8W&u!!!!$s8W-!J,fQL!!!!"s8W-!s8W+L
z!!!!0s8W-!rVuou!!!"Ks8W,uz!!!!(s8W-!s8W*!z!!!!@s8W-!rVuou!!!!`s8W-!
s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8RTLz!!3-"s8W-!s1eU7z!<<*!s8N'!
z!!E9$s8W-!s53kW!!!!`s8RTLz!!*'!s8W-!s8Vus!!!!"s8W-!J,fQLzs8W-!s8W*!
z!!!!0s8W-!rVuou!!!"Ks8W-!J,fQL!!!!$s8W-!s8Vusz!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8Tk7z!!#7`s8W-!s*t(Lz!<<*!
s8RTLz!!%NKs8W-!s*t(L!!!!@s8Tk7z!!",@s8W-!s8Tk7!!!!"s8W-!^]4?7z5QCc`
s8VQgz!!!!0s8W-!rVuou!!!"Ks8W-!J,fQLzs8W-!s8VQgz!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8Tk7z!!#7`s8W-!rr<$!z!WW3"
s8Tk7z!!%NKs8W-!rr<$!!!!!0s8V!Wz!!",@s8W-!s8RTL!!!!"s8W-!^]4?7z+92B@
s8V!Wz!!!!0s8W-!rVuou!!!"Ks8W-!J,fQLzs8W-!s8V!Wz!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8V!Wz!!!9(s8W-!rVuouz"98E$
s8Tk7z!!!Q0s8W-!qu?]s!!!!(s8Tk7z!!!Q0s8W-!s8Duuzs8W-!^]4?7z&-)\0
s8Tk7z!!!!0s8W-!rVuou!!!"Ks8W-!J,fQLz+92B@s8Tk7z!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8V!Wz!!!-$s8W-!p](9oz"98E$
s8V!Wz!!!-$s8W-!^]4?7!!!!(s8VQgz!!!$!s8W-!s6p!gz5QCc`huE`Wz#QOi(
s8RTLz!!!!0s8W-!rVuou!!!"Ks8W-!^]4?7z&-)\0s8N'!z!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8V!Wz!!!$!s8W-!J,fQLz"98E$
s8V!Wz!!!'"s8W,sz!!!!(s8VQgz!!!!0s8W-!rr<$!z5QCc`n,NFgz!.Y%Ks7cQo
z!!!!0s8W-!rVuou!!!"Ks8W-!^]4?7z!<<*!s7cQoz!!!!@s8W-!rVuou!!!!`s8W-!
s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8VQgz!!!"Ks8W-!zz#QOi(s8V!W
z!!!$!s8W,oz!!!!(s8VQgz!!!!(s8W-!rr<$!z5QCc`n,NFgz!'gM`s7cQoz!!!!0
s8W-!rVuou!!!"Ks8W-!^]4?7z!<<*!s6p!gz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8Vuszzs8W+Lzz#QOi(s8VQgz!!!!(s8W*!
z!!!!$s8Viozz5QCc`J,fQLz5QCc`n,NFgz!!3-"rVuouz!!!!0s8W-!rVuou!!!"K
s8W-!huE`Wz!!E9$rVuouz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,u
z!!%NKs8W-!s8W-!s8Vuszz#QO8nzz&-)\0s8VQgzz#QMR>z!!!!$s8Vuszz!.Y%,
zz+92B@p](9oz!!!Q0^]4?7z!!!!0s8W-!rVuou!!!"Ks8W-!p](9oz!!",@J,fQL
z!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8Vus
zzzzz+92B@s8Viozzzz!!!!$s8W&uzzzzz+92B@p](9ozzzz!!!!0s8W-!rVuou!!!"K
s8W-!p](9ozzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NK
s8W-!s8W-!s8W&uzzzzz5QCc`s8Vuszzzz!!!!$s8W&uzzzzz+92B@qu?]szzzz!!!!0
s8W-!rVuou!!!"Ks8W-!p](9ozzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!s8W&uzzzzzJ,fQKs8Vuszzzz!!!!$s8W*!zzzz
z+92B@qu?]szzzz!!!!0s8W-!rVuou!!!"Ks8W-!qu?]szzzz!!!!@s8W-!rVuou
!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W*!zzzzzJ,fQKs8W&u
zzzz!!!!$s8W+Lzzzzz+92B@rVuouzzzz!!!!0s8W-!rVuou!!!"Ks8W-!qu?]sz
zzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!
s8W+LzzzzzJ,fQKs8W*!zzzz!!!!$s8W+Lzzzzz+92B@rr<$!zzzz!!!!0s8W-!rVuou
!!!"Ks8W-!rVuouzzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,u
z!!%NKs8W-!s8W-!s8W,7zzzz!!!!"s8W-!s8W+Lzzzz!!!!(s8W+Lzzzzz+92B@
rr<$!zzzz!!!!0s8W-!rVuou!!!"Ks8W-!rr<$!zzzz!!!!@s8W-!rVuou!!!!`s8W-!
s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W,7zzzz!!!!$s8W-!s8W,7zzzz
!!!!(s8W,Wzzzzz+92B@s*t(Lzzzz!!!!0s8W-!rVuou!!!"Ks8W-!rr<$!zzzz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W,7zzz
z!!!!$s8W-!s8W,Wzzzz!!!!(s8W,Wzzzzz5QCc`s1eU7zzzz!!!!0s8W-!rVuou
!!!"Ks8W-!rr<$!zzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,u
z!!%NKs8W-!s8W-!s8W,Wzzzz!!!!$s8W-!s8W,gzzzz!!!!(s8W,gzzzzz5QCc`
s1eU7zzzz!!!!0s8W-!rVuou!!!"Ks8W-!s*t(Lzzzz!!!!@s8W-!rVuou!!!!`s8W-!
s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W,ozzzz!!!!(s8W-!s8W,ozzzz
!!!!@s8W,gzzzzz5QCc`s1eU7zzzz!!!!0s8W-!rVuou!!!"Ks8W-!s*t(Lzzzz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W,szzz
z!!!!0s8W-!s8W,ozzzz!!!!0s8W,ozzzzz5QCc`s6p!gzzzz!!!!0s8W-!rVuou
!!!"Ks8W-!s1eU7zzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,u
z!!%NKs8W-!s8W-!s8W,szzzz!!!!@s8W-!s8W,ozzzz!!!!@s8W,szzzzzJ,fQK
s6p!gzzzz!!!!0s8W-!rVuou!!!"Ks8W-!s53kWzzzz!!!!@s8W-!rVuou!!!!`s8W-!
s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W,uzzzz!!!!@s8W-!s8W,szzzz
!!!!`s8W,uzzzzzs8W-!s7cQozzzz!!!!0s8W-!rVuou!!!"Ks8W-!s6p!gzzzz!!!!@
s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W,uzzz
z!!!!`s8W-!s8W,uzzzz!!!!`s8W-!zzzzzs8W-!s8Duuzzzz!!!!0s8W-!rVuou
!!!"Ks8W-!s7cQozzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,u
z!!%NKs8W-!s8W-!s8W-!^]4?7zzz!!!"Ks8W-!s8W-!zzzz!!!"Ks8W-!J,fQLz
zz!!!!"s8W-!s8N'!zzzz!!!!0s8W-!rVuou!!!"Ks8W-!s82iszzzz!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!^]4?7zzz
!!!$!s8W-!s8W-!J,fQLzzz!!!"Ks8W-!^]4?7zzz!!!!"s8W-!s8N'!zzzz!!!!0
s8W-!rVuou!!!"Ks8W-!s82iszzzz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!huE`Wzzz!!!'"s8W-!s8W-!^]4?7zzz!!!"K
s8W-!huE`Wzzz!!!!"s8W-!s8N'!zzzz!!!!0s8W-!rVuou!!!"Ks8W-!s82iszz
zz!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!
huE`Wzzz!!!-$s8W-!s8W-!huE`Wzzz!!!$!s8W-!n,NFgzzz!!!!$s8W-!s8RTL
zzz!&+BQ!!!!0s8W-!rVuou!!!"Ks8W-!s8N'!zzz!8mhW!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!n,NFgzzz!!!9(s8W-!
s8W-!n,NFgzzz!!!'"s8W-!p](9ozzz!!!!(s8W-!s8Tk7zzz!$D7A!!!!0s8W-!
rVuou!!!"Ks8W-!s8RTLzzz!Pe[8!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!
s8W,uz!!%NKs8W-!s8W-!s8W-!p](9ozzz!!!Q0s8W-!s8W-!p](9ozzz!!!-$s8W-!
qu?]szzz!!!!0s8W-!s8V!Wzzz!$D7A!!!!0s8W-!rVuou!!!"Ks8W-!s8RTLzzz
!It.M!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!
s8W-!rVuouzzz!!",@s8W-!s8W-!qu?]szzz!!!9(s8W-!rVuouzzz!!!!@s8W-!
s8VQgzzz!8mhW!!!!0s8W-!rVuou!!!"Ks8W-!s8V!Wzzz!It.M!!!!@s8W-!rVuou
!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!s*t(Lzzz!!#7`
s8W-!s8W-!rVuouzzz!!",@s8W-!rr<$!zzz!!!!`s8W-!s8Viozzz!T3qX!!!!0
s8W-!rVuou!!!"Ks8W-!s8VQgzzz"+U@O!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!s*t(Lzzz!!%NKs8W-!s8W-!rr<$!zzz!!",@
s8W-!s*t(Lzzz!!!"Ks8W-!s8Vuszzz!T3qX!!!!0s8W-!rVuou!!!"Ks8W-!s8Vio
zzz#CldS!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!
s8W-!s8W-!s*t(Lzzz!!*'!s8W-!s8W-!s*t(Lzzz!!*'!s8W-!s1eU7zzz!!!$!
s8W-!s8W&uzzz!T3qX!!!!0s8W-!rVuou!!!"Ks8W-!s8Viozzz%tFW[!!!!@s8W-!
rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!s1eU7zzz
!!E9$s8W-!s8W-!s6p!gzzz!!3-"s8W-!s53kWzzz!!!9(s8W-!s8W*!zzz"5j.Z
!!!!0s8W-!rVuou!!!"Ks8W-!s8W&uzzz++O=k!!!!@s8W-!rVuou!!!!`s8W-!s8W-!
s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!s7cQozzz!!iQ(s8W-!s8W-!s7cQo
zzz!!iQ(s8W-!s82iszzz!!!Q0s8W-!s8W+Lzzz#N,R^!!!!0s8W-!rr<$!!!!"K
s8W-!s8W*!zzz5C`_6!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz
!!%NKs8W-!s8W-!s8W-!s7cQozzz!"],0s8W-!s8W-!s82iszzz!"],0s8W-!s82is
zzz!!!Q0s8W-!s8W,7zzz&)[Ef!!!!0s8W-!rVuou!!!"Ks8W-!s8W*!zzzIt.M!
!!!!@s8W-!rVuou!!!!`s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!
s82iszzz!.Y%Ks8W-!s8W-!s8Duuzzz!$D7@s8W-!s8Duuzzz!!%NKs8W-!s8W,W
zzz+5d,!!!!!0s8W-!rVuou!!!$!s8W-!s8W,7zzzs*t(L!!!!@s8W-!rVuou!!!!`
s8W-!s8W-!s8W-!s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!s8RTLzzz!<<*!s8W-!
s8W-!s8N'!zzz!<<*!s8W-!s8N'!zzz!!*'!s8W-!s8W,szzz5MuMA!!!!0s8W-!
rr<$!!!!$!s8W-!s8W,gzz!!!!"s*t(L!!!!@s8W-!rVuou!!!"Ks8W-!s8W-!s8W-!
s8W-!s8W,uz!!%NKs8W-!s8W-!s8W-!s8Tk7zzz"98E$s8W-!s8W-!s8RTLzzz!WW3"
s8W-!s8V!Wzzz!!E9$s8W-!s8W,uzzzJ)C;,!!!!0s8W-!rr<$!!!!$!s8W-!s8W,o
zz!!!!$s*t(L!!!!@s8W-!rVuou!!!"Ks8W-!s8W-!s8W-!s8W-!s8W,uz!!*'!s8W-!
s8W-!s8W-!s8V!Wzzz#QOi(s8W-!s8W-!s8Tk7zzz!WW3"s8W-!s8VQgzzz!!iQ(
s8W-!s8W,uzzzs53kW!!!!0s8W-!rr<$!!!!$!s8W-!s8W,szz!!!!(s1eU7!!!!@
s8W-!rVuou!!!"Ks8W-!s8W-!s8W-!s8W-!s8W,uz!!3-"s8W-!s8W-!s8W-!s8Vio
zzz&-)\0s8W-!s8W-!s8Viozzz"98E$s8W-!s8Vuszzz!'gM`s8W-!s8W-!zz!!!!(
s6p!g!!!!0s8W-!rr<$!!!!$!s8W-!s8W,uzz!!!!0s53kW!!!!@s8W-!s*t(L!!!"K
s8W-!s8W-!s8W-!s8W-!s8W-!J,fQL!!3-"s8W-!s8W-!s8W-!s8W*!zzzJ,fQKs8W-!
s8W-!s8W&uzzz+92B@s8W-!s8W+Lzzz!.Y%Ks8W-!s8W-!huE`Wz!!!!0s6p!g!!!!@
s8W-!rr<$!!!!'"s8W-!s8W-!zz!!!!@s53kW!!!!@s8W-!s*t(L!!!$!s8W-!s8W-!
s8W-!s8W-!s8W-!J,fQL!!3-"s8W-!s8W-!s8W-!s8W+LzzzJ,fQKs8W-!s8W-!s8W&u
zzz5QCc`s8W-!s8W,7zzz!<<*!s8W-!s8W-!n,NFgz!!!!@s6p!g!!!!@s8W-!s*t(L
!!!'"s8W-!s8W-!J,fQLz!!!!`s53kW!!!!@s8W-!s1eU7!!!'"s8W-!s8W-!s8W-!
s8W-!s8W-!J,fQL!!3-"s8W-!s8W-!s8W-!s8W+Lzz!!!!$s8W-!s8W-!s8W-!s8W,7
zzzs8W-!s8W-!s8W,7zzz"98E$s8W-!s8W-!p](9oz!!!!@s7cQo!!!!@s8W-!s*t(L
!!!'"s8W-!s8W-!huE`Wz!!!$!s53kW!!!!@s8W-!s1eU7!!!'"s8W-!s8W-!s8W-!
s8W-!s8W-!^]4?7!!E9$s8W-!s8W-!s8W-!s8W,gzz!!!!0s8W-!s8W-!s8W-!s8W,g
zz!!!!(s8W-!s8W-!s8W,ozzz&-)\0s8W-!s8W-!qu?]sz!!!$!s82is!!!!@s8W-!
s*t(L!!!'"s8W-!s8W-!n,NFgz!!!'"s6p!g!!!!`s8W-!s1eU7!!!-$s8W-!s8W-!
s8W-!s8W-!s8W-!^]4?7!!E9$s8W-!s8W-!s8W-!s8W-!zz!!!"Ks8W-!s8W-!s8W-!
s8W-!zz!!!!@s8W-!s8W-!s8W-!J,fQLzzs8W-!s8W-!s8W-!s1eU7z!!!-$s82is
!!!!`s8W-!s1eU7!!!9(s8W-!s8W-!rr<$!z!!",@s6p!g!!!$!s8W-!s53kW!!!-$
s8W-!s8W-!s8W-!s8W-!s8W-!huE`W!!iQ(s8W-!s8W-!s8W-!s8W-!J,fQLz!!!"K
s8W-!s8W-!s8W-!s8W-!J,fQLz!!!!`s8W-!s8W-!s8W-!^]4?7z!!!!"s8W-!s8W-!
s8W-!s1eU7z!!!9(s82is!!!!`s8W-!s53kW!!!9(s8W-!s8W-!s*t(Lz!!#7`s7cQo
!!!$!s8W-!s6p!g!!!-$s8W-!s8W-!s8W-!s8W-!s8W-!n,NFg!"],0s8W-!s8W-!
s8W-!s8W-!n,NFgz!!!-$s8W-!s8W-!s8W-!s8W-!huE`Wz!!!-$s8W-!s8W-!s8W-!
n,NFgz!!!!@s8W-!s8W-!s8W-!s7cQoz!!#7`s8Duu!!!!`s8W-!s6p!g!!!Q0s8W-!
s8W-!s53kWz!!*'!s8Duu!!!$!s8W-!s7cQo!!!9(s8W-!s8W-!s8W-!s8W-!s8W-!
p](9o!$D7@s8W-!s8W-!s8W-!s8W-!p](9oz!!#7`s8W-!s8W-!s8W-!s8W-!qu?]s
z!!",@s8W-!s8W-!s8W-!qu?]sz!!!'"s8W-!s8W-!s8W-!s8Duuz!!*'!s8N'!!!!$!
s8W-!s7cQo!!",@s8W-!s8W-!s6p!gz!!E9$s8Duu!!!'"s8W-!s82is!!!Q0s8W-!
s8W-!s8W-!s8W-!s8W-!qu?]s!'gM`s8W-!s8W-!s8W-!s8W-!s*t(Lz!!*'!s8W-!
s8W-!s8W-!s8W-!rVuouz!!%NKs8W-!s8W-!s8W-!s1eU7z!!!9(s8W-!s8W-!s8W-!
s8Tk7z!!iQ(s8V!W!!!'"s8W-!s82is!!%NKs8W-!s8W-!s8N'!z!!iQ(s8N'!!!!-$
s8W-!s8Duu!!",@s8W-!s8W-!s8W-!s8W-!s8W-!rVuou!.Y%Ks8W-!s8W-!s8W-!
s8W-!s1eU7z!!3-"s8W-!s8W-!s8W-!s8W-!rVuouz!!%NKs8W-!s8W-!s8W-!s53kW
z!!!Q0s8W-!s8W-!s8W-!s8V!Wz!!iQ(s8VQg!!!'"s8W-!s8Duu!!%NKs8W-!s8W-!
s8RTLz!!iQ(s8RTL!!!9(s8W-!s8Tk7!!3-"s8W-!s8W-!s8W-!s8W-!s8W-!s1eU7
!WW3"s8W-!s8W-!s8W-!s8W-!s8Duuz!'gM`s8W-!s8W-!s8W-!s8W-!s82isz!'gM`
s8W-!s8W-!s8W-!s8Tk7z!!3-"s8W-!s8W-!s8W-!s8W*!z!.Y%Ks8Vio!!",@s8W-!
s8Tk7!!E9$s8W-!s8W-!s8Vusz!WW3"s8V!W!!",@s8W-!s8W*!!<<*!s8W-!s8W-!
s8W-!s8W-!s8W-!s8N'!5QCc`s8W-!s8W-!s8W-!s8W-!s8W+LzBE/#3s8W-!s8W-!
s8W-!s8W-!s8W&u!!!!"s8W-!s8W-!s8W-!s8W-!s8W,Wz&-)\0s8W-!s8W-!s8W-!
s8W,sz-ia5Hs8W,W!!iQ(s8W-!s8VWi!<<*!s8W-!s8W-!s8W,o!!!!"s8W-!s8W,7
!"],0s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!!!!-$s8W-!s8W-!s8W-!s8W-!s8W-!s8W,u!!!$!s8W-!s8W-!
s8W-!s8W-!s8W-!n,NG!s8W-!s8W-!s8W-!s8W-!s8W-!qu?_Hs8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!p](;Ds8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!J,fiS
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!!!!'"s8W-!s8W-!s8W-!s8W-!s8W-!p](:)
s8W-!s8W-!s8W-!s8W-!s8W-!rVurus8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!p](<os8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzs8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!zzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz~>

grestore end % Image Trailer grestore
grestore % EPS grestore
[{nextImage} 1 dict begin /Metadata {photoshop_metadata_stream} def currentdict end /PUT pdfmark
[/NamespacePop pdfmark

dvidict /dvispend get exec
 O O
2384855 d u
21320081 r(www)s
-34079 r(.else)s
-13107 r(vier)s
-28836 r(.com/locate/procedia)s O O O o
41313892 d u
-745871 d u
-34538709 d u
10383561 r
f2(Conference)s
196608 r(T)s
-27525 r(itle)s o
1618741 d u
-290973 r
f3(Click)s
278528 W(here,)S(type)S(the)S(title)S(of)S(your)S(paper)s
-44565 r(,)S(Capitalize)S(\frst)S(letter)s o
1628554 d u
4593526 r
f4(First)s
212992 W(Author)s u
141999 r
-309264 d
f5(a)s o
439557 r
f4(,)S(Second)S(Author)s u
141999 r
-309264 d
f5(b)s o
472954 r
f4(,)S(Third)S(Author)s u
141999 r
-309264 d
f5(a,b,)s
f6(\3)s O
1015808 d U
7349770 r
-190316 d
f7(a)s o
7579146 r
f8(F)s
-23593 r(ir)s
-5243 X(st)s
131072 W(a\016liation,)S(Addr)s
-19399 r(ess,)S(City)S(and)S(P)s
-41943 r(ostcode)T(,)S(Country)s o
655360 d U
7088150 r
-190316 d
f7(b)s o
7317526 r
f8(Second)s
131072 W(a\016liation,)S(Addr)s
-19399 r(ess,)S(City)S(and)S(P)s
-41943 r(ostcode)s
-5243 r(,)S(Country)s o
-2312203 r
1510211 d
26214 30670848 pr
1083014 d u
f9(Abstract)s o
1153434 d u
f10(Click)s
147456 W(here)S(and)S(insert)S(your)S(abstract)S(te)s
-8848 r(xt.)s o
707789 Y U U u
123273 r
-18209 d(c)s O M u
f11(\r)s O o
655884 r
f10(2014)s
147456 W(The)S(Authors.)s
182845 r(Else)s
-14746 r(vier)S(B.V)s
-76088 r(.)S(All)S(rights)S(reserv)s
-8848 r(ed.)s o y u(Peer)s
-11797 r(-re)s
-14746 W(vie)S(w)s
147456 W(under)S(responsibility)S(of)S([N)s
-20644 r(AME)S(OF)S(THE)S(ORGANIZA)s
-65471 r(TION].)s o
1187085 d u
f12(K)s
-20644 r(e)s
-17695 r(ywor)s
-21824 r(ds:)s
345374 r
f1(T)s
-41943 r(ype)s
131072 W(your)S(k)s
-5243 W(e)s
-7865 r(yw)S(ords)s
131072 W(here,)S(separated)S(by)S(semicolons)S(;)s o
802782 d
26214 30670848 pr
-524288 d
2950079 d U
f13(1.)s o
819200 r(Main)s
163840 r(T)s
-60294 r(ext)s o
1585971 Z u
786432 r
f14(Here)s
191161 W(introduce)S(the)S(paper)s
-26215 r(,)s
197992 r(and)S(put)S(a)S(nomenclature)S(if)S(necessary)s
-42599 r(,)s
197991 r(in)s
191162 X(a)S(box)S(with)S(the)S(same)S(font)S(size)S
(as)T(the)S(rest)S(of)S(the)s o
786432 Y u(paper)s
-36045 r(.)s
334382 r(The)s
207581 W(paragraphs)s
207580 X(continue)S(from)T(here)S(and)T(are)T(only)S(separated)T
(by)S(headings,)s
218515 W(subheadings,)S(images)s
207581 r(and)T(formulae.)s o y u(The)s
163840 W(section)S(headings)S(are)S(arranged)S(by)S(numbers,)S(bold)S
(and)S(10)S(pt.)s
203161 r(Here)S(follo)s
-16384 r(ws)S(further)S(instructions)S(for)S(authors.)s o
5042824 d U U
-4415159 d
26214 30697064 pr
5070519 d u
5070519 26214 sr u
-655360 d U
-3301375 d u
655360 r
f13(Nomenclatur)s
-11797 r(e)s o z U u
655360 r
f14(A)s O
1966080 r(radius)s
163840 r(of)s o y U u
655360 r(B)s O
1966080 r(position)s
163840 r(of)s o y U u
655360 r(C)s O
1966080 r(further)s
163840 W(nomenclature)S(continues)S(do)s
-16384 r(wn)S(the)S(page)S(inside)S(the)S(te)s
-9831 r(xt)S(box)s O O
30644636 r
5070519 26214 sr o
26214 d
26214 30697064 pr O O
2890113 d U
f15(1.1.)s o
1474560 r(Structur)s
-24249 r(e)s o
1572864 d u
786432 r
f14(Files)s
195554 W(must)S(be)s
195553 X(in)S(LaT)s
-45875 r(eX)s
195522 r(format)S(only)S(and)S(should)T(be)S(formatted)S(for)S
(direct)S(printing,)s
203482 r(using)T(the)S(CRC)s
195522 W(LaT)s
-45875 r(eX)S(template)s o y u(pro)s
-9831 r(vided.)s
203161 r(Figures)s
163840 W(and)S(tables)S(should)S(be)S(embedded)S(and)S(not)S
(supplied)S(separately)s
-42599 r(.)s o y u
786432 r(Please)s
195513 W(mak)s
-6554 r(e)S(sure)S(that)s
195514 X(you)S(use)S(as)S(much)S(as)S(possible)S(normal)T
(fonts)S(in)S(your)S(documents.)s
298180 r(Special)T(fonts,)s
203431 r(such)S(as)S(fonts)s o y u(used)s
218195 W(in)s
218196 X(the)S(F)s
-9831 r(ar)T(East)S(\(Japanese,)s
231784 W(Chinese,)S(K)s
-22938 r(orean,)S(etc.\))s
366228 r(may)s
218195 W(cause)T(problems)S(during)T(processing.)s
366227 r(T)s
-52429 r(o)T(a)s
-13108 W(v)S(oid)s
218195 r(unneces-)s o y u(sary)s
182256 W(errors)s
182257 X(you)S(are)T(strongly)S(advised)T(to)S(use)T(the)S
(`spellcheck)s
-6554 r(er')T(function)S(of)T(T)s
-45875 r(eX)s
182238 r(Editor)s
-36045 r(.)s
258410 r(F)s
-9831 r(ollo)s
-16384 r(w)T(this)S(order)T(when)S(typing)s o
1535180 d
16384 2359296 pr
632422 d U u
371852 r
-190316 d
f16(\3)s O
786432 r
f1(Corresponding)s
131072 X(author)s
-28836 r(.)s
162529 W(T)s
-36700 r(el.:)S(+0-000-000-0000)T(;)T(f)s
-5243 r(ax:)S(+0-000-000-0000.)s o
655361 d u
786432 r
f8(E-mail)s
131072 W(addr)s
-19399 r(ess:)S
f1(author@institute.xxx)s o
1409024 d O U U
-907019 d u
-2312203 r(2214-241X)s U U
240648 r
-16186 d(c)s O M u
131072 r
f17(\r)s O o
714080 r
f1(2014)s
131072 W(The)S(Authors.)s
162529 r(Else)s
-13107 r(vier)S(B.V)s
-67633 r(.)S(All)S(rights)S(reserv)s
-7865 r(ed.)s o
655360 Y u
-2312203 r(Peer)s
-10486 r(-re)s
-13107 W(vie)S(w)s
131072 W(under)S(responsibility)S(of)S([N)s
-18350 r(AME)S(OF)S(THE)S(ORGANIZA)s
-58196 r(TION].)s o y O O o
eop 
end
